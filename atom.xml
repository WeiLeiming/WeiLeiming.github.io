<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雷鸣的博客</title>
  <icon>https://www.gravatar.com/avatar/996d57f1e8c9bae0ac62f3a7b0149264</icon>
  <subtitle>生有涯，知无涯</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://willwei.me/"/>
  <updated>2019-02-16T13:13:58.971Z</updated>
  <id>http://willwei.me/</id>
  
  <author>
    <name>Leiming</name>
    <email>2008weileiming@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Shadowsocks</title>
    <link href="http://willwei.me/2018/11/30/Shadowsocks/"/>
    <id>http://willwei.me/2018/11/30/Shadowsocks/</id>
    <published>2018-11-30T20:34:00.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>最后更新时间：2019.2.16</p><h2 id="Shadowsocks部署"><a href="#Shadowsocks部署" class="headerlink" title="Shadowsocks部署"></a>Shadowsocks部署</h2><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>自备国外的VPS，我使用的是<a href="https://www.vultr.com/" target="_blank" rel="noopener">Vultr</a>家的日本线路</p><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>使用<a href="https://github.com/teddysun" target="_blank" rel="noopener">teddysun</a>的一键脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh &amp;&amp; chmod +x shadowsocks.sh &amp;&amp; ./shadowsocks-all.sh</span><br></pre></td></tr></table></figure><p>选择想要安装的版本即可。</p><a id="more"></a><h2 id="BBR加速"><a href="#BBR加速" class="headerlink" title="BBR加速"></a>BBR加速</h2><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> wget –no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh</span><br></pre></td></tr></table></figure><p>返回值一般为net.ipv4.tcp_available_congestion_control = reno cubic bbr说明BBR已完成安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure><p>返回值有tcp_bbr模块说明BBR已启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> lsmod | grep bbr</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最后更新时间：2019.2.16&lt;/p&gt;
&lt;h2 id=&quot;Shadowsocks部署&quot;&gt;&lt;a href=&quot;#Shadowsocks部署&quot; class=&quot;headerlink&quot; title=&quot;Shadowsocks部署&quot;&gt;&lt;/a&gt;Shadowsocks部署&lt;/h2&gt;&lt;h3 id=&quot;第一步&quot;&gt;&lt;a href=&quot;#第一步&quot; class=&quot;headerlink&quot; title=&quot;第一步&quot;&gt;&lt;/a&gt;第一步&lt;/h3&gt;&lt;p&gt;自备国外的VPS，我使用的是&lt;a href=&quot;https://www.vultr.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vultr&lt;/a&gt;家的日本线路&lt;/p&gt;
&lt;h3 id=&quot;第二步&quot;&gt;&lt;a href=&quot;#第二步&quot; class=&quot;headerlink&quot; title=&quot;第二步&quot;&gt;&lt;/a&gt;第二步&lt;/h3&gt;&lt;p&gt;使用&lt;a href=&quot;https://github.com/teddysun&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;teddysun&lt;/a&gt;的一键脚本&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt; wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh &amp;amp;&amp;amp; chmod +x shadowsocks.sh &amp;amp;&amp;amp; ./shadowsocks-all.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;选择想要安装的版本即可。&lt;/p&gt;
    
    </summary>
    
      <category term="奇淫巧技" scheme="http://willwei.me/categories/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
    
      <category term="奇淫巧技" scheme="http://willwei.me/tags/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
      <category term="Mac" scheme="http://willwei.me/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>配置SSH key</title>
    <link href="http://willwei.me/2018/08/27/%E9%85%8D%E7%BD%AESSH%20key/"/>
    <id>http://willwei.me/2018/08/27/配置SSH key/</id>
    <published>2018-08-27T21:29:16.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>最后更新时间：2018.10.30</p><p>这里以 GitHub 举例</p><h2 id="生成SSH"><a href="#生成SSH" class="headerlink" title="生成SSH"></a>生成SSH</h2><p>生成新的 SSH key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh-keygen -t rsa -C <span class="string">"xxx@mail.com"</span> -f ~/.ssh/github_id_rsa</span></span><br></pre></td></tr></table></figure><h2 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h2><p>配置 config 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vi ~/.ssh/config</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>如没有，则新建再配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> touch ~/.ssh/config</span></span><br></pre></td></tr></table></figure><p>在 config 文件中新增</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## github</span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/github_id_rsa</span><br></pre></td></tr></table></figure><p>接着在 GitHub 网站中加入公钥</p><h2 id="验证SSH"><a href="#验证SSH" class="headerlink" title="验证SSH"></a>验证SSH</h2><p>验证是否成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@github.com</span></span><br></pre></td></tr></table></figure><p>如果出现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi username! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>则表示成功，其它也类似操作。</p><h2 id="其他技巧"><a href="#其他技巧" class="headerlink" title="其他技巧"></a>其他技巧</h2><p>取消SSH秘钥密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> openssl rsa -<span class="keyword">in</span> ~/.ssh/id_rsa -out ~/.ssh/id_rsa</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最后更新时间：2018.10.30&lt;/p&gt;
&lt;p&gt;这里以 GitHub 举例&lt;/p&gt;
&lt;h2 id=&quot;生成SSH&quot;&gt;&lt;a href=&quot;#生成SSH&quot; class=&quot;headerlink&quot; title=&quot;生成SSH&quot;&gt;&lt;/a&gt;生成SSH&lt;/h2&gt;&lt;p&gt;生成新的 SSH key&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; ssh-keygen -t rsa -C &lt;span class=&quot;string&quot;&gt;&quot;xxx@mail.com&quot;&lt;/span&gt; -f ~/.ssh/github_id_rsa&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;配置SSH&quot;&gt;&lt;a href=&quot;#配置SSH&quot; class=&quot;headerlink&quot; title=&quot;配置SSH&quot;&gt;&lt;/a&gt;配置SSH&lt;/h2&gt;&lt;p&gt;配置 config 文件&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; vi ~/.ssh/config&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="奇淫巧技" scheme="http://willwei.me/categories/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
    
      <category term="奇淫巧技" scheme="http://willwei.me/tags/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
      <category term="Mac" scheme="http://willwei.me/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Mac下常用设置汇总</title>
    <link href="http://willwei.me/2018/05/10/Mac%E4%B8%8B%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE%E6%B1%87%E6%80%BB/"/>
    <id>http://willwei.me/2018/05/10/Mac下常用设置汇总/</id>
    <published>2018-05-10T09:18:25.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mac下常用设置汇总"><a href="#Mac下常用设置汇总" class="headerlink" title="Mac下常用设置汇总"></a>Mac下常用设置汇总</h1><h2 id="显示安全性与隐私里面无任何来源"><a href="#显示安全性与隐私里面无任何来源" class="headerlink" title="显示安全性与隐私里面无任何来源"></a>显示安全性与隐私里面无任何来源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo spctl --master-disable</span><br></pre></td></tr></table></figure><h2 id="隐藏文件显示隐藏设置"><a href="#隐藏文件显示隐藏设置" class="headerlink" title="隐藏文件显示隐藏设置"></a>隐藏文件显示隐藏设置</h2><p>显示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> defaults write com.apple.finder AppleShowAllFiles YES</span><br></pre></td></tr></table></figure><p>隐藏：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> defaults write com.apple.finder AppleShowAllFiles NO</span><br></pre></td></tr></table></figure><p>另一个更快的方式是快捷键：<code>Command + Shift + .</code></p><a id="more"></a><h2 id="修改终端下的默认HostName"><a href="#修改终端下的默认HostName" class="headerlink" title="修改终端下的默认HostName"></a>修改终端下的默认HostName</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo scutil --set HostName [新hostname]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Mac下常用设置汇总&quot;&gt;&lt;a href=&quot;#Mac下常用设置汇总&quot; class=&quot;headerlink&quot; title=&quot;Mac下常用设置汇总&quot;&gt;&lt;/a&gt;Mac下常用设置汇总&lt;/h1&gt;&lt;h2 id=&quot;显示安全性与隐私里面无任何来源&quot;&gt;&lt;a href=&quot;#显示安全性与隐私里面无任何来源&quot; class=&quot;headerlink&quot; title=&quot;显示安全性与隐私里面无任何来源&quot;&gt;&lt;/a&gt;显示安全性与隐私里面无任何来源&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt; sudo spctl --master-disable&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;隐藏文件显示隐藏设置&quot;&gt;&lt;a href=&quot;#隐藏文件显示隐藏设置&quot; class=&quot;headerlink&quot; title=&quot;隐藏文件显示隐藏设置&quot;&gt;&lt;/a&gt;隐藏文件显示隐藏设置&lt;/h2&gt;&lt;p&gt;显示：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt; defaults write com.apple.finder AppleShowAllFiles YES&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;隐藏：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt; defaults write com.apple.finder AppleShowAllFiles NO&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另一个更快的方式是快捷键：&lt;code&gt;Command + Shift + .&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="奇淫巧技" scheme="http://willwei.me/categories/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
    
      <category term="奇淫巧技" scheme="http://willwei.me/tags/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
      <category term="Mac" scheme="http://willwei.me/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>iPhone X适配</title>
    <link href="http://willwei.me/2018/02/05/iPhone%20X%E9%80%82%E9%85%8D/"/>
    <id>http://willwei.me/2018/02/05/iPhone X适配/</id>
    <published>2018-02-05T14:41:48.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="各种Bar在iPhone-X的高度"><a href="#各种Bar在iPhone-X的高度" class="headerlink" title="各种Bar在iPhone X的高度"></a>各种Bar在iPhone X的高度</h1><p>以下均为竖屏状态</p><h2 id="statusBar"><a href="#statusBar" class="headerlink" title="statusBar"></a>statusBar</h2><p>在 iPhone X 中状态栏的 frame 为</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fo5lqbllxvj30bg00smx8.jpg" alt="16BF80A4-7E3A-49DF-9101-D576A2464C52"></p><p>即高度为<code>44 points</code>，比其他机型的20 points 多出了<code>24 points</code>。</p><a id="more"></a><h2 id="navigationBar"><a href="#navigationBar" class="headerlink" title="navigationBar"></a>navigationBar</h2><p>在 iPhone X 中导航栏的 frame 为</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fo5mmainrpj30at00fa9z.jpg" alt="29D70DF4-F46C-479E-9FDC-14BCFB4820CA"></p><p>与其他机型是一致的，均为<code>44 points</code>。</p><h2 id="tabBar"><a href="#tabBar" class="headerlink" title="tabBar"></a>tabBar</h2><p>在 iPhone X 中 UITabBar 的 frame 为</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fo5meblfttj309q00e0sn.jpg" alt="2104736E-DCE5-4539-BB34-4EA60BB8C069"></p><p>即高度为<code>83 points</code>，比其他机型的49 points 多出了<code>34 points</code>。</p><h1 id="Safe-Area"><a href="#Safe-Area" class="headerlink" title="Safe Area"></a>Safe Area</h1><p>iOS11引入了 Safe Area 的概念，iPhone X 适配就是将我们的内容放置在 Safe Area 内</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fo5kvbcwuaj30fh0aa3yk.jpg" alt="9720C5AA-E093-4180-B5F3-4C9C8CAB54FD"></p><p>在 iOS11中 UIView 新增了一个属性可以用来获取当前 view 的安全区域，该属性在 <code>viewWillAppear</code> 后方能获取到正确的值</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@available</span>(iOS <span class="number">11.0</span>, *)</span><br><span class="line"><span class="keyword">open</span> <span class="keyword">var</span> safeAreaInsets: <span class="type">UIEdgeInsets</span> &#123; <span class="keyword">get</span> &#125;</span><br></pre></td></tr></table></figure><p>以上两种图的 <code>safeAreaInsets</code> 的值为</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 竖屏</span></span><br><span class="line"><span class="type">UIEdgeInsets</span>(top: <span class="number">44.0</span>, <span class="keyword">left</span>: <span class="number">0.0</span>, bottom: <span class="number">34.0</span>, <span class="keyword">right</span>: <span class="number">0.0</span>)</span><br><span class="line"><span class="comment">// 横屏</span></span><br><span class="line"><span class="type">UIEdgeInsets</span>(top: <span class="number">0.0</span>, <span class="keyword">left</span>: <span class="number">44.0</span>, bottom: <span class="number">21.0</span>, <span class="keyword">right</span>: <span class="number">44.0</span>)</span><br></pre></td></tr></table></figure><p>如果想要更改 Safe Area 的范围，可通过 <code>UIViewController</code> 的 <code>additionalSafeAreaInsets</code> 更改</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Custom container UIViewController subclasses can use this property to add to the overlay</span></span><br><span class="line"><span class="comment">that UIViewController calculates for the safeAreaInsets for contained view controllers.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@available</span>(iOS <span class="number">11.0</span>, *)</span><br><span class="line"><span class="keyword">open</span> <span class="keyword">var</span> additionalSafeAreaInsets: <span class="type">UIEdgeInsets</span></span><br></pre></td></tr></table></figure><p>当更改了 Safe Area，可通过以下两种方式获取到回调</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">UIView</span>.safeAreaInsetsDidChange()</span><br><span class="line"><span class="type">UIViewController</span>.viewSafeAreaInsetsDidChange()</span><br></pre></td></tr></table></figure><p>iOS11 废弃掉了 <code>topLayoutGuide</code> 和 <code>bottomLayoutGuide</code> ，<code>UIView</code> 新增了 <code>safeAreaLayoutGuide</code> 来做自动适配</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* The top of the safeAreaLayoutGuide indicates the unobscured top edge of the view (e.g, not behind</span></span><br><span class="line"><span class="comment">the status bar or navigation bar, if present). Similarly for the other edges.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@available</span>(iOS <span class="number">11.0</span>, *)</span><br><span class="line"><span class="keyword">open</span> <span class="keyword">var</span> safeAreaLayoutGuide: <span class="type">UILayoutGuide</span> &#123; <span class="keyword">get</span> &#125;</span><br></pre></td></tr></table></figure><h1 id="适配"><a href="#适配" class="headerlink" title="适配"></a>适配</h1><h2 id="AutoLayout"><a href="#AutoLayout" class="headerlink" title="AutoLayout"></a>AutoLayout</h2><p>因为新增了 <code>safeAreaLayoutGuide</code> ，自动适配时会自动加上这些 <code>safeLayoutGuide</code>，因此不需修改什么</p><p>注意：在 xib 中请检查 <code>Use Safe Area Layout Guides</code> 是否勾选（默认为开启）</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fo5nxpglz6j307304vjrq.jpg" alt="6764DF39-09D1-42D6-B9E8-C41C09FCC4F8"></p><h2 id="Frame"><a href="#Frame" class="headerlink" title="Frame"></a>Frame</h2><p>默认的 Safe Area 范围为</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 竖屏</span></span><br><span class="line"><span class="type">UIEdgeInsets</span>(top: <span class="number">44.0</span>, <span class="keyword">left</span>: <span class="number">0.0</span>, bottom: <span class="number">34.0</span>, <span class="keyword">right</span>: <span class="number">0.0</span>)</span><br><span class="line"><span class="comment">// 横屏</span></span><br><span class="line"><span class="type">UIEdgeInsets</span>(top: <span class="number">0.0</span>, <span class="keyword">left</span>: <span class="number">44.0</span>, bottom: <span class="number">21.0</span>, <span class="keyword">right</span>: <span class="number">44.0</span>)</span><br></pre></td></tr></table></figure><p>竖屏适配规则为电池栏由原来的 <code>20 points</code> 改为 <code>44 points</code>，底部留白 <code>34 points</code></p><p>横屏为左右各留白<code>44 points</code>，底部留白<code>21 points</code></p><h3 id="竖屏"><a href="#竖屏" class="headerlink" title="竖屏"></a>竖屏</h3><p><code>UIDevice</code> 新增检测 iPhone X 的方法</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">iPhoneX</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="type">UIScreen</span>.main.bounds.height == <span class="number">812</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>顶部带有 <code>navigationBar</code></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// kNavigationBarHeight</span></span><br><span class="line"><span class="keyword">let</span> kNavigationBarHeight: <span class="type">CGFloat</span> = <span class="type">UIDevice</span>.iPhoneX() ? <span class="number">88</span> : <span class="number">64</span></span><br></pre></td></tr></table></figure><p>顶部如不带 <code>navigationBar</code></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// kSafeAreaTopInset</span></span><br><span class="line"><span class="keyword">let</span> kSafeAreaTopInset: <span class="type">CGFloat</span> = <span class="type">UIDevice</span>.iPhoneX() ? <span class="number">44</span> : <span class="number">20</span></span><br></pre></td></tr></table></figure><p>底部如不带 <code>tabbar</code></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// kSafeAreaBottomInset</span></span><br><span class="line"><span class="keyword">let</span> kSafeAreaBottomInset: <span class="type">CGFloat</span> = <span class="type">UIDevice</span>.iPhoneX() ? <span class="number">34</span> : <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="横屏"><a href="#横屏" class="headerlink" title="横屏"></a>横屏</h3><p>横屏类似，就不在赘述</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://developer.apple.com/cn/ios/update-apps-for-iphone-x/" target="_blank" rel="noopener">苹果官方适配指南</a></p><p><a href="https://www.jianshu.com/p/370d82ba3939" target="_blank" rel="noopener">你可能需要为你的APP适配iOS11</a></p><p><a href="https://www.jianshu.com/p/63c0b6cc66fd" target="_blank" rel="noopener">最近很火的 Safe Area 到底是什么</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;各种Bar在iPhone-X的高度&quot;&gt;&lt;a href=&quot;#各种Bar在iPhone-X的高度&quot; class=&quot;headerlink&quot; title=&quot;各种Bar在iPhone X的高度&quot;&gt;&lt;/a&gt;各种Bar在iPhone X的高度&lt;/h1&gt;&lt;p&gt;以下均为竖屏状态&lt;/p&gt;
&lt;h2 id=&quot;statusBar&quot;&gt;&lt;a href=&quot;#statusBar&quot; class=&quot;headerlink&quot; title=&quot;statusBar&quot;&gt;&lt;/a&gt;statusBar&lt;/h2&gt;&lt;p&gt;在 iPhone X 中状态栏的 frame 为&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tKfTcgy1fo5lqbllxvj30bg00smx8.jpg&quot; alt=&quot;16BF80A4-7E3A-49DF-9101-D576A2464C52&quot;&gt;&lt;/p&gt;
&lt;p&gt;即高度为&lt;code&gt;44 points&lt;/code&gt;，比其他机型的20 points 多出了&lt;code&gt;24 points&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://willwei.me/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>修改Mac终端下的默认HostName</title>
    <link href="http://willwei.me/2018/01/15/%E4%BF%AE%E6%94%B9Mac%E7%BB%88%E7%AB%AF%E4%B8%8B%E7%9A%84%E9%BB%98%E8%AE%A4HostName/"/>
    <id>http://willwei.me/2018/01/15/修改Mac终端下的默认HostName/</id>
    <published>2018-01-15T09:03:24.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>修改Mac终端下的默认HostName</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo scutil --<span class="built_in">set</span> HostName [新hostname]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;修改Mac终端下的默认HostName&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td 
      
    
    </summary>
    
    
      <category term="奇淫巧技" scheme="http://willwei.me/tags/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
      <category term="Mac" scheme="http://willwei.me/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令总结</title>
    <link href="http://willwei.me/2018/01/11/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
    <id>http://willwei.me/2018/01/11/Git常用命令总结/</id>
    <published>2018-01-11T10:36:10.000Z</published>
    <updated>2019-02-16T13:13:58.967Z</updated>
    
    <content type="html"><![CDATA[<p>最后更新时间：2018.8.29</p><p>配置个人信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 配置个人信息</span><br><span class="line"><span class="meta">$</span> git config --global user.name "Your Name"</span><br><span class="line"><span class="meta">$</span> git config --global user.email "email@example.com"</span><br></pre></td></tr></table></figure><p>配置全局忽略文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 配置全局忽略文件</span><br><span class="line"><span class="meta">$</span> git config --global core.excludesfile ~/.gitignore_global</span><br></pre></td></tr></table></figure><p>克隆仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git clone -b dev git@gitlab.fx110.com:ios_fxchat/FXChatRepo.git</span><br></pre></td></tr></table></figure><a id="more"></a><p>查看仓库状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 查看仓库当前状态</span><br><span class="line"><span class="meta">$</span> git status</span><br></pre></td></tr></table></figure><p>提交修改</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 把文件提交到本地仓库</span><br><span class="line"><span class="meta">$</span> git commit -m "Add README.md"</span><br></pre></td></tr></table></figure><p>创建并切换分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 创建并切换到dev分支</span><br><span class="line"><span class="meta">$</span> git checkout -b dev</span><br></pre></td></tr></table></figure><p>删除本地分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 删除dev分支</span><br><span class="line"><span class="meta">$</span> git branch -d dev</span><br></pre></td></tr></table></figure><p>将本地新建分支提交到远程仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 提交本地dev分支作为远程的dev分支</span><br><span class="line"><span class="meta">$</span> git push origin dev:dev</span><br></pre></td></tr></table></figure><p>删除远程分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 远程dev分支将被删除，本地还在</span><br><span class="line"><span class="meta">$</span> git push origin :dev</span><br><span class="line">或</span><br><span class="line"><span class="meta">$</span> git push origin -d dev</span><br></pre></td></tr></table></figure><p>显示远程仓库的详细信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git remote show origin</span><br></pre></td></tr></table></figure><p>删除无效的远程追踪分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git remote prune origin</span><br></pre></td></tr></table></figure><p>查看命令记录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git reflog</span><br></pre></td></tr></table></figure><p>显示版本树</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git log --oneline --graph --decorate --all</span><br></pre></td></tr></table></figure><p>恢复项目的历史到某个时间点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git reset --hard &lt;SHA&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最后更新时间：2018.8.29&lt;/p&gt;
&lt;p&gt;配置个人信息&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt; 配置个人信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt; git config --global user.name &quot;Your Name&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt; git config --global user.email &quot;email@example.com&quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置全局忽略文件&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt; 配置全局忽略文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt; git config --global core.excludesfile ~/.gitignore_global&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;克隆仓库&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt; git clone -b dev git@gitlab.fx110.com:ios_fxchat/FXChatRepo.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://willwei.me/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>iOS面试记录</title>
    <link href="http://willwei.me/2017/10/16/iOS%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95/"/>
    <id>http://willwei.me/2017/10/16/iOS面试记录/</id>
    <published>2017-10-16T14:41:04.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>最后更新时间：2017.11.14</p><p>自己面试遇到或收集的一些面试题，在这里记录回答</p><a id="more"></a><h3 id="父类实现深拷贝时，子类如何实现深度拷贝。父类没有实现深拷贝时，子类如何实现深度拷贝。"><a href="#父类实现深拷贝时，子类如何实现深度拷贝。父类没有实现深拷贝时，子类如何实现深度拷贝。" class="headerlink" title="父类实现深拷贝时，子类如何实现深度拷贝。父类没有实现深拷贝时，子类如何实现深度拷贝。"></a>父类实现深拷贝时，子类如何实现深度拷贝。父类没有实现深拷贝时，子类如何实现深度拷贝。</h3><p>若想实现拷贝，则需遵从<code>NSCopying</code>协议（可变的是<code>NSMutableCopying</code>协议），实现该协议的方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- (id)copyWithZone:(NSZone *)zone;</span><br></pre></td></tr></table></figure><p>如果父类已实现深拷贝，子类只需重写<code>- (id)copyWithZone:(NSZone *)zone</code>，调用父类的<code>copyWithZone</code>，并对子类自己的属性进行处理即可。</p><p>父类如果没有实现深拷贝，那么不仅需要对子类的属性进行处理，还需要对父类的属性进行处理。</p><h3 id="KVO，NSNotification，delegate及block区别"><a href="#KVO，NSNotification，delegate及block区别" class="headerlink" title="KVO，NSNotification，delegate及block区别"></a>KVO，NSNotification，delegate及block区别</h3><p>KVO:键值观察，一对多，可以监听对象属性变化，只监听数据变化的时候常用</p><p>NSNotifiction:通知，一对多，相比于KVO多了一步发送通知的操作，但不局限于KVO只能监听属性，使用更加灵活</p><p>delegate:代理，一对一，比如两个类之间的传值，类A调用类B的方法，类B在执行过程中遇到问题通知类A，这时候我们可以用到代理</p><p>block:代码块，使用场景与delegate一致，能够直接访问上下文，使用block的地方和block的实现在同一个地方，比使用delegate时代码组织更连贯，更直观。回调比较多时使用delegate</p><h3 id="KVC如何实现，如何进行键值查找。KVO如何实现"><a href="#KVC如何实现，如何进行键值查找。KVO如何实现" class="headerlink" title="KVC如何实现，如何进行键值查找。KVO如何实现"></a>KVC如何实现，如何进行键值查找。KVO如何实现</h3><ul><li><p>调用<code>setValue:forKey:</code>：</p><ol><li><p>检查有没有跟key相同名称的set方法，如果有，就会调用set方法</p></li><li><p>如果set方法不存在，类方法<code>accessInstanceVariablesDirectly</code>（是否直接访问没有生成访问器的变量）返回<code>YES</code>（这是<code>NSKeyValueCodingCatogery</code>中实现的类方法，默认实现为返回<code>YES</code>），那么按_<strong>key</strong>，_is<strong>Key</strong>，<strong>key</strong>，is<strong>Key</strong>的顺序查找成员属性，如果有，则直接给成员属性赋值</p></li><li><p>如果还没找到，则调用<code>setValue:forUndefinedKey:</code>方法（默认实现是抛出异常，根据需要重写）</p></li></ol></li><li><p>调用<code>valueForKey:</code>：</p><ol><li>按get<strong>Key</strong>，<strong>key</strong>，is<strong>Key</strong>的顺序查找getter方法，如果有，直接调用。如果是bool、int等内建值类型，会做NSNumber的转换</li><li>如果没有找到getter，查找countOf<strong>Key</strong>、objectIn<strong>Key</strong>AtIndex:、<strong>key</strong>AtIndexes格式的方法。如果countOf<strong>Key</strong>和另外两个方法中的一个找到，那么就会返回一个可以响应NSArray所有方法的代理集合(collection proxy object)。发送给这个代理集合(collection proxy object)的NSArray消息方法，就会以countOf<strong>Key</strong>、objectIn<strong>Key</strong>AtIndex:、<strong>key</strong>AtIndexes这几个方法组合的形式调用。还有一个可选的get<strong>key</strong>:range:方法</li><li>还没查到的话，那么查找countOf<strong>Key</strong>、enumeratorOf<strong>Key</strong>、memberOf<strong>Key</strong>:格式的方法。如果这三个方法都找到，那么就返回一个可以响应NSSet所有方法的代理集合(collection proxy object)。发送给这个代理集合(collection proxy object)的NSSet消息方法，就会以countOf<strong>Key</strong>、enumeratorOf<strong>Key</strong>、memberOf<strong>Key</strong>:组合的形式调用</li><li>还是没查到，那么如果类方法<code>accessInstanceVariablesDirectly</code>返回<code>YES</code>，那么按_<strong>key</strong>，_is<strong>Key</strong>，<strong>key</strong>，is<strong>Key</strong>的顺序直接搜索成员名</li><li>再没查到，调用<code>valueForUndefinedKey:</code></li></ol><p>这有一篇KVC的文章，<a href="http://blog.csdn.net/u010123208/article/details/40425147" target="_blank" rel="noopener">前往</a></p></li><li><p>KVC实现原理：</p><p>KVC运用了一个isa-swizzling技术。isa-swizzling就是类型混合指针机制。KVC主要通过isa-swizzling，来实现其内部查找定位的。isa指针，如其名称所指，（就是is a kind of的意思），指向维护分发表的对象的类。该分发表实际上包含了指向实现类中的方法的指针，和其它数据</p></li><li><p>KVO实现原理：</p><p>当某个类的对象第一次被观察时，系统就会在运行期动态地创建该类的一个派生类，在这个派生类中重写基类中任何被观察属性的 setter 方法。派生类在被重写的 setter 方法实现真正的通知机制。这么做是基于设置属性会调用 setter 方法，而通过重写就获得了 KVO 需要的通知机制。当然前提是要通过遵循 KVO 的属性设置方式来变更属性值，如果仅是直接修改属性对应的成员变量，是无法实现 KVO 的。同时派生类还重写了 class 方法以“欺骗”外部调用者它就是起初的那个类。然后系统将这个对象的 isa 指针指向这个新诞生的派生类，因此这个对象就成为该派生类的对象了，因而在该对象上对 setter 的调用就会调用重写的 setter，从而激活键值通知机制。此外，派生类还重写了 dealloc 方法来释放资源</p><p>这有一篇KVO的文章，<a href="http://www.jianshu.com/p/e59bb8f59302" target="_blank" rel="noopener">前往</a></p></li></ul><h3 id="将一个函数在主线程执行的4种方法"><a href="#将一个函数在主线程执行的4种方法" class="headerlink" title="将一个函数在主线程执行的4种方法"></a>将一个函数在主线程执行的4种方法</h3><ul><li><p>GCD</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dispatch_async(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">&lt;#code#&gt;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>NSOperation</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">NSOperationQueue *mainQueue = [NSOperationQueue mainQueue];</span><br><span class="line">NSBlockOperation *operation = [NSBlockOperation blockOperationWithBlock:^&#123;</span><br><span class="line">    &lt;#code#&gt;</span><br><span class="line">&#125;];</span><br><span class="line">[mainQueue addOperation:operation];</span><br></pre></td></tr></table></figure></li><li><p>NSthread</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[NSThread mainThread] performSelector:@selector(&lt;#selector#&gt;) withObject:nil];</span><br></pre></td></tr></table></figure></li><li><p>RunLoop</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[NSRunLoop mainRunLoop] performSelector:@selector(&lt;#selector#&gt;) withObject:nil];</span><br></pre></td></tr></table></figure></li></ul><h3 id="如何让计时器调用一个类方法"><a href="#如何让计时器调用一个类方法" class="headerlink" title="如何让计时器调用一个类方法"></a>如何让计时器调用一个类方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[NSTimer scheduledTimerWithTimeInterval:1.0 repeats:NO block:^(NSTimer * _Nonnull timer) &#123;</span><br><span class="line">[[self class] classMethod];</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line">+ (void)classMethod &#123;</span><br><span class="line">    NSLog(@&quot;classMethod&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="如何重写类方法"><a href="#如何重写类方法" class="headerlink" title="如何重写类方法"></a>如何重写类方法</h3><p>在子类中实现一个和父类一样的类方法即可</p><h3 id="NSTimer创建后，会在哪个线程运行"><a href="#NSTimer创建后，会在哪个线程运行" class="headerlink" title="NSTimer创建后，会在哪个线程运行"></a>NSTimer创建后，会在哪个线程运行</h3><ul><li>使用<code>scheduledTimerWithTimeInterval:</code>创建的timer，在哪个线程创建就会加入哪个线程的RunLoop中运行</li><li>使用<code>timerWithTimeInterval:</code>和<code>initWithFireDate:</code>创建的timer，添加到哪个线程的RunLoop就会运行在哪个线程</li></ul><h3 id="id和NSObject-的区别"><a href="#id和NSObject-的区别" class="headerlink" title="id和NSObject *的区别"></a>id和NSObject *的区别</h3><ul><li><p><code>id</code>是一个<code>objc_object</code>结构体指针，是一种通用的对象类型，可以指向所有的<code>OC</code>对象而不仅限于<code>NSObject</code>，并且编译器不会做类型检查</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">typedef struct objc_object *id;</span><br><span class="line">struct objc_object &#123;</span><br><span class="line">    Class _Nonnull isa  OBJC_ISA_AVAILABILITY;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p><code>NSObject *</code>是<code>NSObject</code>类型的指针，只能指向<code>NSObject</code>及其子类，调用的也只能是<code>NSObject</code>里面的方法否则就要做强制类型转换</p></li><li>在OC中，不是所有的类都是继承于<code>NSObject</code>，所以<code>id</code>的范围比<code>NSObject *</code>广</li></ul><h3 id="编写一个冒泡排序"><a href="#编写一个冒泡排序" class="headerlink" title="编写一个冒泡排序"></a>编写一个冒泡排序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">            temp = arr[j];</span><br><span class="line">            arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">            arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="什么是ARC-（ARC是为了解决什么问题诞生的？）"><a href="#什么是ARC-（ARC是为了解决什么问题诞生的？）" class="headerlink" title="什么是ARC?（ARC是为了解决什么问题诞生的？）"></a>什么是ARC?（ARC是为了解决什么问题诞生的？）</h3><p>自动引用计数 ( ARC ) 是指内存管理中对引用采取自动计数的技术。在 LLVM 编译器中设置 ARC 为有效状态，就无需再次键入 retain 或 release 代码，这在降低程序崩溃、内存泄漏等风险的同时，很大程度上减少了开发程序的工作量。</p><h3 id="请解释以下-Keywords-的区别：assign-vs-weak-block-vs-weak"><a href="#请解释以下-Keywords-的区别：assign-vs-weak-block-vs-weak" class="headerlink" title="请解释以下 Keywords 的区别：assign vs weak, __block vs __weak"></a>请解释以下 Keywords 的区别：assign vs weak, __block vs __weak</h3><h3 id="block-在-ARC-和-非-ARC-下含义一样吗？"><a href="#block-在-ARC-和-非-ARC-下含义一样吗？" class="headerlink" title="__block 在 ARC 和 非 ARC 下含义一样吗？"></a>__block 在 ARC 和 非 ARC 下含义一样吗？</h3><h3 id="使用-atomic-一定是线程安全的吗？"><a href="#使用-atomic-一定是线程安全的吗？" class="headerlink" title="使用 atomic 一定是线程安全的吗？"></a>使用 atomic 一定是线程安全的吗？</h3><h3 id="描述一个你遇到过的-retain-cycle-例子"><a href="#描述一个你遇到过的-retain-cycle-例子" class="headerlink" title="描述一个你遇到过的 retain cycle 例子"></a>描述一个你遇到过的 retain cycle 例子</h3><h3 id="void-load-void-initialize-有什么用处？"><a href="#void-load-void-initialize-有什么用处？" class="headerlink" title="+(void)load; +(void)initialize; 有什么用处？"></a>+(void)load; +(void)initialize; 有什么用处？</h3><h3 id="为什么其他语言里叫函数调用，Objective-C-里则是给对象发消息（或者谈下对runtime的理解）"><a href="#为什么其他语言里叫函数调用，Objective-C-里则是给对象发消息（或者谈下对runtime的理解）" class="headerlink" title="为什么其他语言里叫函数调用，Objective-C 里则是给对象发消息（或者谈下对runtime的理解）"></a>为什么其他语言里叫函数调用，Objective-C 里则是给对象发消息（或者谈下对runtime的理解）</h3><h3 id="什么是-method-swizzling？"><a href="#什么是-method-swizzling？" class="headerlink" title="什么是 method swizzling？"></a>什么是 method swizzling？</h3><h3 id="UIView-和-CALayer-是啥关系？"><a href="#UIView-和-CALayer-是啥关系？" class="headerlink" title="UIView 和 CALayer 是啥关系？"></a>UIView 和 CALayer 是啥关系？</h3><h3 id="如何高性能的给-UIImageView-加个圆角？（不准说-layer-cornerRadius-）"><a href="#如何高性能的给-UIImageView-加个圆角？（不准说-layer-cornerRadius-）" class="headerlink" title="如何高性能的给 UIImageView 加个圆角？（不准说 layer.cornerRadius ）"></a>如何高性能的给 UIImageView 加个圆角？（不准说 layer.cornerRadius ）</h3><h3 id="使用-drawRect-有什么影响？"><a href="#使用-drawRect-有什么影响？" class="headerlink" title="使用 drawRect 有什么影响？"></a>使用 drawRect 有什么影响？</h3><h3 id="ASIHttpRequest-或者-SDWebImage-里面给UIImageView-加载图片的逻辑是什么样的？（把-UIImageView-放到-UITableViewCell-里面问更赞）"><a href="#ASIHttpRequest-或者-SDWebImage-里面给UIImageView-加载图片的逻辑是什么样的？（把-UIImageView-放到-UITableViewCell-里面问更赞）" class="headerlink" title="ASIHttpRequest 或者 SDWebImage 里面给UIImageView 加载图片的逻辑是什么样的？（把 UIImageView 放到 UITableViewCell 里面问更赞）"></a>ASIHttpRequest 或者 SDWebImage 里面给UIImageView 加载图片的逻辑是什么样的？（把 UIImageView 放到 UITableViewCell 里面问更赞）</h3><h3 id="麻烦你设计个简单的图片内存缓存器（移除策略是一定要说的）"><a href="#麻烦你设计个简单的图片内存缓存器（移除策略是一定要说的）" class="headerlink" title="麻烦你设计个简单的图片内存缓存器（移除策略是一定要说的）"></a>麻烦你设计个简单的图片内存缓存器（移除策略是一定要说的）</h3><h3 id="讲讲你用-Instruments-优化动画性能的经历"><a href="#讲讲你用-Instruments-优化动画性能的经历" class="headerlink" title="讲讲你用 Instruments 优化动画性能的经历"></a>讲讲你用 Instruments 优化动画性能的经历</h3><h3 id="loadView-是干嘛用的？"><a href="#loadView-是干嘛用的？" class="headerlink" title="loadView 是干嘛用的？"></a>loadView 是干嘛用的？</h3><h3 id="viewWillLayoutSubView-你总是知道的"><a href="#viewWillLayoutSubView-你总是知道的" class="headerlink" title="viewWillLayoutSubView 你总是知道的"></a>viewWillLayoutSubView 你总是知道的</h3><h3 id="GCD-里面有哪几种-Queue？"><a href="#GCD-里面有哪几种-Queue？" class="headerlink" title="GCD 里面有哪几种 Queue？"></a>GCD 里面有哪几种 Queue？</h3><h3 id="触摸事件的传递和响应"><a href="#触摸事件的传递和响应" class="headerlink" title="触摸事件的传递和响应"></a>触摸事件的传递和响应</h3><h3 id="属性后面可以有哪些属性修饰符"><a href="#属性后面可以有哪些属性修饰符" class="headerlink" title="属性后面可以有哪些属性修饰符"></a>属性后面可以有哪些属性修饰符</h3><h3 id="UIViewController的生命周期"><a href="#UIViewController的生命周期" class="headerlink" title="UIViewController的生命周期"></a>UIViewController的生命周期</h3><h3 id="APP的生命周期"><a href="#APP的生命周期" class="headerlink" title="APP的生命周期"></a>APP的生命周期</h3><h3 id="import-跟-include-，-class-有什么区别？"><a href="#import-跟-include-，-class-有什么区别？" class="headerlink" title="#import 跟 #include ，@class 有什么区别？"></a>#import 跟 #include ，@class 有什么区别？</h3><h3 id="适配不同尺寸屏幕的方案？"><a href="#适配不同尺寸屏幕的方案？" class="headerlink" title="适配不同尺寸屏幕的方案？"></a>适配不同尺寸屏幕的方案？</h3><h3 id="简单描述下客户端的缓存机制"><a href="#简单描述下客户端的缓存机制" class="headerlink" title="简单描述下客户端的缓存机制"></a>简单描述下客户端的缓存机制</h3><h3 id="UIImage-初始化一张图片有几种方法？简述各自的优缺点"><a href="#UIImage-初始化一张图片有几种方法？简述各自的优缺点" class="headerlink" title="UIImage 初始化一张图片有几种方法？简述各自的优缺点"></a>UIImage 初始化一张图片有几种方法？简述各自的优缺点</h3><h3 id="写一”标准”宏MIN，，这个宏输入两个参数并返回较小的一个"><a href="#写一”标准”宏MIN，，这个宏输入两个参数并返回较小的一个" class="headerlink" title="写一”标准”宏MIN，，这个宏输入两个参数并返回较小的一个"></a>写一”标准”宏MIN，，这个宏输入两个参数并返回较小的一个</h3><h3 id="什么是序列化和反序列化，可以用来做什么？如何在-OC-中实现复杂对象的存储？"><a href="#什么是序列化和反序列化，可以用来做什么？如何在-OC-中实现复杂对象的存储？" class="headerlink" title="什么是序列化和反序列化，可以用来做什么？如何在 OC 中实现复杂对象的存储？"></a>什么是序列化和反序列化，可以用来做什么？如何在 OC 中实现复杂对象的存储？</h3><h3 id="不用中间变量，用两种方法交换-A-和-B-的值"><a href="#不用中间变量，用两种方法交换-A-和-B-的值" class="headerlink" title="不用中间变量，用两种方法交换 A 和 B 的值"></a>不用中间变量，用两种方法交换 A 和 B 的值</h3><h3 id="打印的结果"><a href="#打印的结果" class="headerlink" title="打印的结果"></a>打印的结果</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">main() &#123;</span><br><span class="line">  <span class="keyword">int</span> a[<span class="number">5</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">  <span class="keyword">int</span> *ptr = (<span class="keyword">int</span> *)(&amp;a + <span class="number">1</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d, %d"</span>, *(a + <span class="number">1</span>), *(ptr - <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="请输入执行结果，并解释为什么？"><a href="#请输入执行结果，并解释为什么？" class="headerlink" title="请输入执行结果，并解释为什么？"></a>请输入执行结果，并解释为什么？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">NSLog(@&quot;222&quot;);</span><br><span class="line">dispatch_sync(dispatch_get_main_queue(), ^() &#123;</span><br><span class="line">    NSLog(@&quot;222&quot;);</span><br><span class="line">&#125;);</span><br><span class="line">NSLog(@&quot;222&quot;);</span><br></pre></td></tr></table></figure><h3 id="写一个线程安全的单例类"><a href="#写一个线程安全的单例类" class="headerlink" title="写一个线程安全的单例类"></a>写一个线程安全的单例类</h3><h3 id="假设有一个字符串-aabcad-，请写一段程序，去掉字符串中不相邻的重复字符串，即上述字符串处理之后的输出结果为：aabcd"><a href="#假设有一个字符串-aabcad-，请写一段程序，去掉字符串中不相邻的重复字符串，即上述字符串处理之后的输出结果为：aabcd" class="headerlink" title="假设有一个字符串 aabcad ，请写一段程序，去掉字符串中不相邻的重复字符串，即上述字符串处理之后的输出结果为：aabcd"></a>假设有一个字符串 aabcad ，请写一段程序，去掉字符串中不相邻的重复字符串，即上述字符串处理之后的输出结果为：aabcd</h3><h3 id="用-obj-c-写一个快速排序"><a href="#用-obj-c-写一个快速排序" class="headerlink" title="用 obj-c 写一个快速排序"></a>用 obj-c 写一个快速排序</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最后更新时间：2017.11.14&lt;/p&gt;
&lt;p&gt;自己面试遇到或收集的一些面试题，在这里记录回答&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://willwei.me/tags/iOS/"/>
    
      <category term="面试" scheme="http://willwei.me/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Mac下生成项目结构目录</title>
    <link href="http://willwei.me/2017/09/18/Mac%E4%B8%8B%E7%94%9F%E6%88%90%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E7%9B%AE%E5%BD%95/"/>
    <id>http://willwei.me/2017/09/18/Mac下生成项目结构目录/</id>
    <published>2017-09-18T10:09:39.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Install-tree"><a href="#Install-tree" class="headerlink" title="Install tree"></a>Install <a href="http://braumeister.org/formula/tree" target="_blank" rel="noopener">tree</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> brew install tree</span><br></pre></td></tr></table></figure><h2 id="Help"><a href="#Help" class="headerlink" title="Help"></a>Help</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> man tree</span><br></pre></td></tr></table></figure><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> tree -L 4 &gt; directory.txt</span><br></pre></td></tr></table></figure><a id="more"></a><p><code>-L 4</code>表示向下遍历目录最大级数。</p><p>然后将目录结构输出到<code>directory.txt</code>中。</p><p>更多用法查看help。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── LICENSE</span><br><span class="line">├── README.md</span><br><span class="line">├── backup</span><br><span class="line">├── conf</span><br><span class="line">├── directory.txt</span><br><span class="line">├── dist</span><br><span class="line">├── ios</span><br><span class="line">├── requirements.txt</span><br><span class="line">└── www</span><br><span class="line">    ├── __pycache__</span><br><span class="line">    │   ├── apis.cpython-36.pyc</span><br><span class="line">    │   ├── config.cpython-36.pyc</span><br><span class="line">    │   ├── config_default.cpython-36.pyc</span><br><span class="line">    │   ├── config_override.cpython-36.pyc</span><br><span class="line">    │   ├── coroweb.cpython-36.pyc</span><br><span class="line">    │   ├── coroweb_test.cpython-36.pyc</span><br><span class="line">    │   ├── handlers.cpython-36.pyc</span><br><span class="line">    │   ├── markdown2.cpython-36.pyc</span><br><span class="line">    │   ├── models.cpython-36.pyc</span><br><span class="line">    │   └── orm.cpython-36.pyc</span><br><span class="line">    ├── apis.py</span><br><span class="line">    ├── app.py</span><br><span class="line">    ├── app_coroweb_test.py</span><br><span class="line">    ├── config.py</span><br><span class="line">    ├── config_default.py</span><br><span class="line">    ├── config_override.py</span><br><span class="line">    ├── coroweb.py</span><br><span class="line">    ├── coroweb_test.py</span><br><span class="line">    ├── handlers.py</span><br><span class="line">    ├── markdown2.py</span><br><span class="line">    ├── models.py</span><br><span class="line">    ├── orm.py</span><br><span class="line">    ├── orm_test.py</span><br><span class="line">    ├── pymonitor.py</span><br><span class="line">    ├── schema.sql</span><br><span class="line">    ├── static</span><br><span class="line">    │   ├── css</span><br><span class="line">    │   │   ├── addons</span><br><span class="line">    │   │   ├── awesome.css</span><br><span class="line">    │   │   ├── uikit.almost-flat.min.css</span><br><span class="line">    │   │   ├── uikit.gradient.min.css</span><br><span class="line">    │   │   └── uikit.min.css</span><br><span class="line">    │   ├── fonts</span><br><span class="line">    │   │   ├── FontAwesome.otf</span><br><span class="line">    │   │   ├── fontawesome-webfont.eot</span><br><span class="line">    │   │   ├── fontawesome-webfont.ttf</span><br><span class="line">    │   │   └── fontawesome-webfont.woff</span><br><span class="line">    │   ├── img</span><br><span class="line">    │   │   └── user.png</span><br><span class="line">    │   └── js</span><br><span class="line">    │       ├── awesome.js</span><br><span class="line">    │       ├── jquery.min.js</span><br><span class="line">    │       ├── sha1.min.js</span><br><span class="line">    │       ├── sticky.min.js</span><br><span class="line">    │       ├── uikit.min.js</span><br><span class="line">    │       └── vue.min.js</span><br><span class="line">    └── templates</span><br><span class="line">        ├── __base__.html</span><br><span class="line">        ├── blog.html</span><br><span class="line">        ├── blogs.html</span><br><span class="line">        ├── manage_blog_edit.html</span><br><span class="line">        ├── manage_blogs.html</span><br><span class="line">        ├── manage_comments.html</span><br><span class="line">        ├── manage_users.html</span><br><span class="line">        ├── register.html</span><br><span class="line">        ├── signin.html</span><br><span class="line">        └── test.html</span><br><span class="line"></span><br><span class="line">13 directories, 54 files</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Install-tree&quot;&gt;&lt;a href=&quot;#Install-tree&quot; class=&quot;headerlink&quot; title=&quot;Install tree&quot;&gt;&lt;/a&gt;Install &lt;a href=&quot;http://braumeister.org/formula/tree&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;tree&lt;/a&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt; brew install tree&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Help&quot;&gt;&lt;a href=&quot;#Help&quot; class=&quot;headerlink&quot; title=&quot;Help&quot;&gt;&lt;/a&gt;Help&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt; man tree&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Usage&quot;&gt;&lt;a href=&quot;#Usage&quot; class=&quot;headerlink&quot; title=&quot;Usage&quot;&gt;&lt;/a&gt;Usage&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt; tree -L 4 &amp;gt; directory.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="奇淫巧技" scheme="http://willwei.me/categories/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
    
      <category term="奇淫巧技" scheme="http://willwei.me/tags/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
      <category term="Mac" scheme="http://willwei.me/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>React Native入门遇到的一些问题</title>
    <link href="http://willwei.me/2017/09/11/React%20Native%E5%85%A5%E9%97%A8%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>http://willwei.me/2017/09/11/React Native入门遇到的一些问题/</id>
    <published>2017-09-11T17:08:10.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>最后更新时间：2018.6.7</p><p>记录学习<a href="https://github.com/facebook/react-native" target="_blank" rel="noopener">React Native</a>过程中踩过的坑。</p><a id="more"></a><h2 id="镜像源设置"><a href="#镜像源设置" class="headerlink" title="镜像源设置"></a>镜像源设置</h2><p><strong>npm</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org --global</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm config <span class="built_in">set</span> disturl https://npm.taobao.org/dist --global</span></span><br></pre></td></tr></table></figure><p><strong>yarn</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yarn config <span class="built_in">set</span> registry https://registry.npm.taobao.org --global</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yarn config <span class="built_in">set</span> disturl https://npm.taobao.org/dist --global</span></span><br></pre></td></tr></table></figure><h2 id="安装React-Native时出错"><a href="#安装React-Native时出错" class="headerlink" title="安装React Native时出错"></a>安装React Native时出错</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install -g react-native-cli</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">npm WARN checkPermissions Missing write access to /usr/local/lib/node_modules/react-native-cli</span><br><span class="line">npm WARN checkPermissions Missing write access to /usr/local/lib/node_modules</span><br><span class="line">/usr/local/lib</span><br><span class="line">└── react-native-cli@2.0.1</span><br><span class="line"></span><br><span class="line">npm ERR! Darwin 16.6.0</span><br><span class="line">npm ERR! argv "/usr/local/bin/node" "/usr/local/bin/npm" "install" "-g" "react-native-cli"</span><br><span class="line">npm ERR! node v6.11.3</span><br><span class="line">npm ERR! npm  v3.10.10</span><br><span class="line">npm ERR! path /usr/local/lib/node_modules/react-native-cli</span><br><span class="line">npm ERR! code EACCES</span><br><span class="line">npm ERR! errno -13</span><br><span class="line">npm ERR! syscall access</span><br><span class="line"></span><br><span class="line">npm ERR! Error: EACCES: permission denied, access '/usr/local/lib/node_modules/react-native-cli'</span><br><span class="line">npm ERR!     at Error (native)</span><br><span class="line">npm ERR!  &#123; Error: EACCES: permission denied, access '/usr/local/lib/node_modules/react-native-cli'</span><br><span class="line">npm ERR!     at Error (native)</span><br><span class="line">npm ERR!   errno: -13,</span><br><span class="line">npm ERR!   code: 'EACCES',</span><br><span class="line">npm ERR!   syscall: 'access',</span><br><span class="line">npm ERR!   path: '/usr/local/lib/node_modules/react-native-cli' &#125;</span><br><span class="line">npm ERR!</span><br><span class="line">npm ERR! Please try running this command again as root/Administrator.</span><br><span class="line"></span><br><span class="line">npm ERR! Please include the following file with any support request:</span><br><span class="line">npm ERR!     /Users/willwei/ReactNative/npm-debug.log</span><br></pre></td></tr></table></figure><p>权限问题</p><p>解决方法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo npm install -g react-native-cli</span></span><br></pre></td></tr></table></figure><h2 id="初始化工程时出错"><a href="#初始化工程时出错" class="headerlink" title="初始化工程时出错"></a>初始化工程时出错</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> react-native init NewProject</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line">This will walk you through creating a new React Native project in /Users/willwei/ReactNative/AwesomeProject</span><br><span class="line">Using yarn v1.0.1</span><br><span class="line">Installing react-native...</span><br><span class="line">yarn add v1.0.1</span><br><span class="line">info No lockfile found.</span><br><span class="line">[1/4] 🔍  Resolving packages...</span><br><span class="line">warning connect@2.30.2: connect 2.x series is deprecated</span><br><span class="line">[2/4] 🚚  Fetching packages...</span><br><span class="line">error An unexpected error occurred: "http://registry.npm.taobao.org/fbjs/download/fbjs-0.8.15.tgz: ETIMEDOUT".</span><br><span class="line">info If you think this is a bug, please open a bug report with the information provided in "/Users/willwei/ReactNative/AwesomeProject/yarn-error.log".</span><br><span class="line">info Visit https://yarnpkg.com/en/docs/cli/add for documentation about this command.</span><br><span class="line">&#123; Error: Command failed: yarn add react-native --exact</span><br><span class="line">    at checkExecSyncError (child_process.js:472:13)</span><br><span class="line">    at execSync (child_process.js:512:13)</span><br><span class="line">    at run (/usr/local/lib/node_modules/react-native-cli/index.js:294:5)</span><br><span class="line">    at createProject (/usr/local/lib/node_modules/react-native-cli/index.js:249:3)</span><br><span class="line">    at init (/usr/local/lib/node_modules/react-native-cli/index.js:200:5)</span><br><span class="line">    at Object.&lt;anonymous&gt; (/usr/local/lib/node_modules/react-native-cli/index.js:153:7)</span><br><span class="line">    at Module._compile (module.js:570:32)</span><br><span class="line">    at Object.Module._extensions..js (module.js:579:10)</span><br><span class="line">    at Module.load (module.js:487:32)</span><br><span class="line">    at tryModuleLoad (module.js:446:12)</span><br><span class="line">  error: null,</span><br><span class="line">  cmd: 'yarn add react-native --exact',</span><br><span class="line">  file: '/bin/sh',</span><br><span class="line">  args: [ '/bin/sh', '-c', 'yarn add react-native --exact' ],</span><br><span class="line">  options:</span><br><span class="line">   &#123; stdio: [ [Object], [Object], [Object] ],</span><br><span class="line">     shell: true,</span><br><span class="line">     file: '/bin/sh',</span><br><span class="line">     args: [ '/bin/sh', '-c', 'yarn add react-native --exact' ],</span><br><span class="line">     envPairs:</span><br><span class="line">      [ 'TERM_SESSION_ID=w0t0p0:2155C89E-E974-4A48-8B9B-DA10C1F5B604',</span><br><span class="line">        'SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.mSKRWxvqHf/Listeners',</span><br><span class="line">        'Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.etmtp2jjxL/Render',</span><br><span class="line">        'COLORFGBG=12;8',</span><br><span class="line">        'ITERM_PROFILE=Default',</span><br><span class="line">        'XPC_FLAGS=0x0',</span><br><span class="line">        'LANG=zh_CN.UTF-8',</span><br><span class="line">        'PWD=/Users/willwei/ReactNative',</span><br><span class="line">        'SHELL=/bin/zsh',</span><br><span class="line">        'TERM_PROGRAM_VERSION=3.0.14',</span><br><span class="line">        'TERM_PROGRAM=iTerm.app',</span><br><span class="line">        'PATH=/Users/willwei/.rvm/gems/ruby-2.3.0/bin:/Users/willwei/.rvm/gems/ruby-2.3.0@global/bin:/Users/willwei/.rvm/rubies/ruby-2.3.0/bin:/Users/willwei/mysql/bin:/usr/local/mysql/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/willwei/.rvm/bin',</span><br><span class="line">        'TERM=xterm-256color',</span><br><span class="line">        'HOME=/Users/willwei',</span><br><span class="line">        'TMPDIR=/var/folders/00/l74f8gln3qxcpx9gzdxps6dc0000gn/T/',</span><br><span class="line">        'USER=willwei',</span><br><span class="line">        'XPC_SERVICE_NAME=0',</span><br><span class="line">        'LOGNAME=willwei',</span><br><span class="line">        'ITERM_SESSION_ID=w0t0p0:2155C89E-E974-4A48-8B9B-DA10C1F5B604',</span><br><span class="line">        '__CF_USER_TEXT_ENCODING=0x1F5:0x19:0x34',</span><br><span class="line">        'SHLVL=1',</span><br><span class="line">        'OLDPWD=/Users/willwei',</span><br><span class="line">        'ZSH=/Users/willwei/.oh-my-zsh',</span><br><span class="line">        'PAGER=less',</span><br><span class="line">        'LESS=-R',</span><br><span class="line">        'LSCOLORS=Gxfxcxdxbxegedabagacad',</span><br><span class="line">        'LC_CTYPE=zh_CN.UTF-8',</span><br><span class="line">        'rvm_prefix=/Users/willwei',</span><br><span class="line">        'rvm_path=/Users/willwei/.rvm',</span><br><span class="line">        'rvm_bin_path=/Users/willwei/.rvm/bin',</span><br><span class="line">        '_system_type=Darwin',</span><br><span class="line">        '_system_name=OSX',</span><br><span class="line">        '_system_version=10.12',</span><br><span class="line">        '_system_arch=x86_64',</span><br><span class="line">        'rvm_version=1.27.0 (latest)',</span><br><span class="line">        'GEM_HOME=/Users/willwei/.rvm/gems/ruby-2.3.0',</span><br><span class="line">        'GEM_PATH=/Users/willwei/.rvm/gems/ruby-2.3.0:/Users/willwei/.rvm/gems/ruby-2.3.0@global',</span><br><span class="line">        'MY_RUBY_HOME=/Users/willwei/.rvm/rubies/ruby-2.3.0',</span><br><span class="line">        'IRBRC=/Users/willwei/.rvm/rubies/ruby-2.3.0/.irbrc',</span><br><span class="line">        'RUBY_VERSION=ruby-2.3.0',</span><br><span class="line">        'rvm_alias_expanded=',</span><br><span class="line">        'rvm_bin_flag=',</span><br><span class="line">        'rvm_docs_type=',</span><br><span class="line">        'rvm_gemstone_package_file=',</span><br><span class="line">        'rvm_gemstone_url=',</span><br><span class="line">        'rvm_niceness=',</span><br><span class="line">        'rvm_nightly_flag=',</span><br><span class="line">        'rvm_only_path_flag=',</span><br><span class="line">        'rvm_proxy=',</span><br><span class="line">        'rvm_quiet_flag=',</span><br><span class="line">        'rvm_ruby_bits=',</span><br><span class="line">        'rvm_ruby_file=',</span><br><span class="line">        'rvm_ruby_make=',</span><br><span class="line">        'rvm_ruby_make_install=',</span><br><span class="line">        'rvm_ruby_mode=',</span><br><span class="line">        'rvm_script_name=',</span><br><span class="line">        'rvm_sdk=',</span><br><span class="line">        'rvm_silent_flag=',</span><br><span class="line">        'rvm_use_flag=',</span><br><span class="line">        'rvm_wrapper_name=',</span><br><span class="line">        'rvm_hook=',</span><br><span class="line">        '_=/usr/local/bin/react-native' ] &#125;,</span><br><span class="line">  envPairs:</span><br><span class="line">   [ 'TERM_SESSION_ID=w0t0p0:2155C89E-E974-4A48-8B9B-DA10C1F5B604',</span><br><span class="line">     'SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.mSKRWxvqHf/Listeners',</span><br><span class="line">     'Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.etmtp2jjxL/Render',</span><br><span class="line">     'COLORFGBG=12;8',</span><br><span class="line">     'ITERM_PROFILE=Default',</span><br><span class="line">     'XPC_FLAGS=0x0',</span><br><span class="line">     'LANG=zh_CN.UTF-8',</span><br><span class="line">     'PWD=/Users/willwei/ReactNative',</span><br><span class="line">     'SHELL=/bin/zsh',</span><br><span class="line">     'TERM_PROGRAM_VERSION=3.0.14',</span><br><span class="line">     'TERM_PROGRAM=iTerm.app',</span><br><span class="line">     'PATH=/Users/willwei/.rvm/gems/ruby-2.3.0/bin:/Users/willwei/.rvm/gems/ruby-2.3.0@global/bin:/Users/willwei/.rvm/rubies/ruby-2.3.0/bin:/Users/willwei/mysql/bin:/usr/local/mysql/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/willwei/.rvm/bin',</span><br><span class="line">     'TERM=xterm-256color',</span><br><span class="line">     'HOME=/Users/willwei',</span><br><span class="line">     'TMPDIR=/var/folders/00/l74f8gln3qxcpx9gzdxps6dc0000gn/T/',</span><br><span class="line">     'USER=willwei',</span><br><span class="line">     'XPC_SERVICE_NAME=0',</span><br><span class="line">     'LOGNAME=willwei',</span><br><span class="line">     'ITERM_SESSION_ID=w0t0p0:2155C89E-E974-4A48-8B9B-DA10C1F5B604',</span><br><span class="line">     '__CF_USER_TEXT_ENCODING=0x1F5:0x19:0x34',</span><br><span class="line">     'SHLVL=1',</span><br><span class="line">     'OLDPWD=/Users/willwei',</span><br><span class="line">     'ZSH=/Users/willwei/.oh-my-zsh',</span><br><span class="line">     'PAGER=less',</span><br><span class="line">     'LESS=-R',</span><br><span class="line">     'LSCOLORS=Gxfxcxdxbxegedabagacad',</span><br><span class="line">     'LC_CTYPE=zh_CN.UTF-8',</span><br><span class="line">     'rvm_prefix=/Users/willwei',</span><br><span class="line">     'rvm_path=/Users/willwei/.rvm',</span><br><span class="line">     'rvm_bin_path=/Users/willwei/.rvm/bin',</span><br><span class="line">     '_system_type=Darwin',</span><br><span class="line">     '_system_name=OSX',</span><br><span class="line">     '_system_version=10.12',</span><br><span class="line">     '_system_arch=x86_64',</span><br><span class="line">     'rvm_version=1.27.0 (latest)',</span><br><span class="line">     'GEM_HOME=/Users/willwei/.rvm/gems/ruby-2.3.0',</span><br><span class="line">     'GEM_PATH=/Users/willwei/.rvm/gems/ruby-2.3.0:/Users/willwei/.rvm/gems/ruby-2.3.0@global',</span><br><span class="line">     'MY_RUBY_HOME=/Users/willwei/.rvm/rubies/ruby-2.3.0',</span><br><span class="line">     'IRBRC=/Users/willwei/.rvm/rubies/ruby-2.3.0/.irbrc',</span><br><span class="line">     'RUBY_VERSION=ruby-2.3.0',</span><br><span class="line">     'rvm_alias_expanded=',</span><br><span class="line">     'rvm_bin_flag=',</span><br><span class="line">     'rvm_docs_type=',</span><br><span class="line">     'rvm_gemstone_package_file=',</span><br><span class="line">     'rvm_gemstone_url=',</span><br><span class="line">     'rvm_niceness=',</span><br><span class="line">     'rvm_nightly_flag=',</span><br><span class="line">     'rvm_only_path_flag=',</span><br><span class="line">     'rvm_proxy=',</span><br><span class="line">     'rvm_quiet_flag=',</span><br><span class="line">     'rvm_ruby_bits=',</span><br><span class="line">     'rvm_ruby_file=',</span><br><span class="line">     'rvm_ruby_make=',</span><br><span class="line">     'rvm_ruby_make_install=',</span><br><span class="line">     'rvm_ruby_mode=',</span><br><span class="line">     'rvm_script_name=',</span><br><span class="line">     'rvm_sdk=',</span><br><span class="line">     'rvm_silent_flag=',</span><br><span class="line">     'rvm_use_flag=',</span><br><span class="line">     'rvm_wrapper_name=',</span><br><span class="line">     'rvm_hook=',</span><br><span class="line">     '_=/usr/local/bin/react-native' ],</span><br><span class="line">  stderr: null,</span><br><span class="line">  stdout: null,</span><br><span class="line">  pid: 7971,</span><br><span class="line">  output: [ null, null, null ],</span><br><span class="line">  signal: null,</span><br><span class="line">  status: 1 &#125;</span><br><span class="line">Command `yarn add react-native --exact` failed.</span><br></pre></td></tr></table></figure><p>解决方法：</p><p>重新设置镜像源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yarn config <span class="built_in">set</span> registry https://registry.npm.taobao.org --global</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yarn config <span class="built_in">set</span> disturl https://npm.taobao.org/dist --global</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最后更新时间：2018.6.7&lt;/p&gt;
&lt;p&gt;记录学习&lt;a href=&quot;https://github.com/facebook/react-native&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;React Native&lt;/a&gt;过程中踩过的坑。&lt;/p&gt;
    
    </summary>
    
    
      <category term="React Native" scheme="http://willwei.me/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>Mac命令行代理配置</title>
    <link href="http://willwei.me/2017/09/11/Mac%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/"/>
    <id>http://willwei.me/2017/09/11/Mac命令行代理配置/</id>
    <published>2017-09-11T11:34:34.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>本教程建立在已安装并配置好<a href="https://github.com/shadowsocks/ShadowsocksX-NG" target="_blank" rel="noopener">Shadowsocks</a>基础上，适用于Mac电脑。</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fjfmoyf8ysj304604ejrp.jpg" alt="C330FAF9-3F03-43EB-A13B-278304156749"></p><a id="more"></a><h1 id="使用polipo"><a href="#使用polipo" class="headerlink" title="使用polipo"></a>使用polipo</h1><ol><li><p>安装<a href="https://github.com/jech/polipo" target="_blank" rel="noopener">polipo</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install polipo</span><br></pre></td></tr></table></figure></li><li><p>打开polipo配置文件<code>/usr/local/opt/polipo/homebrew.mxcl.polipo.plist</code>，加上<code>&lt;string&gt;socksParentProxy=localhost:1086&lt;/string&gt;</code></p><p>Socks5的监听端口号从Shadowsocks偏好设置中获取：</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fjfm06l1isj30fo0c075g.jpg" alt="E3A8355D-C3E1-41B7-AB24-CA9D52B6089D"></p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fjflyxv4k5j30k30auq4q.jpg" alt="0222370E-6B7E-48EF-9E20-4D2F34D99BC9"></p></li><li><p>启动polipo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ln -sfv /usr/local/opt/polipo/*.plist ~/Library/LaunchAgents </span><br><span class="line">$ launchctl load ~/Library/LaunchAgents/homebrew.mxcl.polipo.plist</span><br></pre></td></tr></table></figure></li><li><p>设置代理</p><p>在命令行配置文件(bash是~/.bash_profile，zsh是~/.zshrc)中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alias poff=&quot;unset http_proxy; unset https_proxy&quot;</span><br><span class="line">alias pon=&quot;export http_proxy=http://localhost:8123;export https_proxy=http://localhost:8123&quot;</span><br></pre></td></tr></table></figure></li><li><p>立即生效配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bash:</span><br><span class="line">$ source ~/.bash_profile</span><br><span class="line">zsh:</span><br><span class="line">$ source ~/.zshrc</span><br></pre></td></tr></table></figure></li><li><p>使用方法，命令行执行</p><p>开启：pon</p><p>关闭：poff</p></li><li><p>测试使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ pon</span><br><span class="line">$ curl ip.cn</span><br></pre></td></tr></table></figure><p>以下是我的代理</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fjfmjl2s6ij30bi00xwej.jpg" alt="A847B781-288E-4D9E-AF81-D53C51A6821A"></p></li></ol><h1 id="新方法"><a href="#新方法" class="headerlink" title="新方法"></a>新方法</h1><p>polipo目前已经停止维护，但是现在Mac版的Shadowsocks已经支持HTTP代理，所以命令行翻墙已经不需要这么复杂了。</p><ol><li><p>复制Shadowsocks代理命令</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fjfmsowdlmj307m0a6go3.jpg" alt="6E64ED2D-EBDA-4F08-9AF4-40142568AC1C"></p></li><li><p>命令行执行复制的命令，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087;</span><br></pre></td></tr></table></figure><p>测试下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl ip.cn</span><br></pre></td></tr></table></figure><p>到这一步已经可以了，但是这样每次开个终端都得重新输入命令，所以将命令直接写入配置文件。</p></li><li><p>配置文件修改</p><p>在命令行配置文件(bash是~/.bash_profile，zsh是~/.zshrc)中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alias poff=&quot;unset http_proxy; unset https_proxy&quot;</span><br><span class="line">alias pon=&quot;export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087&quot;</span><br></pre></td></tr></table></figure></li><li><p>立即生效配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bash:</span><br><span class="line">$ source ~/.bash_profile</span><br><span class="line">zsh:</span><br><span class="line">$ source ~/.zshrc</span><br></pre></td></tr></table></figure></li><li><p>使用方法，命令行执行：</p><p>开启：pon</p><p>关闭：poff</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本教程建立在已安装并配置好&lt;a href=&quot;https://github.com/shadowsocks/ShadowsocksX-NG&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Shadowsocks&lt;/a&gt;基础上，适用于Mac电脑。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws3.sinaimg.cn/large/006tKfTcly1fjfmoyf8ysj304604ejrp.jpg&quot; alt=&quot;C330FAF9-3F03-43EB-A13B-278304156749&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="奇淫巧技" scheme="http://willwei.me/categories/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
    
      <category term="奇淫巧技" scheme="http://willwei.me/tags/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
      <category term="Mac" scheme="http://willwei.me/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>GitHub--Syncing a fork</title>
    <link href="http://willwei.me/2017/09/11/GitHub--Syncing%20a%20fork/"/>
    <id>http://willwei.me/2017/09/11/GitHub--Syncing a fork/</id>
    <published>2017-09-11T10:35:00.000Z</published>
    <updated>2019-02-16T13:13:58.967Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p><code>git remote -v</code> — 查看所有远程主机及地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br><span class="line">origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)</span><br><span class="line">origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)</span><br></pre></td></tr></table></figure></li><li><p><code>git remote add upstream</code> — 添加远程主机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git</span><br></pre></td></tr></table></figure><p>查看添加后远程主机 — <code>git remote -v</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br><span class="line">origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)</span><br><span class="line">origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)</span><br><span class="line">upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (fetch)</span><br><span class="line">upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (push)</span><br></pre></td></tr></table></figure><a id="more"></a></li><li><p><code>git fetch upstream</code> — 从远程获取最新版本</p></li><li><p><code>git checkout master</code> — 确保在<code>master</code>分支</p></li><li><p><code>git merge upstream/master</code> — 将<code>upstream/master</code>上的更改合并到本地<code>master</code>分支</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git remote -v&lt;/code&gt; — 查看所有远程主机及地址&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git remote -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git remote add upstream&lt;/code&gt; — 添加远程主机&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看添加后远程主机 — &lt;code&gt;git remote -v&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git remote -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (fetch)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (push)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="GitHub" scheme="http://willwei.me/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>记录Mac安装MySQL Community Server</title>
    <link href="http://willwei.me/2017/08/09/%E8%AE%B0%E5%BD%95Mac%E5%AE%89%E8%A3%85MySQL%20Community%20Server/"/>
    <id>http://willwei.me/2017/08/09/记录Mac安装MySQL Community Server/</id>
    <published>2017-08-09T15:23:22.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>最后更新时间：2018.7.31</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol><li>下载 <a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">MySQL Community Server</a> DMG安装包</li><li>点击安装包安装。<strong>注意：</strong>在最后安装完成后会弹出一个标题为<strong>MySQL Installer</strong>的提示框，里面有这么句话 <code>root@localhost: XXXXXXXXXXXX</code> 冒号后面是密码，复制记住。</li><li>安装成功</li></ol><a id="more"></a><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><ol><li><p>打开系统偏好设置</p></li><li><p>点击 <code>MySQL</code></p></li><li><p>点击 <code>Start MySQL Server</code> 开启MySQL服务</p></li><li><p>打开命令行，这个时候命令行输入 <code>mysql</code> 会提示找不到命令。配置系统环境变量，命令行输入命令：</p><p>使用bash，编辑<code>~/.bash_profile</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim ~/.bash_profile</span></span><br></pre></td></tr></table></figure><p>使用zsh，则编辑<code>~/.zshrc</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim ~/.zshrc</span></span><br></pre></td></tr></table></figure></li><li><p>使用vim编辑，添加：</p><p>~/.bash_profile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=&quot;$PATH:/usr/local/mysql/bin&quot;</span><br></pre></td></tr></table></figure><p>~/.zshrc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$HOME/mysql/bin:/usr/local/mysql/bin:$PATH</span><br></pre></td></tr></table></figure></li><li><p>输入命令，立即生效</p><p>bash</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> ~/.bash_profile</span></span><br></pre></td></tr></table></figure><p>zsh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> ~/.zshrc</span></span><br></pre></td></tr></table></figure></li><li><p>输入命令，登录MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mysql -uroot -p</span></span><br></pre></td></tr></table></figure></li><li><p>提示输入密码，输入安装包刚安装完后弹出的提示框中的初始密码</p></li><li><p>成功进入MySQL后，修改初始密码，输入命令，newpass替换为自己的密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> SET PASSWORD FOR <span class="string">'root'</span>@<span class="string">'localhost'</span> = PASSWORD(<span class="string">'newpass'</span>);</span></span><br></pre></td></tr></table></figure></li><li><p>修改完成</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最后更新时间：2018.7.31&lt;/p&gt;
&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;下载 &lt;a href=&quot;https://dev.mysql.com/downloads/mysql/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MySQL Community Server&lt;/a&gt; DMG安装包&lt;/li&gt;
&lt;li&gt;点击安装包安装。&lt;strong&gt;注意：&lt;/strong&gt;在最后安装完成后会弹出一个标题为&lt;strong&gt;MySQL Installer&lt;/strong&gt;的提示框，里面有这么句话 &lt;code&gt;root@localhost: XXXXXXXXXXXX&lt;/code&gt; 冒号后面是密码，复制记住。&lt;/li&gt;
&lt;li&gt;安装成功&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Mac" scheme="http://willwei.me/tags/Mac/"/>
    
      <category term="MySQL" scheme="http://willwei.me/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode--Find Minimum in Rotated Sorted Array</title>
    <link href="http://willwei.me/2017/07/25/LeetCode--Find%20Minimum%20in%20Rotated%20Sorted%20Array/"/>
    <id>http://willwei.me/2017/07/25/LeetCode--Find Minimum in Rotated Sorted Array/</id>
    <published>2017-07-25T14:47:20.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="153-Find-Minimum-in-Rotated-Sorted-Array"><a href="#153-Find-Minimum-in-Rotated-Sorted-Array" class="headerlink" title="153. Find Minimum in Rotated Sorted Array"></a>153. Find Minimum in Rotated Sorted Array</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.</p><p>(i.e., <code>0 1 2 4 5 6 7</code> might become <code>4 5 6 7 0 1 2</code>).</p><p>Find the minimum element.</p><p>You may assume no duplicate exists in the array.</p><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>input:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nums: [<span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span>]</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span>: <span class="number">0</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>首先输入的是一个没有重复元素的升序数组进行轮转后的数组。所以如果一个区间nums[startIndex] &lt; nums[endIndex]，那么该区间就一定是升序的，最小值就是nums[startIndex]。</p><p>采用二分法，获取中间元素的值，nums[middleIndex]，middleIndex = (startIndex + endIndex) / 2</p><ul><li>如果nums[middleIndex] &gt; nums[startIndex]，那么最小值在右半区域。</li><li>如果nums[middleIndex] &lt; nums[startIndex]，那么最小值在左半区域。</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> <span class="built_in">count</span> = nums.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">count</span> == <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="built_in">count</span> == <span class="number">1</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> nums[<span class="number">0</span>]</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="built_in">count</span> == <span class="number">2</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">min</span>(nums[<span class="number">0</span>], nums[<span class="number">1</span>])</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> startIndex = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> endIndex = <span class="built_in">count</span> - <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> startIndex &lt; endIndex &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[startIndex] &lt; nums[endIndex] &#123;</span><br><span class="line">                <span class="keyword">return</span> nums[startIndex]</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> middleIndex = (startIndex + endIndex) / <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[middleIndex] &gt; nums[startIndex] &#123;</span><br><span class="line">                startIndex = middleIndex + <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                endIndex = middleIndex</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[startIndex]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;153-Find-Minimum-in-Rotated-Sorted-Array&quot;&gt;&lt;a href=&quot;#153-Find-Minimum-in-Rotated-Sorted-Array&quot; class=&quot;headerlink&quot; title=&quot;153. Find Minimum in Rotated Sorted Array&quot;&gt;&lt;/a&gt;153. Find Minimum in Rotated Sorted Array&lt;/h1&gt;&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.&lt;/p&gt;
&lt;p&gt;(i.e., &lt;code&gt;0 1 2 4 5 6 7&lt;/code&gt; might become &lt;code&gt;4 5 6 7 0 1 2&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Find the minimum element.&lt;/p&gt;
&lt;p&gt;You may assume no duplicate exists in the array.&lt;/p&gt;
&lt;h2 id=&quot;Example&quot;&gt;&lt;a href=&quot;#Example&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h2&gt;&lt;p&gt;input:&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nums: [&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;output:&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://willwei.me/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://willwei.me/tags/Algorithm/"/>
    
      <category term="LeetCode" scheme="http://willwei.me/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>iOS自带悬浮窗调试工具</title>
    <link href="http://willwei.me/2017/07/13/iOS%E8%87%AA%E5%B8%A6%E6%82%AC%E6%B5%AE%E7%AA%97%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    <id>http://willwei.me/2017/07/13/iOS自带悬浮窗调试工具/</id>
    <published>2017-07-13T16:42:27.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p><code>UIDebuggingInformationOverlay</code>是<code>UIWindow</code>的私有子类，可以帮助开发人员调试自己的iOS应用程序。</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>添加代码后使用两根手指同时点击状态栏即可调出。</p><h2 id="Objective-C用法"><a href="#Objective-C用法" class="headerlink" title="Objective-C用法"></a>Objective-C用法</h2><p>在<code>AppDelegate.m</code>的<code>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions</code>方法中加入以下代码即可在Debug模式下开启</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#if DEBUG</span><br><span class="line">id overlayClass = NSClassFromString(@&quot;UIDebuggingInformationOverlay&quot;);</span><br><span class="line">[overlayClass performSelector:NSSelectorFromString(@&quot;prepareDebuggingOverlay&quot;)];</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure><h2 id="Swift用法"><a href="#Swift用法" class="headerlink" title="Swift用法"></a>Swift用法</h2><p>在<code>AppDelegate.swift</code>的<code>func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -&gt; Bool</code>方法中添加以下代码</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#<span class="keyword">if</span> <span class="type">DEBUG</span></span><br><span class="line"><span class="keyword">let</span> overlayClass = <span class="type">NSClassFromString</span>(<span class="string">"UIDebuggingInformationOverlay"</span>) <span class="keyword">as</span>? <span class="type">UIWindow</span>.<span class="type">Type</span></span><br><span class="line"><span class="number">_</span> = overlayClass?.perform(<span class="type">NSSelectorFromString</span>(<span class="string">"prepareDebuggingOverlay"</span>))</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><p>简单介绍下各个选项是干嘛的，具体使用试试就知道了，就不在赘述。</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fhmwm5phj9j30e50cidhc.jpg" alt="FEE5F646-6A8F-4428-8C7B-F01C539FA9F0"></p><ul><li>View Hierarchy: 查看View的层次关系和相关属性</li><li>VC Hierarchy: 查看ViewController的层次关系和相关属性</li><li>Ivar Explorer: 查看UIApplication的成员属性</li><li>Measure: 测量组件大小</li><li>Spec Compare: 设计图对比。需在<code>Info.plist</code>中添加<code>NSPhotoLibraryUsageDescription</code>权限</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;UIDebuggingInformationOverlay&lt;/code&gt;是&lt;code&gt;UIWindow&lt;/code&gt;的私有子类，可以帮助开发人员调试自己的iOS应用程序。&lt;/p&gt;
&lt;h1 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h1&gt;&lt;p&gt;添加代码后使用两根手指同时点击状态栏即可调出。&lt;/p&gt;
&lt;h2 id=&quot;Objective-C用法&quot;&gt;&lt;a href=&quot;#Objective-C用法&quot; class=&quot;headerlink&quot; title=&quot;Objective-C用法&quot;&gt;&lt;/a&gt;Objective-C用法&lt;/h2&gt;&lt;p&gt;在&lt;code&gt;AppDelegate.m&lt;/code&gt;的&lt;code&gt;- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions&lt;/code&gt;方法中加入以下代码即可在Debug模式下开启&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#if DEBUG&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;id overlayClass = NSClassFromString(@&amp;quot;UIDebuggingInformationOverlay&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[overlayClass performSelector:NSSelectorFromString(@&amp;quot;prepareDebuggingOverlay&amp;quot;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Swift用法&quot;&gt;&lt;a href=&quot;#Swift用法&quot; class=&quot;headerlink&quot; title=&quot;Swift用法&quot;&gt;&lt;/a&gt;Swift用法&lt;/h2&gt;&lt;p&gt;在&lt;code&gt;AppDelegate.swift&lt;/code&gt;的&lt;code&gt;func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -&amp;gt; Bool&lt;/code&gt;方法中添加以下代码&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;DEBUG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; overlayClass = &lt;span class=&quot;type&quot;&gt;NSClassFromString&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;UIDebuggingInformationOverlay&quot;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;UIWindow&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Type&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; = overlayClass?.perform(&lt;span class=&quot;type&quot;&gt;NSSelectorFromString&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;prepareDebuggingOverlay&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#endif&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://willwei.me/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://willwei.me/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Swift: sizeof与MemoryLayout</title>
    <link href="http://willwei.me/2017/06/30/Swift%20sizeof%E4%B8%8EMemoryLayout/"/>
    <id>http://willwei.me/2017/06/30/Swift sizeof与MemoryLayout/</id>
    <published>2017-06-30T10:19:16.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sizeof"><a href="#sizeof" class="headerlink" title="sizeof"></a>sizeof</h1><p>在<code>C</code>语言中，可能会经常与<code>sizeof</code>打交道，用来计算数据占用内存大小。在<code>C</code>中<code>sizeof</code>即可以作用于类型也可以作用于某个实际的变量，并返回其在内存中的尺寸<code>size_t</code>。</p><p>在<code>Swift 3</code>以前，也有<code>sizeof</code>，不过与<code>C</code>中的运算符不同，它经过了一层包装，变成了一个只接受类型的方法，而接受具体值的则为另一个方法: <code>sizeofValue</code></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sizeof</span>&lt;T&gt;<span class="params">(<span class="number">_</span>: T.<span class="keyword">Type</span>)</span></span> -&gt; <span class="type">Int</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sizeofValue</span>&lt;T&gt;<span class="params">(<span class="number">_</span>: T)</span></span> -&gt; <span class="type">Int</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>不过<code>sizeofValue</code>接受的虽然是具体值，但是返回的是这个值的实际大小，而不是其内容的大小。所以与<code>C</code>中用<code>sizeof</code>拿来计算数组内容在内存中占据的尺寸不一样：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C</span></span><br><span class="line"><span class="keyword">char</span> bytes[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="keyword">sizeof</span>(bytes);          <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> bytes[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="keyword">sizeof</span>(bytes);          <span class="comment">// 12</span></span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Swift</span></span><br><span class="line"><span class="keyword">let</span> bytes = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">sizeofValue</span>(bytes)      <span class="comment">// 8: 64位系统一个引用的长度</span></span><br></pre></td></tr></table></figure><h1 id="MemoryLayout"><a href="#MemoryLayout" class="headerlink" title="MemoryLayout"></a>MemoryLayout</h1><p>在<code>Swift 3</code>中<code>sizeof</code>和<code>sizeofValue</code>相关的被另一个新的枚举所替代，那就是<code>MemoryLayout</code>。</p><h2 id="基本使用方法"><a href="#基本使用方法" class="headerlink" title="基本使用方法"></a>基本使用方法</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">10</span></span><br><span class="line"><span class="type">MemoryLayout</span>&lt;<span class="type">Int</span>&gt;.size              <span class="comment">// 8</span></span><br><span class="line"><span class="type">MemoryLayout</span>.size(ofValue: a)       <span class="comment">// 8</span></span><br></pre></td></tr></table></figure><h2 id="属性方法介绍"><a href="#属性方法介绍" class="headerlink" title="属性方法介绍"></a>属性方法介绍</h2><p><code>MemoryLayout</code>有3个非常有用的属性及3个对应的<code>Value</code>方法，返回值都为<code>Int</code>类型。</p><h3 id="size"><a href="#size" class="headerlink" title="size"></a>size</h3><p>实例使用<code>size(ofValue: T)</code></p><p><code>T</code>占用连续内存的大小，单位是字节。类型的大小不包括任何动态分配或不合适的存储，当<code>T</code>是类类型时，<code>MemoryLayout&lt;T&gt;.size</code>是相同的，不论<code>T</code>中存储属性有多少。当使用<code>unsafe pointer</code>为<code>T</code>的多个实例分配内存时，使用多个该类型的<code>stride</code>而不是其<code>size</code>，这个涉及到内存对齐的问题，详见<a href="#stride">stride</a>。</p><h3 id="stride"><a href="#stride" class="headerlink" title="stride"></a>stride</h3><p>实例使用<code>stride(ofValue: T)</code></p><p>当存储在连续存储器或<code>Array&lt;T&gt;</code>中时，从<code>T</code>的任意一个实例开始到下一个实例开始所占用的连续内存字节大小。</p><p>示例：</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fh389yep0ij30dv03174a.jpg" alt="FA7434C3-B586-4E6D-BCA7-EEE42460C837"></p><p>这是一个数组，里面有四个<code>T</code>类型元素，每个<code>T</code>元素的大小为<code>size</code>个字节，但是因为内存对齐的限制，每个<code>T</code>类型元素实际消耗的内存空间为<code>stride</code>个字节，<code>stride - size</code>个字节则为每个元素因为内存对齐而浪费的内存空间。</p><h3 id="alignment"><a href="#alignment" class="headerlink" title="alignment"></a>alignment</h3><p>实例使用<code>alignment(ofValue: T)</code></p><p><code>T</code>的默认内存对齐方式，单位为字节。许多计算机系统对基本数据类型的合法地址做出了一些限制，要求某种数据类型对象的地址必须是某个值<strong>K</strong>(通常是 2、4或者8)的倍数。这种对齐限制简化了形成处理器和内存系统之间接口的硬件设计。<strong>对齐原则是任何K字节的基本对象的地址必须是K的倍数。</strong></p><p><code>MemoryLayout.alignment</code>就代表着数据类型<code>T</code>的内存对齐原则。而且在64位系统下，最大的内存对齐原则是8字节。</p><h2 id="基本数据类型的MemoryLayout"><a href="#基本数据类型的MemoryLayout" class="headerlink" title="基本数据类型的MemoryLayout"></a>基本数据类型的<code>MemoryLayout</code></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 值类型</span></span><br><span class="line"><span class="type">MemoryLayout</span>&lt;<span class="type">Int</span>&gt;.size                                      <span class="comment">// 8</span></span><br><span class="line"><span class="type">MemoryLayout</span>&lt;<span class="type">Int</span>&gt;.<span class="built_in">stride</span>                                    <span class="comment">// 8</span></span><br><span class="line"><span class="type">MemoryLayout</span>&lt;<span class="type">Int</span>&gt;.alignment                                 <span class="comment">// 8</span></span><br><span class="line"></span><br><span class="line"><span class="type">MemoryLayout</span>&lt;<span class="type">String</span>&gt;.size                                   <span class="comment">// 24</span></span><br><span class="line"><span class="type">MemoryLayout</span>&lt;<span class="type">String</span>&gt;.<span class="built_in">stride</span>                                 <span class="comment">// 24</span></span><br><span class="line"><span class="type">MemoryLayout</span>&lt;<span class="type">String</span>&gt;.alignment                              <span class="comment">// 8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 引用类型 T</span></span><br><span class="line"><span class="type">MemoryLayout</span>&lt;<span class="type">T</span>&gt;.size                                        <span class="comment">// 8</span></span><br><span class="line"><span class="type">MemoryLayout</span>&lt;<span class="type">T</span>&gt;.<span class="built_in">stride</span>                                      <span class="comment">// 8</span></span><br><span class="line"><span class="type">MemoryLayout</span>&lt;<span class="type">T</span>&gt;.alignment                                   <span class="comment">// 8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 指针类型</span></span><br><span class="line"><span class="type">MemoryLayout</span>&lt;unsafeMutablePointer&lt;<span class="type">T</span>&gt;&gt;.size                  <span class="comment">// 8</span></span><br><span class="line"><span class="type">MemoryLayout</span>&lt;unsafeMutablePointer&lt;<span class="type">T</span>&gt;&gt;.<span class="built_in">stride</span>                <span class="comment">// 8</span></span><br><span class="line"><span class="type">MemoryLayout</span>&lt;unsafeMutablePointer&lt;<span class="type">T</span>&gt;&gt;.alignment             <span class="comment">// 8</span></span><br><span class="line"></span><br><span class="line"><span class="type">MemoryLayout</span>&lt;unsafeMutableBufferPointer&lt;<span class="type">T</span>&gt;&gt;.size            <span class="comment">// 16</span></span><br><span class="line"><span class="type">MemoryLayout</span>&lt;unsafeMutableBufferPointer&lt;<span class="type">T</span>&gt;&gt;.<span class="built_in">stride</span>          <span class="comment">// 16</span></span><br><span class="line"><span class="type">MemoryLayout</span>&lt;unsafeMutableBufferPointer&lt;<span class="type">T</span>&gt;&gt;.alignment       <span class="comment">// 16</span></span><br></pre></td></tr></table></figure><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>以上所有都在64位系统中得到</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0101-standardizing-sizeof-naming.md" target="_blank" rel="noopener">SE-0101: Reconfiguring <code>sizeof</code> and related functions into a unified <code>MemoryLayout</code> struct</a></li></ul><ul><li><p><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0136-memory-layout-of-values.md" target="_blank" rel="noopener">SE-0136: Memory Layout of Values</a></p></li><li><p><a href="http://swifter.tips/sizeof-sizeofvalue/" target="_blank" rel="noopener">sizeof 和 sizeofValue</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/zIkB9KnAt1YPWGOOwyqY3Q" target="_blank" rel="noopener">Swift 对象内存模型探究（一）</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;sizeof&quot;&gt;&lt;a href=&quot;#sizeof&quot; class=&quot;headerlink&quot; title=&quot;sizeof&quot;&gt;&lt;/a&gt;sizeof&lt;/h1&gt;&lt;p&gt;在&lt;code&gt;C&lt;/code&gt;语言中，可能会经常与&lt;code&gt;sizeof&lt;/code&gt;打交道，用来计算数据占用内存大小。在&lt;code&gt;C&lt;/code&gt;中&lt;code&gt;sizeof&lt;/code&gt;即可以作用于类型也可以作用于某个实际的变量，并返回其在内存中的尺寸&lt;code&gt;size_t&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;Swift 3&lt;/code&gt;以前，也有&lt;code&gt;sizeof&lt;/code&gt;，不过与&lt;code&gt;C&lt;/code&gt;中的运算符不同，它经过了一层包装，变成了一个只接受类型的方法，而接受具体值的则为另一个方法: &lt;code&gt;sizeofValue&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sizeof&lt;/span&gt;&amp;lt;T&amp;gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;: T.&lt;span class=&quot;keyword&quot;&gt;Type&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sizeofValue&lt;/span&gt;&amp;lt;T&amp;gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;: T)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Swift" scheme="http://willwei.me/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode--3Sum Closest</title>
    <link href="http://willwei.me/2017/06/29/LeetCode--3Sum%20Closest/"/>
    <id>http://willwei.me/2017/06/29/LeetCode--3Sum Closest/</id>
    <published>2017-06-29T16:17:13.000Z</published>
    <updated>2019-02-16T13:13:58.967Z</updated>
    
    <content type="html"><![CDATA[<h1 id="16-3Sum-Closest"><a href="#16-3Sum-Closest" class="headerlink" title="16. 3Sum Closest"></a>16. 3Sum Closest</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given an array <em>S</em> of <em>n</em> integers, find three integers in <em>S</em> such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.</p><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">For example, given array S = &#123;-1 2 1 -4&#125;, and target = 1.</span><br><span class="line"></span><br><span class="line">The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>紧接上一题<a href="http://willwei.me/2017/06/28/LeetCode--3Sum/">15. 3Sum</a>，难度相当，解法类似，去掉去重，增加变量来计算判断查找的值和给定的值的差值就行，就不在赘言了。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">threeSumClosest</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> &lt; <span class="number">3</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> sortedNums = nums.sorted(by: &lt;)</span><br><span class="line">        <span class="keyword">let</span> <span class="built_in">count</span> = sortedNums.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">var</span> <span class="built_in">distance</span> = <span class="type">Int</span>.<span class="built_in">max</span></span><br><span class="line">        <span class="keyword">var</span> result = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> i &lt; <span class="built_in">count</span>-<span class="number">2</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> j = i + <span class="number">1</span></span><br><span class="line">            <span class="keyword">var</span> k = <span class="built_in">count</span> - <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> j &lt; k &#123;</span><br><span class="line">                <span class="keyword">let</span> tmpSum = sortedNums[i] + sortedNums[j] + sortedNums[k]</span><br><span class="line">                <span class="keyword">var</span> tmpDistance = <span class="number">0</span></span><br><span class="line">                <span class="keyword">if</span> tmpSum &lt; target &#123;</span><br><span class="line">                    tmpDistance = target - tmpSum</span><br><span class="line">                    <span class="keyword">if</span> tmpDistance &lt; <span class="built_in">distance</span> &#123;</span><br><span class="line">                        <span class="built_in">distance</span> = tmpDistance</span><br><span class="line">                        result = tmpSum</span><br><span class="line">                    &#125;</span><br><span class="line">                    j += <span class="number">1</span></span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> tmpSum &gt; target &#123;</span><br><span class="line">                    tmpDistance = tmpSum - target</span><br><span class="line">                    <span class="keyword">if</span> tmpDistance &lt; <span class="built_in">distance</span> &#123;</span><br><span class="line">                        <span class="built_in">distance</span> = tmpDistance</span><br><span class="line">                        result = tmpSum</span><br><span class="line">                    &#125;</span><br><span class="line">                    k -= <span class="number">1</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> target</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;16-3Sum-Closest&quot;&gt;&lt;a href=&quot;#16-3Sum-Closest&quot; class=&quot;headerlink&quot; title=&quot;16. 3Sum Closest&quot;&gt;&lt;/a&gt;16. 3Sum Closest&lt;/h1&gt;&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;Given an array &lt;em&gt;S&lt;/em&gt; of &lt;em&gt;n&lt;/em&gt; integers, find three integers in &lt;em&gt;S&lt;/em&gt; such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.&lt;/p&gt;
&lt;h2 id=&quot;Example&quot;&gt;&lt;a href=&quot;#Example&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;For example, given array S = &amp;#123;-1 2 1 -4&amp;#125;, and target = 1.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://willwei.me/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://willwei.me/tags/Algorithm/"/>
    
      <category term="LeetCode" scheme="http://willwei.me/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode--3Sum</title>
    <link href="http://willwei.me/2017/06/28/LeetCode--3Sum/"/>
    <id>http://willwei.me/2017/06/28/LeetCode--3Sum/</id>
    <published>2017-06-28T14:41:41.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="15-3Sum"><a href="#15-3Sum" class="headerlink" title="15. 3Sum"></a>15. 3Sum</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given an array <em>S</em> of <em>n</em> integers, are there elements <em>a</em>, <em>b</em>, <em>c</em> in <em>S</em> such that <em>a</em> + <em>b</em> + <em>c</em> = 0? Find all unique triplets in the array which gives the sum of zero.</p><p><strong>Note:</strong> The solution set must not contain duplicate triplets.</p><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">For example, given array S = [-1, 0, 1, 2, -1, -4],</span><br><span class="line"></span><br><span class="line">A solution set is:</span><br><span class="line">[</span><br><span class="line">  [-1, 0, 1],</span><br><span class="line">  [-1, -1, 2]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p><a href="http://willwei.me/2017/06/26/LeetCode--Two%20Sum/">1. Two Sum</a>的衍生题，难度相对也就高了些。先看看题目要求：</p><ul><li>返回的数组是排过序的</li><li>没有重复的答案数组</li></ul><p>接下来就好做了，先排序，然后找出符合要求的答案数组，再去重。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h3><p>这是我没经大脑直接写出来的解法。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">threeSum</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> &lt; <span class="number">3</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> sortedNums = nums.sorted(by: &lt;)</span><br><span class="line">        <span class="keyword">let</span> <span class="built_in">count</span> = sortedNums.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">var</span> result: [[<span class="type">Int</span>]] = []</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;(<span class="built_in">count</span>-<span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> (i+<span class="number">1</span>)..&lt;<span class="built_in">count</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> (j+<span class="number">1</span>)..&lt;<span class="built_in">count</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> sortedNums[i] + sortedNums[j] + sortedNums[k] == <span class="number">0</span> &#123;</span><br><span class="line">                        <span class="keyword">let</span> arr = [sortedNums[i], sortedNums[j], sortedNums[k]]</span><br><span class="line">                        <span class="keyword">var</span> itemRepeat = <span class="literal">false</span></span><br><span class="line">                        <span class="keyword">for</span> item <span class="keyword">in</span> result &#123;</span><br><span class="line">                            <span class="keyword">if</span> item[<span class="number">0</span>] == arr[<span class="number">0</span>] &amp;&amp; item[<span class="number">1</span>] == arr[<span class="number">1</span>] &amp;&amp; item[<span class="number">2</span>] == arr[<span class="number">2</span>] &#123;</span><br><span class="line">                                itemRepeat = <span class="literal">true</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> !itemRepeat &#123;</span><br><span class="line">                            result.append(arr)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>果然最后悲剧了，<a href="https://leetcode.com/" target="_blank" rel="noopener">LeetCode</a>毫不留情的打回。</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fh0x3pyr0rj30w306hae4.jpg" alt="80718BD5-A7A1-4BDD-B062-16372F04B4DF"></p><h3 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h3><p>痛定思痛，以降低时间复杂度为己任。主要改进了两点，一个是两个指针的位置，另一个是去重。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">threeSum</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> &lt; <span class="number">3</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> sortedNums = nums.sorted(by: &lt;)</span><br><span class="line">        <span class="keyword">let</span> <span class="built_in">count</span> = sortedNums.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">var</span> result: [[<span class="type">Int</span>]] = []</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> i &lt; <span class="built_in">count</span>-<span class="number">2</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> j = i + <span class="number">1</span></span><br><span class="line">            <span class="keyword">var</span> k = <span class="built_in">count</span> - <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> j &lt; k &#123;</span><br><span class="line">                <span class="keyword">let</span> sum = sortedNums[i] + sortedNums[j] + sortedNums[k]</span><br><span class="line">                <span class="keyword">if</span> sum == <span class="number">0</span> &#123;</span><br><span class="line">                    <span class="keyword">let</span> arr = [sortedNums[i], sortedNums[j], sortedNums[k]]</span><br><span class="line">                    result.append(arr)</span><br><span class="line">                    j += <span class="number">1</span></span><br><span class="line">                    k -= <span class="number">1</span></span><br><span class="line">                    <span class="keyword">while</span> j &lt; k &amp;&amp; sortedNums[j-<span class="number">1</span>] == sortedNums[j] &#123;</span><br><span class="line">                        j += <span class="number">1</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">while</span> j &lt; k &amp;&amp; sortedNums[k] == sortedNums[k+<span class="number">1</span>] &#123;</span><br><span class="line">                        k -= <span class="number">1</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> sum &lt; <span class="number">0</span> &#123;</span><br><span class="line">                    j += <span class="number">1</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    k -= <span class="number">1</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> i &lt; <span class="built_in">count</span>-<span class="number">1</span> &amp;&amp; sortedNums[i] == sortedNums[i+<span class="number">1</span>] &#123;</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;15-3Sum&quot;&gt;&lt;a href=&quot;#15-3Sum&quot; class=&quot;headerlink&quot; title=&quot;15. 3Sum&quot;&gt;&lt;/a&gt;15. 3Sum&lt;/h1&gt;&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;Given an array &lt;em&gt;S&lt;/em&gt; of &lt;em&gt;n&lt;/em&gt; integers, are there elements &lt;em&gt;a&lt;/em&gt;, &lt;em&gt;b&lt;/em&gt;, &lt;em&gt;c&lt;/em&gt; in &lt;em&gt;S&lt;/em&gt; such that &lt;em&gt;a&lt;/em&gt; + &lt;em&gt;b&lt;/em&gt; + &lt;em&gt;c&lt;/em&gt; = 0? Find all unique triplets in the array which gives the sum of zero.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The solution set must not contain duplicate triplets.&lt;/p&gt;
&lt;h2 id=&quot;Example&quot;&gt;&lt;a href=&quot;#Example&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;For example, given array S = [-1, 0, 1, 2, -1, -4],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A solution set is:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [-1, 0, 1],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [-1, -1, 2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://willwei.me/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://willwei.me/tags/Algorithm/"/>
    
      <category term="LeetCode" scheme="http://willwei.me/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode--Two Sum</title>
    <link href="http://willwei.me/2017/06/26/LeetCode--Two%20Sum/"/>
    <id>http://willwei.me/2017/06/26/LeetCode--Two Sum/</id>
    <published>2017-06-26T10:19:00.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Two-Sum"><a href="#1-Two-Sum" class="headerlink" title="1. Two Sum"></a>1. Two Sum</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given an array of integers, return <strong>indices</strong> of the two numbers such that they add up to a specific target.</p><p>You may assume that each input would have <strong>exactly</strong> one solution, and you may not use the <em>same</em> element twice.</p><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Given nums = [2, 7, 11, 15], target = 9,</span><br><span class="line"></span><br><span class="line">Because nums[0] + nums[1] = 2 + 7 = 9,</span><br><span class="line">return [0, 1].</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>这题要解很简单，没啥好说的。最后无非是一个优化的问题。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h3><p>脑子最先浮现的想法，两个for循环搞定，时间复杂度为O(n2)</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> <span class="built_in">count</span> = nums.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> (i+<span class="number">1</span>)..&lt;<span class="built_in">count</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> nums[i] + nums[j] == target &#123;</span><br><span class="line">                    <span class="keyword">return</span> [i, j]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h3><p>显然上一个不是我们想要的答案。是否可以将时间复杂度从O(n2)降到O(n)呢，答案当然是肯定的，牺牲空间来换。方法那就是使用字典，将数组元素及对应的下标放入字典中，数组元素为键，下标为值，然后只需要去取<code>target - num</code>对应的下标即可，一次循环就够了。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> <span class="built_in">count</span> = nums.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">var</span> temp = [<span class="type">Int</span>: <span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> num = nums[i]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> j = temp[target - num] &#123;</span><br><span class="line">                <span class="keyword">return</span> [j, i]</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                temp[num] = i</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、"><a href="#三、" class="headerlink" title="三、"></a>三、</h3><p>当然，既然都用到了下标，还有数组元素，我们可以用用官方的API。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> temp = [<span class="type">Int</span>: <span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">for</span> (i, num) <span class="keyword">in</span> nums.enumerated() &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> j = temp[target - num] &#123;</span><br><span class="line">                <span class="keyword">return</span> [j, i]</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                temp[num] = i</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-Two-Sum&quot;&gt;&lt;a href=&quot;#1-Two-Sum&quot; class=&quot;headerlink&quot; title=&quot;1. Two Sum&quot;&gt;&lt;/a&gt;1. Two Sum&lt;/h1&gt;&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;Given an array of integers, return &lt;strong&gt;indices&lt;/strong&gt; of the two numbers such that they add up to a specific target.&lt;/p&gt;
&lt;p&gt;You may assume that each input would have &lt;strong&gt;exactly&lt;/strong&gt; one solution, and you may not use the &lt;em&gt;same&lt;/em&gt; element twice.&lt;/p&gt;
&lt;h2 id=&quot;Example&quot;&gt;&lt;a href=&quot;#Example&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Given nums = [2, 7, 11, 15], target = 9,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Because nums[0] + nums[1] = 2 + 7 = 9,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return [0, 1].&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://willwei.me/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://willwei.me/tags/Algorithm/"/>
    
      <category term="LeetCode" scheme="http://willwei.me/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode--Merge Sorted Array</title>
    <link href="http://willwei.me/2017/06/15/LeetCode--Merge%20Sorted%20Array/"/>
    <id>http://willwei.me/2017/06/15/LeetCode--Merge Sorted Array/</id>
    <published>2017-06-15T09:46:47.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="88-Merge-Sorted-Array"><a href="#88-Merge-Sorted-Array" class="headerlink" title="88. Merge Sorted Array"></a>88. Merge Sorted Array</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given two sorted integer arrays <em>nums1</em> and <em>nums2</em>, merge <em>nums2</em> into <em>nums1</em> as one sorted array.</p><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p><strong>Note:</strong></p><p>You may assume that <em>nums1</em> has enough space (size that is greater or equal to <em>m</em> + <em>n</em>) to hold additional elements from <em>nums2</em>. The number of elements initialized in <em>nums1</em> and <em>nums2</em> are <em>m</em> and <em>n</em> respectively.</p><a id="more"></a><p>Input:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nums1: [<span class="number">3</span>,<span class="number">0</span>]</span><br><span class="line">m: <span class="number">1</span></span><br><span class="line">nums2: [<span class="number">1</span>]</span><br><span class="line">n: <span class="number">1</span></span><br></pre></td></tr></table></figure><p>answer:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nums1: [<span class="number">1</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>nums1和nums2都已排好序。所以只需要从最大数往前遍历比较即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h3><p>这题是比较简单的，写法如下。至于判断条件先后产生的不同写法，我也就懒得赘述了。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(<span class="number">_</span> nums1: <span class="keyword">inout</span> [Int], <span class="number">_</span> m: Int, <span class="number">_</span> nums2: [Int], <span class="number">_</span> n: Int)</span></span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = m - <span class="number">1</span></span><br><span class="line">        <span class="keyword">var</span> j = n - <span class="number">1</span></span><br><span class="line">        <span class="keyword">var</span> k = m + n - <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> k &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> i &gt;= <span class="number">0</span> &amp;&amp; j &gt;= <span class="number">0</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> nums1[i] &gt; nums2[j] &#123;</span><br><span class="line">                    nums1[k] = nums1[i]</span><br><span class="line">                    i -= <span class="number">1</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    nums1[k] = nums2[j]</span><br><span class="line">                    j -= <span class="number">1</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> i &gt;= <span class="number">0</span> &#123;</span><br><span class="line">                nums1[k] = nums1[i]</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> j &gt;= <span class="number">0</span> &#123;</span><br><span class="line">                nums1[k] = nums2[j]</span><br><span class="line">                j -= <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            k -= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;88-Merge-Sorted-Array&quot;&gt;&lt;a href=&quot;#88-Merge-Sorted-Array&quot; class=&quot;headerlink&quot; title=&quot;88. Merge Sorted Array&quot;&gt;&lt;/a&gt;88. Merge Sorted Array&lt;/h1&gt;&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;Given two sorted integer arrays &lt;em&gt;nums1&lt;/em&gt; and &lt;em&gt;nums2&lt;/em&gt;, merge &lt;em&gt;nums2&lt;/em&gt; into &lt;em&gt;nums1&lt;/em&gt; as one sorted array.&lt;/p&gt;
&lt;h2 id=&quot;Example&quot;&gt;&lt;a href=&quot;#Example&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You may assume that &lt;em&gt;nums1&lt;/em&gt; has enough space (size that is greater or equal to &lt;em&gt;m&lt;/em&gt; + &lt;em&gt;n&lt;/em&gt;) to hold additional elements from &lt;em&gt;nums2&lt;/em&gt;. The number of elements initialized in &lt;em&gt;nums1&lt;/em&gt; and &lt;em&gt;nums2&lt;/em&gt; are &lt;em&gt;m&lt;/em&gt; and &lt;em&gt;n&lt;/em&gt; respectively.&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://willwei.me/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://willwei.me/tags/Algorithm/"/>
    
      <category term="LeetCode" scheme="http://willwei.me/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode--Pascal&#39;s Triangle II</title>
    <link href="http://willwei.me/2017/06/14/LeetCode--Pascal&#39;s%20Triangle%20II/"/>
    <id>http://willwei.me/2017/06/14/LeetCode--Pascal&#39;s Triangle II/</id>
    <published>2017-06-14T10:49:25.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="119-Pascal’s-Triangle-II"><a href="#119-Pascal’s-Triangle-II" class="headerlink" title="119. Pascal’s Triangle II"></a>119. Pascal’s Triangle II</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given an index <em>k</em>, return the <em>k</em>th row of the Pascal’s triangle.</p><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>For example, given <em>k</em> = 3,</p><p>Return <code>[1,3,3,1]</code>.</p><p><strong>Note:</strong></p><p>Could you optimize your algorithm to use only <em>O</em>(<em>k</em>) extra space?</p><a id="more"></a><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">     [<span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">   [<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>],</span><br><span class="line">  [<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],</span><br><span class="line"> [<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">1</span>]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>这题紧接上一118题，不过现在只需要第k层的数组，空间只有<em>O</em>(<em>k</em>)，意思是只能用一个一维数组进行计算。上一题中计算公式为A[i][j] = A[i-1][j-1] + A[i-1][j]。在这一题中只能将上一层的数据放在这一层中进行计算，所以计算公式为A[i] = A[i-1] + A[i]。</p><p>例如，需要计算第三层得到[1, 3, 3, 1]时，初始数组A为[1, 2, 1, 1]，其中[1, 2, 1]为第二层数组的值。那么A[1] = A[0] + A[1]，A[2] = A[1] + A[2]，发现顺序计算时，后面会用到前面改变的值，所以改为倒序计算。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h3><p>申明一个rowIndex+1长度，元素值为1的数组。从第二层开始计算。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getRow</span><span class="params">(<span class="number">_</span> rowIndex: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="type">Array</span>(repeating: <span class="number">1</span>, <span class="built_in">count</span>: rowIndex+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> rowIndex &lt; <span class="number">2</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> result</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">2</span>...rowIndex &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> (<span class="number">1</span>..&lt;i).reversed() &#123;</span><br><span class="line">                result[j] = result[j-<span class="number">1</span>] + result[j]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;119-Pascal’s-Triangle-II&quot;&gt;&lt;a href=&quot;#119-Pascal’s-Triangle-II&quot; class=&quot;headerlink&quot; title=&quot;119. Pascal’s Triangle II&quot;&gt;&lt;/a&gt;119. Pascal’s Triangle II&lt;/h1&gt;&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;Given an index &lt;em&gt;k&lt;/em&gt;, return the &lt;em&gt;k&lt;/em&gt;th row of the Pascal’s triangle.&lt;/p&gt;
&lt;h2 id=&quot;Example&quot;&gt;&lt;a href=&quot;#Example&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h2&gt;&lt;p&gt;For example, given &lt;em&gt;k&lt;/em&gt; = 3,&lt;/p&gt;
&lt;p&gt;Return &lt;code&gt;[1,3,3,1]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Could you optimize your algorithm to use only &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;k&lt;/em&gt;) extra space?&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://willwei.me/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://willwei.me/tags/Algorithm/"/>
    
      <category term="LeetCode" scheme="http://willwei.me/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode--Pascal&#39;s Triangle</title>
    <link href="http://willwei.me/2017/06/14/LeetCode--Pascal&#39;s%20Triangle/"/>
    <id>http://willwei.me/2017/06/14/LeetCode--Pascal&#39;s Triangle/</id>
    <published>2017-06-14T09:37:16.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="118-Pascal’s-Triangle"><a href="#118-Pascal’s-Triangle" class="headerlink" title="118. Pascal’s Triangle"></a>118. Pascal’s Triangle</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given <em>numRows</em>, generate the first <em>numRows</em> of Pascal’s triangle.</p><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>For example, given <em>numRows</em> = 5,</p><p>Return</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">     [<span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">   [<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>],</span><br><span class="line">  [<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],</span><br><span class="line"> [<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">1</span>]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>先找规律</p><ul><li>首先这是一个二维数组</li><li>第n层有n个元素</li><li>每层第一个和最后一个元素为1</li><li>从第3层开始，除开第一个和最后个元素，中间元素的值都为上一层中的元素相加而来，具体式子为A[i][j] = A[i-1][j-1] + A[i-1][j]</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h3><p>依照找出的规律，定义了一个二维数组来存储，每位初始化为1，再计算中间的元素值。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generate</span><span class="params">(<span class="number">_</span> numRows: Int)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> result: [<span class="type">Array</span>&lt;<span class="type">Int</span>&gt;] = []</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;numRows &#123;</span><br><span class="line">            <span class="keyword">let</span> subArray = <span class="type">Array</span>.<span class="keyword">init</span>(repeating: <span class="number">1</span>, <span class="built_in">count</span>: i+<span class="number">1</span>)</span><br><span class="line">            result.append(subArray)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> i &gt; <span class="number">1</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">1</span>..&lt;i &#123;</span><br><span class="line">                    result[i][j] = result[i - <span class="number">1</span>][j - <span class="number">1</span>] + result[i - <span class="number">1</span>][j]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h3><p>重新改了下，提取了前面层出来判断。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generate</span><span class="params">(<span class="number">_</span> numRows: Int)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">if</span> numRows == <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> numRows == <span class="number">1</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> [[<span class="number">1</span>]]</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> numRows == <span class="number">2</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> [[<span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>]]</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> result: [<span class="type">Array</span>&lt;<span class="type">Int</span>&gt;] = [[<span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>]]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">2</span>..&lt;numRows &#123;</span><br><span class="line">            <span class="keyword">let</span> subArray = <span class="type">Array</span>(repeating: <span class="number">1</span>, <span class="built_in">count</span>: i+<span class="number">1</span>)</span><br><span class="line">            result.append(subArray)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">1</span>..&lt;i &#123;</span><br><span class="line">                result[i][j] = result[i - <span class="number">1</span>][j - <span class="number">1</span>] + result[i - <span class="number">1</span>][j]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、"><a href="#三、" class="headerlink" title="三、"></a>三、</h3><p>这是另外一种方式，大同小异。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generate</span><span class="params">(<span class="number">_</span> numRows: Int)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">if</span> numRows == <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> numRows == <span class="number">1</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> [[<span class="number">1</span>]]</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> numRows == <span class="number">2</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> [[<span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>]]</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> result: [<span class="type">Array</span>&lt;<span class="type">Int</span>&gt;] = [[<span class="number">1</span>], [<span class="number">1</span>, <span class="number">1</span>]]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">2</span>..&lt;numRows &#123;</span><br><span class="line">            <span class="keyword">var</span> subArray = [<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">1</span>..&lt;i &#123;</span><br><span class="line">                subArray.append(result[i - <span class="number">1</span>][j - <span class="number">1</span>] + result[i - <span class="number">1</span>][j])</span><br><span class="line">            &#125;</span><br><span class="line">            subArray.append(<span class="number">1</span>)</span><br><span class="line">            result.append(subArray)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;118-Pascal’s-Triangle&quot;&gt;&lt;a href=&quot;#118-Pascal’s-Triangle&quot; class=&quot;headerlink&quot; title=&quot;118. Pascal’s Triangle&quot;&gt;&lt;/a&gt;118. Pascal’s Triangle&lt;/h1&gt;&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;Given &lt;em&gt;numRows&lt;/em&gt;, generate the first &lt;em&gt;numRows&lt;/em&gt; of Pascal’s triangle.&lt;/p&gt;
&lt;h2 id=&quot;Example&quot;&gt;&lt;a href=&quot;#Example&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h2&gt;&lt;p&gt;For example, given &lt;em&gt;numRows&lt;/em&gt; = 5,&lt;/p&gt;
&lt;p&gt;Return&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://willwei.me/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://willwei.me/tags/Algorithm/"/>
    
      <category term="LeetCode" scheme="http://willwei.me/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode--Remove Duplicates from Sorted Array II</title>
    <link href="http://willwei.me/2017/06/12/LeetCode--Remove%20Duplicates%20from%20Sorted%20Array%20II/"/>
    <id>http://willwei.me/2017/06/12/LeetCode--Remove Duplicates from Sorted Array II/</id>
    <published>2017-06-12T10:18:27.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="80-Remove-Duplicates-from-Sorted-Array-II"><a href="#80-Remove-Duplicates-from-Sorted-Array-II" class="headerlink" title="80. Remove Duplicates from Sorted Array II"></a>80. Remove Duplicates from Sorted Array II</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given a sorted array, remove the duplicates in place such that each element appear only <em>once</em> and return the new length.</p><p>Do not allocate extra space for another array, you must do this in place with constant memory.</p><p>Follow up for “Remove Duplicates”:</p><p>What if duplicates are allowed at most <em>twice</em>?</p><a id="more"></a><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>Given sorted array <em>nums</em> = <code>[1,1,1,2,2,3]</code>,</p><p>Your function should return length = <code>5</code>, with the first five elements of <em>nums</em> being <code>1</code>, <code>1</code>, <code>2</code>, <code>2</code> and <code>3</code>. It doesn’t matter what you leave beyond the new length.</p><p>Input:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nums: [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure><p>answer:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nums: [<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">return</span>: <span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>紧接26题，不过现在可以允许最多两次重复元素存在，在26题的基础上，增加一个计数变量来记录重复的次数，跳过重复次数大于2的数。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h3><p>在26题的基础上增加了次数判断。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeDuplicates</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> == <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> length = nums.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">var</span> newIndex = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> num = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> <span class="number">1</span>..&lt;length &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[newIndex] != nums[index] &#123;</span><br><span class="line">                num = <span class="number">0</span></span><br><span class="line">                newIndex += <span class="number">1</span></span><br><span class="line">                nums[newIndex] = nums[index]</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                num += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> num &lt; <span class="number">2</span> &#123;</span><br><span class="line">                    newIndex += <span class="number">1</span></span><br><span class="line">                    nums[newIndex] = nums[index]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newIndex + <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h3><p>发现了一个不错的写法。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeDuplicates</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> == <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> newIndex = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums &#123;</span><br><span class="line">            <span class="keyword">if</span> newIndex &lt; <span class="number">2</span> || num &gt; nums[newIndex - <span class="number">2</span>] &#123;</span><br><span class="line">                nums[newIndex] = num</span><br><span class="line">                newIndex += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newIndex</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;80-Remove-Duplicates-from-Sorted-Array-II&quot;&gt;&lt;a href=&quot;#80-Remove-Duplicates-from-Sorted-Array-II&quot; class=&quot;headerlink&quot; title=&quot;80. Remove Duplicates from Sorted Array II&quot;&gt;&lt;/a&gt;80. Remove Duplicates from Sorted Array II&lt;/h1&gt;&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;Given a sorted array, remove the duplicates in place such that each element appear only &lt;em&gt;once&lt;/em&gt; and return the new length.&lt;/p&gt;
&lt;p&gt;Do not allocate extra space for another array, you must do this in place with constant memory.&lt;/p&gt;
&lt;p&gt;Follow up for “Remove Duplicates”:&lt;/p&gt;
&lt;p&gt;What if duplicates are allowed at most &lt;em&gt;twice&lt;/em&gt;?&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://willwei.me/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://willwei.me/tags/Algorithm/"/>
    
      <category term="LeetCode" scheme="http://willwei.me/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode--Remove Duplicates from Sorted Array</title>
    <link href="http://willwei.me/2017/06/11/LeetCode--Remove%20Duplicates%20from%20Sorted%20Array/"/>
    <id>http://willwei.me/2017/06/11/LeetCode--Remove Duplicates from Sorted Array/</id>
    <published>2017-06-11T19:04:12.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="26-Remove-Duplicates-from-Sorted-Array"><a href="#26-Remove-Duplicates-from-Sorted-Array" class="headerlink" title="26. Remove Duplicates from Sorted Array"></a>26. Remove Duplicates from Sorted Array</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given a sorted array, remove the duplicates in place such that each element appear only <em>once</em> and return the new length.</p><p>Do not allocate extra space for another array, you must do this in place with constant memory.</p><a id="more"></a><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>Given input array <em>nums</em> = <code>[1,1,2]</code>,</p><p>Your function should return length = <code>2</code>, with the first two elements of <em>nums</em> being <code>1</code> and <code>2</code> respectively. It doesn’t matter what you leave beyond the new length.</p><p>Input:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nums: [<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>]</span><br></pre></td></tr></table></figure><p>answer:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nums: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>]</span><br><span class="line"><span class="keyword">return</span>: <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>首先这是一个排好序的数组，要求是删除重复的元素。遍历数组，使用newIndex记录新数组的位置，如果index与newIndex的数组值不相等，则将index的数组值赋值给newIndex+1位置上，重复直至遍历结束。</p><h2 id="代码演进"><a href="#代码演进" class="headerlink" title="代码演进"></a>代码演进</h2><p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fghj3ochjij30k7045t8y.jpg" alt="E2AC9068-C87C-47F6-BC03-6DE8D5115F04"></p><p>这个Run Time好像存在随机性。。。参考吧。。。</p><h3 id="第一版"><a href="#第一版" class="headerlink" title="第一版"></a>第一版</h3><p>接前面27题，相似写法，第一次错误是因为没有判断数组长度为0的情况。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeDuplicates</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> length = nums.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">var</span> newIndex = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> == <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> <span class="number">0</span>..&lt;length &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[newIndex] != nums[index] &#123;</span><br><span class="line">                newIndex += <span class="number">1</span></span><br><span class="line">                nums[newIndex] = nums[index]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newIndex + <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二版"><a href="#第二版" class="headerlink" title="第二版"></a>第二版</h3><p>这一版只是发现了数组遍历不用从0开始，因为第一个元素肯定相等的。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeDuplicates</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> length = nums.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">var</span> newIndex = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> == <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> <span class="number">1</span>..&lt;length &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[newIndex] != nums[index] &#123;</span><br><span class="line">                newIndex += <span class="number">1</span></span><br><span class="line">                nums[newIndex] = nums[index]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newIndex + <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;26-Remove-Duplicates-from-Sorted-Array&quot;&gt;&lt;a href=&quot;#26-Remove-Duplicates-from-Sorted-Array&quot; class=&quot;headerlink&quot; title=&quot;26. Remove Duplicates from Sorted Array&quot;&gt;&lt;/a&gt;26. Remove Duplicates from Sorted Array&lt;/h1&gt;&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;Given a sorted array, remove the duplicates in place such that each element appear only &lt;em&gt;once&lt;/em&gt; and return the new length.&lt;/p&gt;
&lt;p&gt;Do not allocate extra space for another array, you must do this in place with constant memory.&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://willwei.me/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://willwei.me/tags/Algorithm/"/>
    
      <category term="LeetCode" scheme="http://willwei.me/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode--Remove Element</title>
    <link href="http://willwei.me/2017/06/09/LeetCode--Remove%20Element/"/>
    <id>http://willwei.me/2017/06/09/LeetCode--Remove Element/</id>
    <published>2017-06-09T10:17:19.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="27-Remove-Element"><a href="#27-Remove-Element" class="headerlink" title="27. Remove Element"></a>27. Remove Element</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given an array and a value, remove all instances of that value in place and return the new length.</p><p>Do not allocate extra space for another array, you must do this in place with constant memory.</p><p>The order of elements can be changed. It doesn’t matter what you leave beyond the new length.</p><a id="more"></a><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>Given input array <em>nums</em> = <code>[3,2,2,3]</code>, <em>val</em> = <code>3</code></p><p>Your function should return length = 2, with the first two elements of <em>nums</em> being 2.</p><p>Input:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nums: [<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">val: <span class="number">3</span></span><br></pre></td></tr></table></figure><p>answer:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nums: [<span class="number">2</span>,<span class="number">2</span>]</span><br><span class="line"><span class="keyword">return</span>: <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>遍历数组，使用count记录数组中不等于value的数量，同时将当前位置的值复制到count位置上，直至遍历结束。这是count就是新数组的长度，而nums前count位就是新数组。</p><h2 id="代码演进"><a href="#代码演进" class="headerlink" title="代码演进"></a>代码演进</h2><p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fger3682f6j30lm08aq3n.jpg" alt="DA9E2FA9-8DA5-4C1F-B30B-35001520FBFF"></p><p>截取了中间一部分节点</p><h3 id="第一版"><a href="#第一版" class="headerlink" title="第一版"></a>第一版</h3><p>很自然的先想到了Swift数组的<code>enumerated()</code>方法，这也是运行时间36ms的写法。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeElement</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int], <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="built_in">count</span> = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> (index, num) <span class="keyword">in</span> nums.enumerated() &#123;</span><br><span class="line">            <span class="keyword">if</span> num != val &#123;</span><br><span class="line">                nums[<span class="built_in">count</span>] = num</span><br><span class="line">                <span class="built_in">count</span> += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二版"><a href="#第二版" class="headerlink" title="第二版"></a>第二版</h3><p>去掉了enumerated()方法，改用取数组长度遍历，时间缩至22ms。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeElement</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int], <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="built_in">count</span> = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> length = nums.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> <span class="number">0</span>..&lt;length &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[index] != val &#123;</span><br><span class="line">                nums[<span class="built_in">count</span>] = nums[index]</span><br><span class="line">                <span class="built_in">count</span> += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第三版"><a href="#第三版" class="headerlink" title="第三版"></a>第三版</h3><p>发现nums[index]每次读取了两次，使用中间变量读取一次，最后耗时降低至了19ms。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeElement</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int], <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="built_in">count</span> = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> length = nums.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> <span class="number">0</span>..&lt;length &#123;</span><br><span class="line">            <span class="keyword">let</span> num = nums[index]</span><br><span class="line">            <span class="keyword">if</span> num != val &#123;</span><br><span class="line">                nums[<span class="built_in">count</span>] = num</span><br><span class="line">                <span class="built_in">count</span> += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;27-Remove-Element&quot;&gt;&lt;a href=&quot;#27-Remove-Element&quot; class=&quot;headerlink&quot; title=&quot;27. Remove Element&quot;&gt;&lt;/a&gt;27. Remove Element&lt;/h1&gt;&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;Given an array and a value, remove all instances of that value in place and return the new length.&lt;/p&gt;
&lt;p&gt;Do not allocate extra space for another array, you must do this in place with constant memory.&lt;/p&gt;
&lt;p&gt;The order of elements can be changed. It doesn’t matter what you leave beyond the new length.&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://willwei.me/categories/Algorithm/"/>
    
    
      <category term="Algorithm" scheme="http://willwei.me/tags/Algorithm/"/>
    
      <category term="LeetCode" scheme="http://willwei.me/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Swift中反向传值的方式</title>
    <link href="http://willwei.me/2017/06/08/Swift%E4%B8%AD%E5%8F%8D%E5%90%91%E4%BC%A0%E5%80%BC%E7%9A%84%E6%96%B9%E5%BC%8F/"/>
    <id>http://willwei.me/2017/06/08/Swift中反向传值的方式/</id>
    <published>2017-06-08T11:52:10.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>最后更新时间：2017.6.30</p><p>在Swift中的反向传值方式有几种，如代理、通知、KVO、闭包(closure)等等。这里只要说说代理和闭包，Swift中的代理和闭包与Objective-C中代理和block反向传值的方式类似。</p><p>这里只是简单的步骤示例，做个记录，并未深究。</p><h1 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h1><p>从<code>B</code>往<code>A</code>传值是开发中必不可少的需求，如<code>View</code>往<code>ViewController</code>传值，<code>subViewController</code>往<code>ViewController</code>传值等。</p><a id="more"></a><h1 id="闭包-closure"><a href="#闭包-closure" class="headerlink" title="闭包(closure)"></a>闭包(closure)</h1><p>闭包是自包含的函数代码块，可以在代码中被传递和使用。Swift中的闭包和C和Objective-C中的代码块(block)以及其他一些编程语言中的匿名函数比较相似。关于闭包的更多信息，查阅最后提供的<a href="#参考资料">参考资料</a>。以下以一个在<code>View</code>中的<code>UIButton</code>点击事件传值给<code>ViewController</code>举例。</p><ol><li><p>在<code>B</code>中为closure声明一个类型别名</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typealias</span> <span class="type">ClosureType</span> = (<span class="type">UIButton</span>) -&gt; <span class="type">Void</span></span><br></pre></td></tr></table></figure></li><li><p>在<code>B</code>中定义一个closure变量</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> closure: <span class="type">ClosureType</span>?</span><br></pre></td></tr></table></figure></li><li><p>在<code>B</code>中需要传值的地方调用</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.closure?(sender)</span><br></pre></td></tr></table></figure></li><li><p>在<code>A</code>中写接受传值</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> b = <span class="type">B</span>()</span><br><span class="line">b.closure = &#123;(sender: <span class="type">UIButton</span>) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">  <span class="comment">// xxx</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="代理-delegate"><a href="#代理-delegate" class="headerlink" title="代理(delegate)"></a>代理(delegate)</h1><p>代理可能有点绕，熟悉后就很简单。举个例子，<code>B</code>要传值给<code>A</code>，那么<code>B</code>就拥有代理属性，<code>A</code>就是<code>B</code>的代理。</p><ol><li><p>在<code>B</code>中声明协议，最新已不需要继承<code>NSObjectProtocol</code></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">CellDelegate</span>: <span class="title">NSObjectProtocol</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">cell</span><span class="params">(<span class="number">_</span> cell: Cell, sender: UIButton)</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在<code>B</code>中定义代理属性，最新已不需要<code>weak</code></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">weak</span> <span class="keyword">var</span> delegate: <span class="type">CellDelegate</span>?</span><br></pre></td></tr></table></figure></li><li><p>在<code>B</code>中调用代理方法</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.delegate?.cell(<span class="keyword">self</span>, sender: sender)</span><br></pre></td></tr></table></figure></li><li><p>在<code>A</code>中实现代理方法</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> b = <span class="type">B</span>()</span><br><span class="line">b.delegate = <span class="keyword">self</span></span><br><span class="line"><span class="comment">// MARK: - CellDelegate</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">cell</span><span class="params">(<span class="number">_</span> cell: Cell, sender: UIButton)</span></span> &#123;</span><br><span class="line"><span class="comment">// xxx</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Closures.html#//apple_ref/doc/uid/TP40014097-CH11-ID94" target="_blank" rel="noopener">Closures</a></p><p><a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID267" target="_blank" rel="noopener">Protocols</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最后更新时间：2017.6.30&lt;/p&gt;
&lt;p&gt;在Swift中的反向传值方式有几种，如代理、通知、KVO、闭包(closure)等等。这里只要说说代理和闭包，Swift中的代理和闭包与Objective-C中代理和block反向传值的方式类似。&lt;/p&gt;
&lt;p&gt;这里只是简单的步骤示例，做个记录，并未深究。&lt;/p&gt;
&lt;h1 id=&quot;使用场景&quot;&gt;&lt;a href=&quot;#使用场景&quot; class=&quot;headerlink&quot; title=&quot;使用场景&quot;&gt;&lt;/a&gt;使用场景&lt;/h1&gt;&lt;p&gt;从&lt;code&gt;B&lt;/code&gt;往&lt;code&gt;A&lt;/code&gt;传值是开发中必不可少的需求，如&lt;code&gt;View&lt;/code&gt;往&lt;code&gt;ViewController&lt;/code&gt;传值，&lt;code&gt;subViewController&lt;/code&gt;往&lt;code&gt;ViewController&lt;/code&gt;传值等。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://willwei.me/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://willwei.me/tags/iOS/"/>
    
      <category term="Swift" scheme="http://willwei.me/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>Objective-C的id和Swift的Any、AnyObject</title>
    <link href="http://willwei.me/2017/06/02/Objective-C%E7%9A%84id%E5%92%8CSwift%E7%9A%84Any%E3%80%81AnyObject/"/>
    <id>http://willwei.me/2017/06/02/Objective-C的id和Swift的Any、AnyObject/</id>
    <published>2017-06-02T10:22:03.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>Objective-C的<code>id</code>我们都知道可以用来表示任意类类型的实例，那么Swift中的<code>Any</code>和<code>AnyObject</code>有啥区别呢，看看官方编程指南中的解释：</p><blockquote><p><code>Any</code>可以表示任意类型，甚至包括函数类型</p><p><code>AnyObject</code>可以表示任意类类型的实例</p></blockquote><p>Swift 2将Objective-C中的<code>id</code>类型映射到Swift中的<code>AnyObject</code>类型，这通常只能容纳类类型的值，而对于值类型则无能为力。不过Swift 2为<code>AnyObject</code>提供了一些桥接值类型的隐式转换，如<code>String</code>，<code>Array</code>，<code>Dictionary</code>，<code>Set</code>和一些数字，以方便原生Swift类型可以轻松与Cocoa的<code>NSString</code>，<code>NSArray</code>，或来自<code>Foundation</code>的其他容器类一起使用。</p><a id="more"></a><p>只使用 Swift 类型而不转为 Cocoa 类型，对性能的提升是有所帮助的，所以我们应该尽可能地使用原生的类型。</p><p>在Swift 3中，Objective-C中的<code>id</code>类型被映射到Swift中的<code>Any</code>类型。它可以描述任何类型的值，无论是类、枚举、结构体还是其他Swift类型。而对于<code>Dictionary</code>和<code>Set</code>，有一种新类型<code>AnyHashable</code>可以保存任何符合Swift <code>Hashable</code>协议的类型的值。</p><p>以下是映射关系：</p><table><thead><tr><th>Objective-C</th><th>Swift 2</th><th>Swift 3</th></tr></thead><tbody><tr><td><code>id</code></td><td><code>AnyObject</code></td><td><code>Any</code></td></tr><tr><td><code>NSArray *</code></td><td><code>[AnyObject]</code></td><td><code>[Any]</code></td></tr><tr><td><code>NSDictionary *</code></td><td><code>[NSObject: AnyObject]</code></td><td><code>[AnyHashable: Any]</code></td></tr><tr><td><code>NSSet *</code></td><td><code>Set&lt;NSObject&gt;</code></td><td><code>Set&lt;AnyHashable&gt;</code></td></tr></tbody></table><p>总之，在Swift 3中你会发现使用<code>Any</code>更加得心应手。但是在实际使用中，使用 <code>Any</code> 和 <code>AnyObject</code> 并不是什么令人愉悦的事情，应该尽量尝试明确地指出确定的类型，而不是大量使用这两者。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Objective-C的&lt;code&gt;id&lt;/code&gt;我们都知道可以用来表示任意类类型的实例，那么Swift中的&lt;code&gt;Any&lt;/code&gt;和&lt;code&gt;AnyObject&lt;/code&gt;有啥区别呢，看看官方编程指南中的解释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Any&lt;/code&gt;可以表示任意类型，甚至包括函数类型&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AnyObject&lt;/code&gt;可以表示任意类类型的实例&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Swift 2将Objective-C中的&lt;code&gt;id&lt;/code&gt;类型映射到Swift中的&lt;code&gt;AnyObject&lt;/code&gt;类型，这通常只能容纳类类型的值，而对于值类型则无能为力。不过Swift 2为&lt;code&gt;AnyObject&lt;/code&gt;提供了一些桥接值类型的隐式转换，如&lt;code&gt;String&lt;/code&gt;，&lt;code&gt;Array&lt;/code&gt;，&lt;code&gt;Dictionary&lt;/code&gt;，&lt;code&gt;Set&lt;/code&gt;和一些数字，以方便原生Swift类型可以轻松与Cocoa的&lt;code&gt;NSString&lt;/code&gt;，&lt;code&gt;NSArray&lt;/code&gt;，或来自&lt;code&gt;Foundation&lt;/code&gt;的其他容器类一起使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://willwei.me/tags/iOS/"/>
    
      <category term="Swift" scheme="http://willwei.me/tags/Swift/"/>
    
      <category term="Objective-C" scheme="http://willwei.me/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>解决Mac系统无法设置以太网IP地址</title>
    <link href="http://willwei.me/2017/05/27/%E8%A7%A3%E5%86%B3Mac%E7%B3%BB%E7%BB%9F%E6%97%A0%E6%B3%95%E8%AE%BE%E7%BD%AE%E4%BB%A5%E5%A4%AA%E7%BD%91IP%E5%9C%B0%E5%9D%80/"/>
    <id>http://willwei.me/2017/05/27/解决Mac系统无法设置以太网IP地址/</id>
    <published>2017-05-27T14:40:08.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>在macOS Sierra 10.12.5下手动设置IP地址后弹出错误提示</p><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1ffzx0duzqzj30bo03nt8x.jpg" alt="9D3A22E8-DE89-4743-ADC4-CB2755B1F3E2"></p><p>可使用命令行直接设置以太网的IP地址，对应IP地址、子网掩码、路由器。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ networksetup -setmanual Ethernet 192.168.1.165 255.255.255.0 192.168.1.1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在macOS Sierra 10.12.5下手动设置IP地址后弹出错误提示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tNc79ly1ffzx0duzqzj30bo03nt8x.jpg&quot; alt=&quot;9D3A22E8-D
      
    
    </summary>
    
      <category term="奇淫巧技" scheme="http://willwei.me/categories/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
    
      <category term="奇淫巧技" scheme="http://willwei.me/tags/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
      <category term="Mac" scheme="http://willwei.me/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>关于iOS文件系统</title>
    <link href="http://willwei.me/2017/05/22/%E5%85%B3%E4%BA%8EiOS%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    <id>http://willwei.me/2017/05/22/关于iOS文件系统/</id>
    <published>2017-05-22T11:42:27.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文件系统基础"><a href="#文件系统基础" class="headerlink" title="文件系统基础"></a>文件系统基础</h1><p>iOS中的文件系统处理数据文件的持久存储，应用程序和与操作系统本身相关的文件，文件系统是所有进程使用的基本资源之一。iOS中的文件系统主要格式是HFS Plus，为了使系统简单，iOS设备的用户不能直接访问文件系统，应用程序也应遵循此惯例。</p><h2 id="iOS标准目录"><a href="#iOS标准目录" class="headerlink" title="iOS标准目录"></a>iOS标准目录</h2><p>为了安全起见，iOS应用程序与文件系统的交互仅限于应用程序沙盒目录中的目录。在安装新应用程序期间，安装程序会在沙盒目录中为应用程序创建多个容器目录。bundle容器目录包含应用程序的bundle，而数据容器目录保存应用程序和用户的数据。数据容器目录进一步分为多个子目录，该应用程序可用于对其数据进行排序和整理。应用程序还可以在运行时请求访问其他容器目录，例如iCloud容器。</p><a id="more"></a><p>这些容器目录构成了应用程序对文件系统的主视图。以下是App的沙盒目录，来自苹果官方文档。</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1ffu9f2migcj30la0n6jrr.jpg" style="zoom:50%"></p><p>通常禁止App在其容器目录之外访问或创建文件。这个规则的一个例外是当一个App使用公共系统接口来访问诸如用户的联系人或音乐之类的东西。在这些情况下，使用系统框架帮助App来处理读取或修改相应数据存储所需的任何相关文件操作。</p><table><thead><tr><th style="text-align:left"><em>目录</em></th><th style="text-align:left"><em>描述</em></th></tr></thead><tbody><tr><td style="text-align:left">AppName.app</td><td style="text-align:left">这是App的bundle。此目录包含App及其所有资源。该目录访问权限为只读，为防止篡改，bundle目录在安装时签名，写入此目录会更改签名并阻止应用启动。该目录的内容不会被iTunes或iCloud备份。但是，从App Store购买的任何App，iTunes会执行初始同步。</td></tr><tr><td style="text-align:left">Documents/</td><td style="text-align:left">使用此目录来存储用户生成的内容。该目录的内容可以通过文件共享提供给用户，因此，该目录只能包含希望向用户公开的文件。此目录的内容由iTunes和iCloud备份。</td></tr><tr><td style="text-align:left">Documents/Inbox</td><td style="text-align:left">使用此目录访问App被外部实体打开的文件。具体来说，邮件程序将与App相关联的电子邮件附件放在此目录。文档交互控制器也可以在其中放置文件。App可以读取和删除此目录中的文件，但无法创建新文件或写入现有文件。如果用户尝试编辑此目录中的文件，则在进行任何更改之前，App必须静静地将其移除目录。该目录的内容由iTunes和iCloud备份。</td></tr><tr><td style="text-align:left">Library/</td><td style="text-align:left">这是一个存放除了用户数据文件之外文件的顶层目录。通常将文件放在几个标准子目录之一中。iOS应用程序通常使用 <code>Application Support</code>和 <code>Caches</code>子目录，但是可以创建自定义子目录。使用<code>Library</code>子目录存储不想向用户公开的文件，App不应将这些目录用于用户数据文件。Library目录(除子目录<code>Caches</code>外)的内容由iTunes和iCloud备份。</td></tr><tr><td style="text-align:left">tmp/</td><td style="text-align:left">使用此目录存放不需要在App启动之间保留的临时文件。App应该在不需要时从该目录中删除文件，但是，当App未运行时系统可能会清除此目录。该目录不会被iTunes或iCloud备份。</td></tr></tbody></table><h2 id="文件存放位置选择"><a href="#文件存放位置选择" class="headerlink" title="文件存放位置选择"></a>文件存放位置选择</h2><p>为了防止iOS设备上的同步和备份花费较长时间，要选择文件放置的位置。存储了大文件的App可能会减慢备份到iTunes或iCloud的过程。这些应用程序还会消耗大量用户的可用存储空间，这可能会使用户删除应用程序或禁用该应用备份数据到iCloud。考虑到这一点，应按照下列准则存储应用程序数据：</p><ul><li>将用户数据放入<code>Documents/</code>。用户数据通常包含想要向用户公开的文件—可能希望用户创建，导入，删除或编辑的所有文件。对于绘图应用程序，用户数据包括用户可能创建的任何图形文件。对于文本编辑器，包括文本文件。视频和音频应用程序甚至可以包括用户下载以便稍后观看或收听的文件。</li><li>将App创建的支持文件放在<code>Library/Application support/</code>目录中。通常，此目录包括App用于运行但应保持隐藏的用户的文件。该目录还可以包括数据文件，配置文件，模板和从应用程序包中加载的资源的修改版本。</li><li>在<code>Documents</code>和<code>Application Support/</code>中的文件是默认备份。可以使用<code>-[NSURL setResourceValue:forKey:error:]</code>方法传入<code>NSURLIsExcludedFromBackupKey</code>键值调用备份中的文件。任何可以重新创建或下载的文件必须从备份中排除。这对于大型媒体文件尤为重要。如果App下载视频或音频文件，确保它们未包含在备份中。</li><li>将临时数据放在<code>tmp/</code>目录中。临时数据包括任何不需要长时间保留的数据。在完成这些文件时删除这些文件，以便它们不会继续占用用户设备上的空间。当应用程序未运行时，系统会定期清除这些文件。因此，应用程序终止后，无法依赖这些文件。</li><li>将数据缓存文件放在<code>Library/Caches/</code>目录中。缓存数据可用于需要比临时数据存储更持久的数据，但不能与支持文件一样长。一般来说，应用程序不需要缓存数据就能正常运行，但是可以使用缓存数据提高性能。高速缓存数据的示例包括(但不限于)数据库高速缓存文件和暂时的可下载内容。系统可能会删除<code>Caches/</code>目录以释放磁盘空间，因此App必须能够根据需要重新创建或下载这些文件。</li></ul><h1 id="访问文件和目录"><a href="#访问文件和目录" class="headerlink" title="访问文件和目录"></a>访问文件和目录</h1><p>在打开文件之前，首先需要在文件系统中找到文件。系统框架提供许多用于获取已知目录引用的方法，例如<code>Library</code>目录及其内容。还可以通过从已知目录名称构建URL或基于字符串的路径手动指定位置。</p><p>当知道文件位置时，就可以开始规划最佳的访问方式。根据文件类型，可能有几个选项。对于已知的文件类型，通常使用内置的系统方法来读取或写入文件内容，并提供可以使用的对象。对于自定义文件类型，可能需要自己读取原始文件数据。</p><h2 id="选择正确的方式访问文件"><a href="#选择正确的方式访问文件" class="headerlink" title="选择正确的方式访问文件"></a>选择正确的方式访问文件</h2><p>虽然可以打开任何文件并将其内容读取为字节流，但这样做并不总是正确的选择。iOS提供内置的支持，可以轻松打开许多类型的标准文件格式（如文本文件，图像，声音和属性列表）。对于这些标准文件格式，请使用更高级别的选项来读取和写入文件内容。</p><p>以下列出系统支持的常用文件类型。</p><table><thead><tr><th><em>文件类型</em></th><th><em>例子</em></th><th><em>描述</em></th></tr></thead><tbody><tr><td>资源文件</td><td>Nib文件 <br>图像文件<br>声音文件<br>字符串文件<br>本地化资源</td><td>App使用资源文件来存储独立于使用它的代码的数据。资源文件通常用于存储可本地化的内容，如字符串和图像。从资源文件读取数据的过程取决于资源的类型。<a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/LoadingResources/Introduction/Introduction.html#//apple_ref/doc/uid/10000051i" target="_blank" rel="noopener">Resource Programming Guide</a></td></tr><tr><td>文本文件</td><td>纯文本文件<br>UTF-8格式文件<br>UTF-16格式文件</td><td>文本文件是ASCII和Unicode字符的非结构化序列。通常将文本文件的内容加载到NSString对象中，但也可以读取和写入文本文件作为原始字符流。<a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Strings/introStrings.html#//apple_ref/doc/uid/10000035i" target="_blank" rel="noopener">String Programming Guide</a></td></tr><tr><td>结构化数据文件</td><td>XML文件<br>属性列表文件<br>偏好文件</td><td>结构化数据文件通常由使用一组特殊字符排列的字符串数据组成。<a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/XMLParsing/XMLParsing.html#//apple_ref/doc/uid/10000186i" target="_blank" rel="noopener">Event-Driven XML Programming Guide</a></td></tr><tr><td>归档文件</td><td>使用键控的归档对象创建的二进制文件</td><td>归档是用于存储应用程序运行时对象持久版本的文件格式。归档对象是将对象的状态编码为可以一次写入磁盘的字节流。解档反转过程，使用字节流重新创建对象并将其恢复到之前的状态。归档通常是为文档或其他数据文件实施自定义二进制文件格式的便捷方式。<a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Archiving/Archiving.html#//apple_ref/doc/uid/10000047i" target="_blank" rel="noopener">Archives and Serializations Programming Guide</a></td></tr><tr><td>文件包</td><td>自定义文档格式</td><td>一个文件包是一个包含任意数量自定义数据文件的目录，但是它呈现给用户的就像它是单个文件一样。应用程序可以使用文件包来实现包含多个不同文件或不同类型文件混合的复杂文件格式。例如，如果文件格式包含二进制数据文件和一个或多个图像、视频或音频文件，则可以使用文件包。<a href="https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileWrappers/FileWrappers.html#//apple_ref/doc/uid/TP40010672-CH13-SW2" target="_blank" rel="noopener">Using FileWrappers as File Containers</a></td></tr><tr><td>Bundles</td><td>应用<br>插件<br>框架</td><td>Bundles提供了一个结构化的环境用于存储代码和该代码使用的资源。大多数情况下，不能使用Bundle本身，而是使用其中的内容。但是可以根据需要找到Bundle并获取相关信息。<a href="https://developer.apple.com/library/content/documentation/CoreFoundation/Conceptual/CFBundles/Introduction/Introduction.html#//apple_ref/doc/uid/10000123i" target="_blank" rel="noopener">Bundle Programming Guide</a></td></tr><tr><td>代码文件</td><td>二进制代码资源<br>动态共享库</td><td>使用插件和共享库的应用程序需要能够加载该项目的关联代码才能使用其功能。<a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/LoadingCode/LoadingCode.html#//apple_ref/doc/uid/10000052i" target="_blank" rel="noopener">Code Loading Programming Topics</a></td></tr></tbody></table><p>在标准文件格式不足的情况下，可以随时创建自己的自定义文件格式。读取和写入自定义文件的内容时，可以将数据作为字节流读取和写入，并将这些字节应用于应用程序的文件相关数据结构。可以完全控制如何读取和写入字节以及如何管理与文件相关的数据结构。</p><h3 id="指定文件或目录的路径"><a href="#指定文件或目录的路径" class="headerlink" title="指定文件或目录的路径"></a>指定文件或目录的路径</h3><p>指定文件或目录位置的首选是使用<code>NSURL</code>类。虽然<code>NSString</code>类具有许多与路径创建相关的方法，但URL提供了一种更强大的方法来定位文件和目录。对于也可以使用网络资源的App，URL也意味着可以使用一种类型的对象来管理位于本地文件系统或网络服务器上的项目。除了<code>NSURL</code>，还可以使用<code>CFURLRef</code>不透明类型来操作路径作为URL，该类与<code>NSURL</code>是桥接的，这意味着可以用代码互相转换使用。</p><p>对于大多数URL，可以通过使用适当的<code>NSURL</code>方法将目录和文件名连接在一起直到具有项目路径来构建URL。以这种方式构建的URL被称为基于路径的URL，因为它存储着遍历目录层次结构以查找项目所需的名称。(还可以通过将目录和文件名连接在一起构建基于字符串的路径，结果以与<code>NSURL</code>类使用格式略有不同的格式存储)。除了基于路径的URL，还可以创建文件引用URL，它使用唯一的ID来标识文件或目录的位置。</p><p>所有以下条目都是对用户<code>Documents</code>目录中调用的<code>MyFile.txt</code>文件的有效引用：</p><p><strong>基于路径的URL:</strong> <code>file://localhost/Users/steve/Documents/MyFile.txt</code></p><p><strong>文件引用URL:</strong> <code>file:///.file/id=6571367.2773272/</code></p><p><strong>基于字符串的路径:</strong> <code>/Users/steve/Documents/MyFile.txt</code></p><p>可以使用<code>NSURL</code>方法创建URL对象，并在需要时将其转换为文件引用URL。基于路径的URL更容易操作，更容易调试，并且通常被类首选，如<code>NSFileManager</code>类。文件引用URL的优点是，在应用程序运行时，它们比基于路径的URL更强壮。如果用户在Finder中移动文件，则引用该文件的任何基于路径的URL立即变为无效，并且必须更新到新路径。但是，只要文件移动到同一磁盘上的另一个位置，其唯一的ID不更改，任何文件引用URL仍然有效。尽管在应用程序运行时它们可以安全使用，但如果系统重新启动，则文件引用URL在应用程序启动之间存储和重新使用是不安全的，因为文件的ID可能会更改。如果要在应用程序启动之间持久存储文件的位置，请按“使用书签查找文件”中所述创建一个书签。</p><p>当然，您仍然可能需要使用字符串来引用文件。幸运的是，<code>NSURL</code>类提供了将基于路径的URL转换为<code>NSString</code>对象的方法。当向用户呈现该路径或调用接收字符串而不是URL的系统方法时，可能会使用基于字符串的路径。使用<code>NSURL</code>类的<code>absoluteString</code>方法来完成<code>NSURL</code>对象和<code>NSString</code>对象之间的转换。</p><p>因为<code>NSURL</code>和<code>NSString</code>描述文件或目录的唯一位置，可以在实际的文件或目录存在之前创建它们。两个类都不会尝试验证指定的文件或目录的实际存在。事实上，必须创建一个不存在的文件或目录的路径，然后才能在磁盘上创建它。</p><p>如果有一个<code>NSURL</code>对象引用磁盘上的实际文件或目录，并且要获取用户所在卷的可见名称，则可以使用<code>getResourceValue:forKey:error:</code>方法两步获取：</p><ul><li>使用<code>NSURLVolumeURLKey</code>常量从资源URL获取卷URL。</li><li>使用<code>NSURLLocalizedNameKey</code>常量从卷URL获取用户可见的卷名称。</li></ul><p>使用<code>NSURLLocalizedNameKey</code>常数而不是<code>NSURLNameKey</code>常数。使用<code>NSURLNameKey</code>返回文件系统中卷的名称，可能与用户可见名称不同。以下演示了当前用户主目录的这个过程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">NSURL *url = [NSURL fileURLWithPath:NSHomeDirectory()];</span><br><span class="line">NSURL *volumeURL = nil;</span><br><span class="line">NSString *volumeName = nil;</span><br><span class="line">if ([url getResourceValue:&amp;volumeURL forKey:NSURLVolumeURLKey error:nil]) &#123;</span><br><span class="line">    NSLog(@&quot;卷URL为: %@&quot;, volumeURL);</span><br><span class="line">    if ([volumeURL getResourceValue:&amp;volumeName forKey:NSURLLocalizedNameKey error:nil]) &#123;</span><br><span class="line">        NSLog(@&quot;卷名称为: %@&quot;, volumeName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在文件系统中查找项目"><a href="#在文件系统中查找项目" class="headerlink" title="在文件系统中查找项目"></a>在文件系统中查找项目</h2><p>在可以访问文件或目录之前，需要知道其位置。找到文件和目录有以下几种方法：</p><ul><li>自己找文件。</li><li>请用户指定一个位置。</li><li>在沙盒和非沙盒应用程序中的标准系统目录中查找文件。</li><li>使用书签。</li></ul><p>iOS的文件系统对应该放置文件的位置制定了具体的指导方针，因此App创建或使用的大部分项目应存储在众所周知的位置。系统提供用于定位这些众所周知位置的接口，App可以使用这些接口来定位项目并构建特定文件的路径。</p><h3 id="在App-Bundle中查找"><a href="#在App-Bundle中查找" class="headerlink" title="在App Bundle中查找"></a>在App Bundle中查找</h3><p>需要将资源文件定位在其bundle目录(或其他已知bundle内)中的应用程序必须使用<code>NSBundle</code>对象执行此操作。Bundles通过特定方式组织这些文件，消除App记住单个文件位置的需要。使用<code>NSBundle</code>类的方法来根据需要定位应用程序的资源。这种技术的优点在于，可以通过重新整理bundle的内容，而无需重写代码来访问它。Bundles还可以利用当前用户的语言设置来查找资源文件的适当本地化版本。</p><p>以下代码显示了如何检索位于应用程序主Bundle中名为<code>MyImage.png</code>图像的URL对象。此代码仅确定文件的位置，它不会打开文件。可以将返回的URL传递给<code>NSImage</code>类的方法，从磁盘加载使用它。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSURL *url = [[NSBundle mainBundle] URLForResource:@&quot;MyImage&quot; withExtension:@&quot;png&quot;];</span><br></pre></td></tr></table></figure><h3 id="在标准目录中查找"><a href="#在标准目录中查找" class="headerlink" title="在标准目录中查找"></a>在标准目录中查找</h3><p>当需要在其中一个标准目录中找到文件时，请首先使用系统框架找到目录，然后使用生成的URL构建文件的路径。<code>Foundation</code>框架包括几个用于定位标准系统目录的选项。通过使用这些方法，无论应用程序是否被沙盒化，路径都将是正确的：</p><ul><li><code>NSFileManager</code>类的<code>URLsForDirectory:inDomains:</code>方法返回打包了目录位置的<code>NSURL</code>对象。要搜索的目录是一个<code>NSSearchPathDirectory</code>常量。这些常量为用户的主目录以及大多数标准目录提供URL。</li><li><code>NSSearchPathForDirectoriesInDomains</code>函数的功能类似于<code>URLsForDirectory:inDomains:</code>方法，但返回目录的位置是一个基于字符串的路径。使用<code>URLsForDirectory:inDomains:</code>方法替代。</li><li><code>NSHomeDirectory</code>函数返回用户或应用程序的主目录路径。(返回的主目录取决于平台以及应用程序是否在沙盒中)。当应用程序被沙盒化时，主目录指向应用程序的沙盒，否则它指向文件系统上的用户主目录。如果将文件构建到用户主目录的子目录中，请考虑使用<code>URLsForDirectory:inDomains:</code>方法替代。</li></ul><p>可以使用从上述方法中接收的URL或基于路径的字符串来构建包含所需文件位置的新对象。<code>NSURL</code>和<code>NSString</code>类都提供了与路径相关的方法用于添加和删除路径组件并对路径进行一般性更改。下面显示了一个搜索标准<code>Application Support</code>目录并为包含应用程序数据文件的目录创建一个新URL的示例。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">- (NSURL *)applicationDataDirectory &#123;</span><br><span class="line">    NSFileManager *sharedFM = [NSFileManager defaultManager];</span><br><span class="line">    NSArray *possibleURLs = [sharedFM URLsForDirectory:NSApplicationSupportDirectory</span><br><span class="line">                                             inDomains:NSUserDomainMask];</span><br><span class="line">    NSURL *appSupportDir = nil;</span><br><span class="line">    NSURL *appDirectory = nil;</span><br><span class="line">    </span><br><span class="line">    if ([possibleURLs count] &gt;= 1) &#123;</span><br><span class="line">        // Use the first directory (if multiple are returned)</span><br><span class="line">        appSupportDir = [possibleURLs objectAtIndex:0];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // If a valid app support directory exists, add the</span><br><span class="line">    // app&apos;s bundle ID to it to specify the final directory.</span><br><span class="line">    if (appSupportDir) &#123;</span><br><span class="line">        NSString *appBundleID = [[NSBundle mainBundle] bundleIdentifier];</span><br><span class="line">        appDirectory = [appSupportDir URLByAppendingPathComponent:appBundleID];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    return appDirectory;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用书签查找文件"><a href="#使用书签查找文件" class="headerlink" title="使用书签查找文件"></a>使用书签查找文件</h3><p>如果想要永久保存文件的位置，使用<code>NSURL</code>的书签功能。书签是不透明的数据结构，封装在一个描述文件位置的<code>NSData</code>对象中。尽管路径和文件引用URL在应用程序启动之间可能会很脆弱，但是通常也可以使用书签来重新创建文件的URL，即使在文件被移动或重命名的情况下也是如此。</p><p>要为现有URL创建一个书签，使用<code>NSURL</code>的<code>bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:</code>方法。指定<code>NSURLBookmarkCreationSuitableForBookmarkFile</code>选项创建一个适合保存到磁盘的<code>NSData</code>对象。以下是一个使用此方法创建书签数据对象的简单示例实现。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- (NSData *)bookmarkForURL:(NSURL *)url &#123;</span><br><span class="line">    NSError *theError = nil;</span><br><span class="line">    NSData *bookmark = [url bookmarkDataWithOptions:NSURLBookmarkCreationSuitableForBookmarkFile</span><br><span class="line">                     includingResourceValuesForKeys:nil</span><br><span class="line">                                      relativeToURL:nil</span><br><span class="line">                                              error:&amp;theError];</span><br><span class="line">    if (theError || (bookmark == nil)) &#123;</span><br><span class="line">        // Handle any errors.</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">    return bookmark;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果使用<code>NSURL</code>的<code>writeBookmarkData:toURL:options:error:</code>方法将永久书签数据写入磁盘，系统在磁盘上创建的是一个别名文件。别名类似于符号链接，但实现方式不同。通常，当用户想要创建到系统其他位置的文件链接时，用户会从Finder创建别名。</p><p>要将书签数据对象转换回URL，使用<code>NSURL</code>的<code>URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:</code>方法。以下显示了将书签转换为URL的过程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">- (NSURL *)urlForBookmark:(NSData *)bookmark &#123;</span><br><span class="line">    BOOL bookmarkIsStale = NO;</span><br><span class="line">    NSError *theError = nil;</span><br><span class="line">    NSURL *bookmarkURL = [NSURL URLByResolvingBookmarkData:bookmark</span><br><span class="line">                                                   options:NSURLBookmarkResolutionWithoutUI</span><br><span class="line">                                             relativeToURL:nil</span><br><span class="line">                                       bookmarkDataIsStale:&amp;bookmarkIsStale</span><br><span class="line">                                                     error:&amp;theError];</span><br><span class="line">    </span><br><span class="line">    if (bookmarkIsStale || (theError != nil)) &#123;</span><br><span class="line">        // Handle any errors</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">    return bookmarkURL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="枚举目录的内容"><a href="#枚举目录的内容" class="headerlink" title="枚举目录的内容"></a>枚举目录的内容</h2><p>要发现给定目录的内容需要枚举该目录。Cocoa支持一次枚举一个目录一个文件或一次所有。无论选择哪个，谨慎枚举目录。每次枚举都可以触及大量的文件和子目录，这很快将变得代价昂贵。</p><h3 id="一次枚举一个目录一个文件"><a href="#一次枚举一个目录一个文件" class="headerlink" title="一次枚举一个目录一个文件"></a>一次枚举一个目录一个文件</h3><p>当要搜索特定文件并在找到该文件时停止枚举，建议一次枚举一个目录一个文件。逐个文件枚举使用<code>NSDirectoryEnumerator</code>类，该类定义了检索项目的方法。因为<code>NSDirectoryEnumerator</code>本身是一个抽象类，所以不能直接创建它的实例。相反，可以使用<code>enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:</code>或<code>NSFileManager</code>对象的<code>enumeratorAtPath:</code>方法来获取用于枚举的类的具体实例。</p><p>枚举器对象返回枚举目录中的所有文件和目录的路径。因为枚举是递归和跨设备边界的，所返回的文件和目录的数量可能超过起始目录中的内容。可以通过调用枚举器对象的<code>skipDescendents</code>方法来跳过不感兴趣目录的内容。枚举器对象不会解析符号链接或尝试遍历指向目录的符号链接。</p><p>以下代码显示了如何使用该 <code>enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:</code>方法列出给定目录的所有用户可见子目录，注意它们是目录还是文件包。该<code>keys</code>数组告诉枚举器对象为每个项目预取和缓存信息。通过仅接触一次磁盘可提高获取此信息的效率。options参数指定枚举不应列出的文件包和隐藏文件的内容。错误处理程序是返回布尔值的block块对象。如果block返回<code>YES</code>，则该在错误后继续列举， 如果返回<code>NO</code>，枚举停止。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">NSURL *directoryURL = &lt;#An NSURL object that contains a reference to a directory#&gt;;</span><br><span class="line"></span><br><span class="line">NSArray *keys = [NSArray arrayWithObjects:</span><br><span class="line">                 NSURLIsDirectoryKey, NSURLIsPackageKey, NSURLLocalizedNameKey, nil];</span><br><span class="line"></span><br><span class="line">NSDirectoryEnumerator *enumerator = [[NSFileManager defaultManager]</span><br><span class="line">                                     enumeratorAtURL:directoryURL</span><br><span class="line">                                     includingPropertiesForKeys:keys</span><br><span class="line">                                     options:(NSDirectoryEnumerationSkipsPackageDescendants |</span><br><span class="line">                                              NSDirectoryEnumerationSkipsHiddenFiles)</span><br><span class="line">                                     errorHandler:^(NSURL *url, NSError *error) &#123;</span><br><span class="line">                                         // Handle the error.</span><br><span class="line">                                         // Return YES if the enumeration should continue after the error.</span><br><span class="line">                                         return &lt;#YES or NO#&gt;;</span><br><span class="line">                                     &#125;];</span><br><span class="line"></span><br><span class="line">for (NSURL *url in enumerator) &#123;</span><br><span class="line">    // Error checking is omitted for clarity.</span><br><span class="line">    NSNumber *isDirectory = nil;</span><br><span class="line">    [url getResourceValue:&amp;isDirectory forKey:NSURLIsDirectoryKey error:NULL];</span><br><span class="line">    </span><br><span class="line">    if ([isDirectory boolValue]) &#123;</span><br><span class="line">        NSString *localizedName = nil;</span><br><span class="line">        [url getResourceValue:&amp;localizedName forKey:NSURLLocalizedNameKey error:NULL];</span><br><span class="line">        </span><br><span class="line">        NSNumber *isPackage = nil;</span><br><span class="line">        [url getResourceValue:&amp;isPackage forKey:NSURLIsPackageKey error:NULL];</span><br><span class="line">        </span><br><span class="line">        if ([isPackage boolValue]) &#123;</span><br><span class="line">            NSLog(@&quot;Package at %@&quot;, localizedName);</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            NSLog(@&quot;Directory at %@&quot;, localizedName);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过使用<code>NSDirectoryEnumerator</code>声明的其他方法来确定枚举期间文件的属性(父目录和当前文件或目录)，并控制递归到子目录中。以下代码枚举了一个目录的内容，并列出了最近24小时内修改过的文件。然而，如果它遇到RTFD文件包，它会跳过对它们的递归。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">NSString *directoryPath = &lt;#Get a path to a directory#&gt;;</span><br><span class="line">NSDirectoryEnumerator *directoryEnumerator = [[NSFileManager defaultManager] enumeratorAtPath:directoryPath];</span><br><span class="line">NSDate *yesterday = [NSDate dateWithTimeIntervalSinceNow:(-60 * 60 * 24)];</span><br><span class="line">for (NSString *path in directoryEnumerator) &#123;</span><br><span class="line">    if ([[path pathExtension] isEqualToString:@&quot;rtfd&quot;]) &#123;</span><br><span class="line">        // Don&apos;t enumerate this directory.</span><br><span class="line">        [directoryEnumerator skipDescendents];</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        NSDictionary *attributes = [directoryEnumerator fileAttributes];</span><br><span class="line">        NSDate *lastModificationDate = [attributes objectForKey:NSFileModificationDate];</span><br><span class="line">        if ([yesterday earlierDate:lastModificationDate] == yesterday) &#123;</span><br><span class="line">            NSLog(@&quot;%@ was modified within the last 24 hours&quot;, path);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在单个批处理中获取目录的内容"><a href="#在单个批处理中获取目录的内容" class="headerlink" title="在单个批处理中获取目录的内容"></a>在单个批处理中获取目录的内容</h3><p>如果想要查看目录中的每一项，可以在方便的情况下检索项目的快照并对其进行迭代。在批处理操作中检索目录的内容不是枚举目录的最有效方法，因为文件管理器必须每次都遍历整个目录内容。但是，如果计划查看所有项目，那么检索项目是一种简单的方式。</p><p>使用<code>NSFileManager</code>有以下两种选择方式对目录进行批枚举：</p><ul><li>执行浅枚举，使用<code>contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:</code>或<code>contentsOfDirectoryAtPath:error:</code>方法。</li><li>执行深枚举并仅返回子目录，使用<code>subpathsOfDirectoryAtPath:error:</code>方法。</li></ul><p>以下代码是一个使用<code>contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:</code>方法枚举目录内容的示例。使用URL的好处之一是还可以有效地检索每项的其他信息。此示例检索目录中每项的本地化名称，创建日期和类型信息，并将该信息存储在相应的<code>NSURL</code>对象中。当该方法返回时，可以继续迭代<code>array</code>变量中的项目，并使用它们进行所需操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">NSURL *url = &lt;#A URL for a directory#&gt;;</span><br><span class="line">NSError *error = nil;</span><br><span class="line">NSArray *properties = [NSArray arrayWithObjects: NSURLLocalizedNameKey,</span><br><span class="line">                       NSURLCreationDateKey, NSURLLocalizedTypeDescriptionKey, nil];</span><br><span class="line">NSArray *array = [[NSFileManager defaultManager]</span><br><span class="line">                  contentsOfDirectoryAtURL:url</span><br><span class="line">                  includingPropertiesForKeys:properties</span><br><span class="line">                  options:(NSDirectoryEnumerationSkipsHiddenFiles)</span><br><span class="line">                  error:&amp;error];</span><br><span class="line">if (array == nil) &#123;</span><br><span class="line">    // Handle the error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="确定存储App特定文件的位置"><a href="#确定存储App特定文件的位置" class="headerlink" title="确定存储App特定文件的位置"></a>确定存储App特定文件的位置</h2><p><code>Library</code>目录是应用程序创建和管理文件的指定存储库。App是沙盒目录，这些目录可能在不同位置。结果是始终使用<code>NSFileManager</code>的<code>URLsForDirectory:inDomains:</code>方法与<code>NSUserDomainMask</code>作为域来定位要存储这些数据的特定目录。</p><ul><li>使用<code>Application Support</code>目录常量 <code>NSApplicationSupportDirectory</code>，将<em>&lt;bundle_ID&gt;</em>添加上：<ul><li>应用程序为用户创建和管理的资源和数据文件。使用此目录来存储应用程序状态信息，计算或下载的数据，甚至用户创建的数据。</li><li>自动保存文件。</li></ul></li><li>使用<code>Caches</code>目录常量<code>NSCachesDirectory</code>，添加<em>&lt;bundle_ID&gt;</em>目录缓存数据文件或任何文件，应用程序可以轻松重新创建。</li><li>使用<code>NSUserDefaults</code>类读取和写入偏好。该类自动将首选项写入适当的位置。</li><li>使用<code>NSFileManager</code>方法<code>URLsForDirectory:inDomains:</code>获取存储临时文件的目录。临时文件是打算立即使用某些正在进行操作的文件，但是稍后打算丢弃。一旦完成，删除临时文件。</li></ul><p>如果在三天后不删除临时文件，系统可能会删除它们，无论是否使用它们。</p><h1 id="管理文件和目录"><a href="#管理文件和目录" class="headerlink" title="管理文件和目录"></a>管理文件和目录</h1><p>涉及文件和目录的一些最基本操作是创建它们并将它们移动到文件系统。这些操作是应用程序如何构建其执行任务所需的文件系统结构。对于大多数操作，<code>NSFileManager</code>类应提供创建和操作文件所需的功能。在极少数情况下，不需要直接使用BSD级别的功能。</p><h2 id="以编程方式创建新文件和目录"><a href="#以编程方式创建新文件和目录" class="headerlink" title="以编程方式创建新文件和目录"></a>以编程方式创建新文件和目录</h2><p>创建文件和目录是文件管理的基本部分。通常，创建自定义目录来组织代码创建的文件。例如，可以在应用程序<code>Application Support</code>目录中创建一些自定义目录，以存储应用程序管理的任何私有数据文件。有很多方法来创建文件。</p><h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><p>当要创建自定义目录时，可以使用以下<code>NSFileManager</code>方法。一个进程可以在任何具有这样做权限的地方创建目录，它始终包括当前主目录，并且还可以包括其他文件系统位置。可以通过构建一个路径来指定要创建的目录，并将<code>NSURL</code>或<code>NSString</code>对象传递给以下方法之一：</p><ul><li><code>createDirectoryAtURL:withIntermediateDirectories:attributes:error:</code> </li><li><code>createDirectoryAtPath:withIntermediateDirectories:attributes:error:</code></li></ul><p>以下代码显示了如何在<code>~/Library/Application Support</code>中为应用程序文件创建自定义目录。如果该目录不存在，则该方法将创建目录，并将目录的路径返回给调用代码。因为这种方法每次都触及文件系统，所以避免重复调用此方法来检索URL。可以调用它一次，然后缓存返回的URL。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">- (NSURL *)applicationDirectory &#123;</span><br><span class="line">    NSString *bundleID = [[NSBundle mainBundle] bundleIdentifier];</span><br><span class="line">    NSFileManager *fm = [NSFileManager defaultManager];</span><br><span class="line">    NSURL *dirPath = nil;</span><br><span class="line">    </span><br><span class="line">    // Find the application support directory in the home directory.</span><br><span class="line">    NSArray *appSupportDir = [fm URLsForDirectory:NSApplicationSupportDirectory</span><br><span class="line">                                        inDomains:NSUserDomainMask];</span><br><span class="line">    if ([appSupportDir count] &gt; 0) &#123;</span><br><span class="line">        // Append the bundle ID to the URL for the</span><br><span class="line">        // Application Support directory</span><br><span class="line">        dirPath = [[appSupportDir objectAtIndex:0] URLByAppendingPathComponent:bundleID];</span><br><span class="line">        // If the directory does not exist, this method creates it.</span><br><span class="line">        // This method is only available in macOS 10.7 and iOS 5.0 or later.</span><br><span class="line">        NSError *theError = nil;</span><br><span class="line">        if (![fm createDirectoryAtURL:dirPath withIntermediateDirectories:YES</span><br><span class="line">                           attributes:nil error:&amp;theError]) &#123;</span><br><span class="line">            // Handle the error.</span><br><span class="line">            return nil;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return dirPath;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建新文件"><a href="#创建新文件" class="headerlink" title="创建新文件"></a>创建新文件</h3><p>创建文件有两个部分：为文件系统中的文件创建一个记录，并用内容填充该文件。用于创建文件的所有高级接口同时执行两个任务，通常用<code>NSData</code>或<code>NSString</code>对象的内容填充文件，然后关闭该文件。还可以使用较低级别的函数来创建一个空文件，并获得一个文件描述符，然后可以使用该文件描述符来填充数据。可以用来创建文件的一些例程有：</p><ul><li><code>createFileAtPath:contents:attributes:</code>（<code>NSFileManager</code>）</li><li><code>writeToURL:atomically:</code>（<code>NSData</code>）</li><li><code>writeToURL:atomically:</code>（<code>NSString</code>）</li><li><code>writeToURL:atomically:encoding:error:</code>（<code>NSString</code>）</li><li><code>writeToURL:atomically:</code> （各种集合类定义了用于编写属性列表的方法。）</li><li><code>open</code>功能与<code>O_CREAT</code>选项创建一个新的空文件</li></ul><p>创建的任何文件都会继承与当前用户和进程关联的权限。当一次写入新文件的内容时，系统例程通常在将内容写入磁盘后关闭文件。如果例程返回文件描述符，则可以使用该描述符继续从文件读取和写入。</p><h2 id="复制移动文件和目录"><a href="#复制移动文件和目录" class="headerlink" title="复制移动文件和目录"></a>复制移动文件和目录</h2><p>要复制文件系统周围的项目，<code>NSFileManager</code>类提供<code>copyItemAtURL:toURL:error:</code>和<code>copyItemAtPath:toPath:error:</code>方法。移动文件使用<code>moveItemAtURL:toURL:error:</code>或<code>moveItemAtPath:toPath:error:</code>方法。</p><p>以上方法一次移动或复制单个文件或目录。移动或复制目录时，目录及其所有内容将受到影响。移动和复制操作的语义与Finder中的相同。在同一卷上移动操作不会导致创建新版本的项目。卷之间的移动操作的行为与复制操作相同。当移动或复制项目时，当前进程必须具有读取项目的权限，并将其移动或复制到新位置。</p><p>移动和复制操作可能需要很长时间才能完成，并且<code>NSFileManager</code>类同步执行这些操作。因此，建议在并发调度队列中执行任何此类操作，而不是在应用程序的主线程上执行。以下代码显示了一个例子，通过异步创建虚构应用程序私有数据的备份。（为了示例的目的，私有数据位于<code>~/Library/Application Support/&lt;bundleID&gt;/Data</code>目录中，其中<em>bundleID</em>是应用程序的实际bundle标识符。）如果首次尝试复制目录失败，则此方法将检查是否存在先前的备份并将其删除。然后继续尝试，如果第二次失败，则中止。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">- (void)backupMyApplicationData &#123;</span><br><span class="line">    // Get the application&apos;s main data directory</span><br><span class="line">    NSArray *theDirs = [[NSFileManager defaultManager] URLsForDirectory:NSApplicationSupportDirectory</span><br><span class="line">                                                              inDomains:NSUserDomainMask];</span><br><span class="line">    if ([theDirs count] &gt; 0) &#123;</span><br><span class="line">        // Build a path to ~/Library/Application Support/&lt;bundle_ID&gt;/Data</span><br><span class="line">        // where &lt;bundleID&gt; is the actual bundle ID of the application.</span><br><span class="line">        NSURL *appSupportDir = (NSURL *)[theDirs objectAtIndex:0];</span><br><span class="line">        NSString *appBundleID = [[NSBundle mainBundle] bundleIdentifier];</span><br><span class="line">        NSURL *appDataDir = [[appSupportDir URLByAppendingPathComponent:appBundleID]</span><br><span class="line">                             URLByAppendingPathComponent:@&quot;Data&quot;];</span><br><span class="line">        // Copy the data to ~/Library/Application Support/&lt;bundle_ID&gt;/Data.backup</span><br><span class="line">        NSURL *backupDir = [appDataDir URLByAppendingPathExtension:@&quot;backup&quot;];</span><br><span class="line">        // Perform the copy asynchronously.</span><br><span class="line">        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^&#123;</span><br><span class="line">            // It&apos;s good habit to alloc/init the file manager for move/copy operations,</span><br><span class="line">            // just in case you decide to add a delegate later.</span><br><span class="line">            NSFileManager *theFM = [[NSFileManager alloc] init];</span><br><span class="line">            NSError *anError;</span><br><span class="line">            // Just try to copy the directory.</span><br><span class="line">            if (![theFM copyItemAtURL:appDataDir toURL:backupDir error:&amp;anError]) &#123;</span><br><span class="line">                // If an error occurs, it&apos;s probably because a previous backup directory</span><br><span class="line">                // already exists.  Delete the old directory and try again.</span><br><span class="line">                if ([theFM removeItemAtURL:backupDir error:&amp;anError]) &#123;</span><br><span class="line">                    // If the operation failed again, abort for real.</span><br><span class="line">                    if (![theFM copyItemAtURL:appDataDir toURL:backupDir error:&amp;anError]) &#123;</span><br><span class="line">                        // Report the error....</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="删除文件和目录"><a href="#删除文件和目录" class="headerlink" title="删除文件和目录"></a>删除文件和目录</h2><p>要删除文件和目录，使用以下<code>NSFileManager</code>类的方法：</p><ul><li><code>removeItemAtURL:error:</code></li><li><code>removeItemAtPath:error:</code></li></ul><p>当使用这些方法删除文件时，需意识到是永久删除文件系统中的文件。这些方法不会将文件移动到稍后可以将其恢复的垃圾桶。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40010672" target="_blank" rel="noopener">File System Programming Guide</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;文件系统基础&quot;&gt;&lt;a href=&quot;#文件系统基础&quot; class=&quot;headerlink&quot; title=&quot;文件系统基础&quot;&gt;&lt;/a&gt;文件系统基础&lt;/h1&gt;&lt;p&gt;iOS中的文件系统处理数据文件的持久存储，应用程序和与操作系统本身相关的文件，文件系统是所有进程使用的基本资源之一。iOS中的文件系统主要格式是HFS Plus，为了使系统简单，iOS设备的用户不能直接访问文件系统，应用程序也应遵循此惯例。&lt;/p&gt;
&lt;h2 id=&quot;iOS标准目录&quot;&gt;&lt;a href=&quot;#iOS标准目录&quot; class=&quot;headerlink&quot; title=&quot;iOS标准目录&quot;&gt;&lt;/a&gt;iOS标准目录&lt;/h2&gt;&lt;p&gt;为了安全起见，iOS应用程序与文件系统的交互仅限于应用程序沙盒目录中的目录。在安装新应用程序期间，安装程序会在沙盒目录中为应用程序创建多个容器目录。bundle容器目录包含应用程序的bundle，而数据容器目录保存应用程序和用户的数据。数据容器目录进一步分为多个子目录，该应用程序可用于对其数据进行排序和整理。应用程序还可以在运行时请求访问其他容器目录，例如iCloud容器。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://willwei.me/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://willwei.me/tags/iOS/"/>
    
      <category term="Translate" scheme="http://willwei.me/tags/Translate/"/>
    
  </entry>
  
  <entry>
    <title>青春和爱情</title>
    <link href="http://willwei.me/2017/04/26/%E9%9D%92%E6%98%A5%E5%92%8C%E7%88%B1%E6%83%85/"/>
    <id>http://willwei.me/2017/04/26/青春和爱情/</id>
    <published>2017-04-26T11:03:29.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>青春 — 席慕蓉</p></blockquote><p>所有的结局都已写好</p><p>所有的泪水也都已启程</p><p>却忽然忘了是怎么样的一个开始</p><p>在那个古老的不再回来的夏日</p><p>无论我如何地去追索</p><p>年轻的你只如云影掠过　</p><p>而你微笑的面容极浅极淡　</p><p>逐渐隐没在日落后的群岚</p><p>遂翻开那发黄的扉页</p><p>命运将它装订的极为拙劣</p><p>含着泪 我一读再读</p><p>却不得不承认</p><p>青春 是一本太仓促的书</p><a id="more"></a><blockquote><p>我曾经爱过你 — 普希金</p></blockquote><p>爱情，</p><p>也许在我的心灵里还没有完全消亡，</p><p>但愿它不会再打扰你，</p><p>我也不想再使你难过悲伤。</p><p>我曾经默默无语、毫无指望地爱过你，</p><p>我既忍受着羞怯，又忍受着嫉妒的折磨，</p><p>我曾经那样真诚、那样温柔地爱过你，</p><p>但愿上帝保佑你，</p><p>另一个人也会像我一样地爱你。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;青春 — 席慕蓉&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所有的结局都已写好&lt;/p&gt;
&lt;p&gt;所有的泪水也都已启程&lt;/p&gt;
&lt;p&gt;却忽然忘了是怎么样的一个开始&lt;/p&gt;
&lt;p&gt;在那个古老的不再回来的夏日&lt;/p&gt;
&lt;p&gt;无论我如何地去追索&lt;/p&gt;
&lt;p&gt;年轻的你只如云影掠过　&lt;/p&gt;
&lt;p&gt;而你微笑的面容极浅极淡　&lt;/p&gt;
&lt;p&gt;逐渐隐没在日落后的群岚&lt;/p&gt;
&lt;p&gt;遂翻开那发黄的扉页&lt;/p&gt;
&lt;p&gt;命运将它装订的极为拙劣&lt;/p&gt;
&lt;p&gt;含着泪 我一读再读&lt;/p&gt;
&lt;p&gt;却不得不承认&lt;/p&gt;
&lt;p&gt;青春 是一本太仓促的书&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://willwei.me/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://willwei.me/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>iOS App安装包瘦身</title>
    <link href="http://willwei.me/2017/04/19/iOS%20App%E5%AE%89%E8%A3%85%E5%8C%85%E7%98%A6%E8%BA%AB/"/>
    <id>http://willwei.me/2017/04/19/iOS App安装包瘦身/</id>
    <published>2017-04-19T16:53:52.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>最后更新时间：2017.7.21</p><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>最近的一个小项目，打包出来的ipa包高达90.8MB，这是我始料未及的，于是动了心思为它瘦身。</p><a id="more"></a><h1 id="安装包瘦身"><a href="#安装包瘦身" class="headerlink" title="安装包瘦身"></a>安装包瘦身</h1><h2 id="资源优化"><a href="#资源优化" class="headerlink" title="资源优化"></a>资源优化</h2><p>资源包括图片、音视频文件、配置文件、字体包等。</p><h3 id="删除无用资源及重复资源"><a href="#删除无用资源及重复资源" class="headerlink" title="删除无用资源及重复资源"></a>删除无用资源及重复资源</h3><p>无用资源指资源在工程文件中，但是没有被代码引用。重复资源指文件内容一样，文件名可以不一样的资源。</p><ul><li>删除无用资源工具：<a href="https://github.com/tinymind/LSUnusedResources" target="_blank" rel="noopener">LSUnusedResources</a><ul><li>勾选<code>Ignore similar name</code>防止误删</li></ul></li><li>删除重复资源工具：<a href="https://macpaw.com/gemini" target="_blank" rel="noopener">Gemini</a><ul><li>完全重复项可删，相似项看情况删除</li></ul></li></ul><p>一般来说工程管理的好的话，这两个是减少不了多少体积下来的。</p><h3 id="资源压缩"><a href="#资源压缩" class="headerlink" title="资源压缩"></a>资源压缩</h3><ul><li>图片资源压缩。<ul><li>工具：<a href="https://tinypng.com/" target="_blank" rel="noopener">TinyPng</a>或<a href="https://github.com/ImageOptim/ImageOptim" target="_blank" rel="noopener">ImageOptim</a></li></ul></li><li>音视频压缩。</li></ul><p>资源压缩是一定要做的，可以缩小很多体积。</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>将这些资源移到Web服务，App可以从Web服务中下载所需资源。</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li>图片资源尽量放在<code>Assets.xcassets</code>中管理。</li></ul><h2 id="编译优化"><a href="#编译优化" class="headerlink" title="编译优化"></a>编译优化</h2><ul><li><code>Build Settings -&gt; Optimization Level</code>，Release设置为<code>Fastest, Smallest</code>。</li><li><code>Build Settings -&gt; Strip Debug Symbols During Copy</code>设置为<code>Yes</code>。</li><li><code>Build Settings -&gt; Symbols Hidden by Default</code>设置为<code>Yes</code>。</li><li><code>Build Settings -&gt; Dead Code Stripping</code> 设置成 <code>Yes</code>。</li><li><code>Build Settings -&gt; Strip Linked Product</code>设置为<code>Yes</code>。</li><li><code>Build Settings -&gt; Deployment Postprocessing</code>设置为<code>Yes</code>。</li><li><code>Build Settings -&gt; Use Separate Strip</code>设置为<code>Yes</code>。</li></ul><p>编译优化感觉减小的并不多。</p><h2 id="可执行文件优化"><a href="#可执行文件优化" class="headerlink" title="可执行文件优化"></a>可执行文件优化</h2><p>待研究</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://developer.apple.com/library/content/documentation/IDEs/Conceptual/AppDistributionGuide/AppThinning/AppThinning.html" target="_blank" rel="noopener">App Thinning</a></p><p><a href="https://developer.apple.com/library/content/qa/qa1795/_index.html" target="_blank" rel="noopener">Reducing the size of my App</a></p><p><a href="https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/On_Demand_Resources_Guide/" target="_blank" rel="noopener">On-Demand Resources Essentials</a></p><p><a href="https://developer.apple.com/library/mac/documentation/DeveloperTools/Reference/XcodeBuildSettingRef/1-Build_Setting_Reference/build_setting_ref.html" target="_blank" rel="noopener">Build Setting Reference</a></p><p><a href="http://jonathanblog2000.blogspot.sg/2013/07/xcode-build-settings-for-debug-symbol.html" target="_blank" rel="noopener">xcode build settings for debug symbol</a></p><p> <a href="http://stackoverflow.com/questions/17650138/ios-ipa-file-size-xcode-archive-vs-xcodebuild-command" target="_blank" rel="noopener">iOS IPA file size - xcode-archive vs. xcodebuild command</a></p><p><a href="http://www.jianshu.com/p/11710e7ab661" target="_blank" rel="noopener">Xcode中和symbols有关的几个设置</a></p><p><a href="http://www.cocoachina.com/ios/20150202/11084.html" target="_blank" rel="noopener">iOS可执行文件瘦身方法</a></p><p><a href="http://www.jianshu.com/p/c94dedef90b7" target="_blank" rel="noopener">iOS APP安装包瘦身实践</a></p><p><a href="http://superdanny.link/2017/03/03/App-Thinning/#more" target="_blank" rel="noopener">为自己的 APP 瘦身</a></p><p><a href="http://www.cocoachina.com/ios/20151203/14562.html" target="_blank" rel="noopener">iOS微信安装包瘦身</a></p><p><a href="http://blog.csdn.net/mengxiangyue/article/details/50753858" target="_blank" rel="noopener">iOS9-by-Tutorials-学习笔记四：APP-瘦身</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最后更新时间：2017.7.21&lt;/p&gt;
&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;最近的一个小项目，打包出来的ipa包高达90.8MB，这是我始料未及的，于是动了心思为它瘦身。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://willwei.me/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://willwei.me/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>UITabbarController左右滑动切换标签页</title>
    <link href="http://willwei.me/2017/04/12/UITabbarController%E5%B7%A6%E5%8F%B3%E6%BB%91%E5%8A%A8%E5%88%87%E6%8D%A2%E6%A0%87%E7%AD%BE%E9%A1%B5/"/>
    <id>http://willwei.me/2017/04/12/UITabbarController左右滑动切换标签页/</id>
    <published>2017-04-12T09:25:03.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>为UINavigationController添加Category获取根视图控制器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- (UIViewController *)ww_rootViewController &#123;</span><br><span class="line">    if (self.viewControllers &amp;&amp; [self.viewControllers count] &gt; 0) &#123;</span><br><span class="line">        return [self.viewControllers firstObject];</span><br><span class="line">    &#125;</span><br><span class="line">    return nil;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>在基类BaseViewController中添加判断，只有根控制器才添加切换手势</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- (void)viewDidLoad &#123;</span><br><span class="line">    [super viewDidLoad];</span><br><span class="line">    if ([self.navigationController.ww_rootViewController isKindOfClass:[self class]]) &#123;</span><br><span class="line">        [self addSwitchGestureRecognizer];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现<code>addSwitchGestureRecognizer</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- (void)addSwitchGestureRecognizer &#123;</span><br><span class="line">    UISwipeGestureRecognizer *swipeLeft = [[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(baseGestureRightButton:)];</span><br><span class="line">    [swipeLeft setDirection:UISwipeGestureRecognizerDirectionLeft];</span><br><span class="line">    [self.view addGestureRecognizer:swipeLeft];</span><br><span class="line">    </span><br><span class="line">    UISwipeGestureRecognizer *swipeRight = [[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(baseGestureLeftButton:)];</span><br><span class="line">    [swipeRight setDirection:UISwipeGestureRecognizerDirectionRight];</span><br><span class="line">    [self.view addGestureRecognizer:swipeRight];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>右滑事件，注释里面是另外的动画</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">- (void)baseGestureRightButton:(id)sender &#123;</span><br><span class="line">    NSUInteger selectedIndex = [self.tabBarController selectedIndex];</span><br><span class="line">    NSArray *viewControllerArray = self.tabBarController.viewControllers;</span><br><span class="line">    /*</span><br><span class="line">    if (selectedIndex &lt; viewControllerArray.count - 1) &#123;</span><br><span class="line">        [self.tabBarController setSelectedIndex:selectedIndex + 1];</span><br><span class="line">        //To animate use this code</span><br><span class="line">        CATransition *anim= [CATransition animation];</span><br><span class="line">        [anim setType:kCATransitionPush];</span><br><span class="line">        [anim setSubtype:kCATransitionFromRight];</span><br><span class="line">        [anim setDuration:0.4f];</span><br><span class="line">        [anim setTimingFunction:[CAMediaTimingFunction functionWithName:</span><br><span class="line">                                 kCAMediaTimingFunctionEaseIn]];</span><br><span class="line">        [self.tabBarController.view.layer addAnimation:anim forKey:@&quot;fadeTransition&quot;];</span><br><span class="line">    &#125;</span><br><span class="line">    */</span><br><span class="line">    /*</span><br><span class="line">    if (selectedIndex &lt; viewControllerArray.count - 1) &#123;</span><br><span class="line">        UIView *fromView = [self.tabBarController.selectedViewController view];</span><br><span class="line">        UIView *toView = [[self.tabBarController.viewControllers objectAtIndex:selectedIndex + 1] view];</span><br><span class="line">        [UIView transitionFromView:fromView toView:toView duration:0.5f options:UIViewAnimationOptionTransitionFlipFromRight completion:^(BOOL finished) &#123;</span><br><span class="line">            if (finished) &#123;</span><br><span class="line">                [self.tabBarController setSelectedIndex:selectedIndex + 1];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;];</span><br><span class="line">    &#125;</span><br><span class="line">    */</span><br><span class="line">    if (selectedIndex &lt; viewControllerArray.count - 1) &#123;</span><br><span class="line">        NSUInteger controllerIndex = selectedIndex + 1;</span><br><span class="line">        // Get the views.</span><br><span class="line">        UIView *fromView = self.tabBarController.selectedViewController.view;</span><br><span class="line">        UIView *toView = [[viewControllerArray objectAtIndex:controllerIndex] view];</span><br><span class="line">        </span><br><span class="line">        // Get the size of the view area.</span><br><span class="line">        CGRect viewSize = fromView.frame;</span><br><span class="line">        BOOL scrollRight = controllerIndex &gt; self.tabBarController.selectedIndex;</span><br><span class="line">        </span><br><span class="line">        // Add the to view to the tab bar view.</span><br><span class="line">        [fromView.superview addSubview:toView];</span><br><span class="line">        </span><br><span class="line">        // Position it off screen.</span><br><span class="line">        toView.frame = CGRectMake((scrollRight ? viewSize.size.width : -viewSize.size.width), viewSize.origin.y, viewSize.size.width, viewSize.size.height);</span><br><span class="line">        </span><br><span class="line">        [UIView animateWithDuration:0.5f</span><br><span class="line">                         animations: ^&#123;</span><br><span class="line">                             // Animate the views on and off the screen. This will appear to slide.</span><br><span class="line">                             fromView.frame = CGRectMake((scrollRight ? -viewSize.size.width : viewSize.size.width), viewSize.origin.y, viewSize.size.width, viewSize.size.height);</span><br><span class="line">                             toView.frame = CGRectMake(0, viewSize.origin.y, viewSize.size.width, viewSize.size.height);</span><br><span class="line">                         &#125;</span><br><span class="line">                         completion:^(BOOL finished) &#123;</span><br><span class="line">                             if (finished) &#123;</span><br><span class="line">                                 // Remove the old view from the tabbar view.</span><br><span class="line">                                 [fromView removeFromSuperview];</span><br><span class="line">                                 self.tabBarController.selectedIndex = controllerIndex;</span><br><span class="line">                             &#125;</span><br><span class="line">                         &#125;];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>左滑事件，注释里面是另外的动画</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">- (void)baseGestureLeftButton:(id)sender &#123;</span><br><span class="line">    NSUInteger selectedIndex = [self.tabBarController selectedIndex];</span><br><span class="line">    NSArray *viewControllerArray = self.tabBarController.viewControllers;</span><br><span class="line">    /*</span><br><span class="line">    if (selectedIndex &gt; 0) &#123;</span><br><span class="line">        [self.tabBarController setSelectedIndex:selectedIndex - 1];</span><br><span class="line">        CATransition *anim= [CATransition animation];</span><br><span class="line">        [anim setType:kCATransitionPush];</span><br><span class="line">        [anim setSubtype:kCATransitionFromLeft];</span><br><span class="line">        [anim setDuration:0.4f];</span><br><span class="line">        [anim setTimingFunction:[CAMediaTimingFunction functionWithName:</span><br><span class="line">                                 kCAMediaTimingFunctionEaseIn]];</span><br><span class="line">        [self.tabBarController.view.layer addAnimation:anim forKey:@&quot;fadeTransition&quot;];</span><br><span class="line">    &#125;</span><br><span class="line">    */</span><br><span class="line">    /*</span><br><span class="line">    if (selectedIndex &gt; 0) &#123;</span><br><span class="line">        UIView *fromView = [self.tabBarController.selectedViewController view];</span><br><span class="line">        UIView *toView = [[self.tabBarController.viewControllers objectAtIndex:selectedIndex - 1] view];</span><br><span class="line">        [UIView transitionFromView:fromView toView:toView duration:0.5f options:UIViewAnimationOptionTransitionFlipFromLeft completion:^(BOOL finished) &#123;</span><br><span class="line">            if (finished) &#123;</span><br><span class="line">                [self.tabBarController setSelectedIndex:selectedIndex - 1];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;];</span><br><span class="line">    &#125;</span><br><span class="line">    */</span><br><span class="line">    if (selectedIndex &gt; 0) &#123;</span><br><span class="line">        NSUInteger controllerIndex = selectedIndex - 1;</span><br><span class="line">        // Get the views.</span><br><span class="line">        UIView *fromView = self.tabBarController.selectedViewController.view;</span><br><span class="line">        UIView *toView = [[viewControllerArray objectAtIndex:controllerIndex] view];</span><br><span class="line">        </span><br><span class="line">        // Get the size of the view area.</span><br><span class="line">        CGRect viewSize = fromView.frame;</span><br><span class="line">        BOOL scrollRight = controllerIndex &gt; self.tabBarController.selectedIndex;</span><br><span class="line">        </span><br><span class="line">        // Add the to view to the tab bar view.</span><br><span class="line">        [fromView.superview addSubview:toView];</span><br><span class="line">        </span><br><span class="line">        // Position it off screen.</span><br><span class="line">        toView.frame = CGRectMake((scrollRight ? viewSize.size.width : -viewSize.size.width), viewSize.origin.y, viewSize.size.width, viewSize.size.height);</span><br><span class="line">        </span><br><span class="line">        [UIView animateWithDuration:0.5f</span><br><span class="line">                         animations: ^&#123;</span><br><span class="line">                             // Animate the views on and off the screen. This will appear to slide.</span><br><span class="line">                             fromView.frame = CGRectMake((scrollRight ? -viewSize.size.width : viewSize.size.width), viewSize.origin.y, viewSize.size.width, viewSize.size.height);</span><br><span class="line">                             toView.frame = CGRectMake(0, viewSize.origin.y, viewSize.size.width, viewSize.size.height);</span><br><span class="line">                         &#125;</span><br><span class="line">                         completion:^(BOOL finished) &#123;</span><br><span class="line">                             if (finished) &#123;</span><br><span class="line">                                 // Remove the old view from the tabbar view.</span><br><span class="line">                                 [fromView removeFromSuperview];</span><br><span class="line">                                 self.tabBarController.selectedIndex = controllerIndex;</span><br><span class="line">                             &#125;</span><br><span class="line">                         &#125;];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="http://stackoverflow.com/questions/12533976/ios-swipe-left-right-between-tabs-possible" target="_blank" rel="noopener">ios-swipe-left-right-between-tabs-possible</a></p><p><a href="http://stackoverflow.com/questions/5161730/iphone-how-to-switch-tabs-with-an-animation" target="_blank" rel="noopener">iphone-how-to-switch-tabs-with-an-animation</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为UINavigationController添加Category获取根视图控制器&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (UIViewController *)ww_rootViewController &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (self.viewControllers &amp;amp;&amp;amp; [self.viewControllers count] &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return [self.viewControllers firstObject];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://willwei.me/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://willwei.me/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iTerm2安装配置</title>
    <link href="http://willwei.me/2017/03/21/iTerm2%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>http://willwei.me/2017/03/21/iTerm2安装配置/</id>
    <published>2017-03-21T17:07:32.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>偶然看见一个比较喜欢的终端界面</p><p><img src="https://ww3.sinaimg.cn/large/006tKfTcly1fdukrbiu9lj30hl09m768.jpg" alt="222"></p><p>于是尝试配置了出来，写这篇博客记录下步骤。以下适用于Mac。</p><a id="more"></a><h1 id="下载安装iTerm2"><a href="#下载安装iTerm2" class="headerlink" title="下载安装iTerm2"></a>下载安装<a href="http://www.iterm2.com/" target="_blank" rel="noopener">iTerm2</a></h1><p>Mac自带了Zsh。想要最新版可以通过下面的命令安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install zsh</span><br></pre></td></tr></table></figure><p>查看Zsh版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ zsh --version</span><br></pre></td></tr></table></figure><p>iTerm2默认使用dash，改成Zsh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chsh -s /bin/zsh</span><br></pre></td></tr></table></figure><h1 id="安装oh-my-zsh"><a href="#安装oh-my-zsh" class="headerlink" title="安装oh-my-zsh"></a>安装<a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">oh-my-zsh</a></h1><p>打开iTerm2，通过<code>curl</code> 或 <code>wget</code>安装</p><p><strong>via curl</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure><p><strong>via wget</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sh -c &quot;$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)&quot;</span><br></pre></td></tr></table></figure><p>设置主题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim ~/.zshrc</span><br></pre></td></tr></table></figure><p>修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZSH_THEME=&quot;agnoster&quot;</span><br></pre></td></tr></table></figure><h1 id="安装solarized"><a href="#安装solarized" class="headerlink" title="安装solarized"></a>安装<a href="https://github.com/altercation/solarized" target="_blank" rel="noopener">solarized</a></h1><p>下载工程，进入刚刚下载的工程<code>solarized/iterm2-colors-solarized</code> 下双击 <code>Solarized Dark.itermcolors</code> 把配置文件导入到 iTerm2 里中</p><p>将iTerm2配色方案配置为Solarized Dark</p><p><img src="https://ww2.sinaimg.cn/large/006tKfTcly1fdvgkooci7j30pe0h0q5g.jpg" alt="222"></p><h1 id="安装powerline"><a href="#安装powerline" class="headerlink" title="安装powerline"></a>安装<a href="http://powerline.readthedocs.io/en/latest/installation.html" target="_blank" rel="noopener">powerline</a></h1><p>安装powerline</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install powerline-status</span><br></pre></td></tr></table></figure><p>如果没有pip指令，先安装pip</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo easy_install pip</span><br></pre></td></tr></table></figure><p>如执行指令<code>pip install powerline-status</code>出错</p><p>一个可能是没下载安装苹果官方的<a href="https://developer.apple.com/download/more/?name=for%20Xcode%20" target="_blank" rel="noopener">Command line</a>，如果已经有了依然出错可能是权限问题，使用如下命令安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install powerline-status --user</span><br></pre></td></tr></table></figure><h1 id="安装字体库"><a href="#安装字体库" class="headerlink" title="安装字体库"></a>安装<a href="https://github.com/powerline/fonts" target="_blank" rel="noopener">字体库</a></h1><p>下载工程，进入工程目录，执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./install.sh</span><br></pre></td></tr></table></figure><p>如提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">All Powerline fonts installed to /Users/superdanny/Library/Fonts</span><br></pre></td></tr></table></figure><p>则复制成功。</p><p>将iTerm2字体修改为Meslo LG S Regular for Powerline，12pt</p><p><img src="https://ww1.sinaimg.cn/large/006tKfTcly1fdvh22nwk2j30pa0f4mzc.jpg" alt="222"></p><h1 id="安装zsh-syntax-highlighting"><a href="#安装zsh-syntax-highlighting" class="headerlink" title="安装zsh-syntax-highlighting"></a>安装<a href="https://github.com/zsh-users/zsh-syntax-highlighting" target="_blank" rel="noopener">zsh-syntax-highlighting</a></h1><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting</span><br></pre></td></tr></table></figure><p>在<code>~/.zshrc</code>中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plugins=(zsh-syntax-highlighting)</span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ source ~/.zshrc</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;偶然看见一个比较喜欢的终端界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ww3.sinaimg.cn/large/006tKfTcly1fdukrbiu9lj30hl09m768.jpg&quot; alt=&quot;222&quot;&gt;&lt;/p&gt;
&lt;p&gt;于是尝试配置了出来，写这篇博客记录下步骤。以下适用于Mac。&lt;/p&gt;
    
    </summary>
    
      <category term="奇淫巧技" scheme="http://willwei.me/categories/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
    
      <category term="奇淫巧技" scheme="http://willwei.me/tags/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo搭建个人博客</title>
    <link href="http://willwei.me/2017/03/09/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://willwei.me/2017/03/09/使用Hexo搭建个人博客/</id>
    <published>2017-03-09T11:05:28.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>总结下自己用<a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">Hexo</a>搭建博客的过程。整个博客是挂在GitHub Pages上的，域名是自己买的，搭建时Hexo是3.2.2版本，因为自己用的Mac电脑，所以此篇适用于苹果电脑。废话不多说，正式开始吧。</p><p><a href="https://github.com/WeiLeiming/weileiming.github.io" target="_blank" rel="noopener">WeiLeiming/weileiming.github.io</a></p><a id="more"></a><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>到Node.js<a href="https://nodejs.org/en/" target="_blank" rel="noopener">官网</a>下载对应平台的最新版本，按提示安装即可</p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>因为我已经装了Xcode所以自带Git（否则会叫安装Xcode，那就安装咯）</p><h2 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h2><p>Node.js和Git安装好后就可以安装Hexo了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ cd blog</span><br><span class="line">$ npm install</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>如果没出错，就可以在本地服务上<code>http://localhost:4000/</code>查看效果了。</p><p>这是我blog文件夹下的目录结构</p><p><img src="https://ww1.sinaimg.cn/large/006tNc79ly1fdgfvbdgrfj3058042gln.jpg" alt="3B045A84-0EBE-42ED-A785-452CB5C2E187"></p><p>配置修改在<strong>_config.yml</strong>中，新建的md文件都放置在<code>/source/_posts</code>中，<strong>themes</strong>放置的是主题</p><h1 id="介绍下Hexo常用的命令"><a href="#介绍下Hexo常用的命令" class="headerlink" title="介绍下Hexo常用的命令"></a>介绍下Hexo常用的命令</h1><p>新建文章</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;文章名称&quot;</span><br></pre></td></tr></table></figure><p>生成静态网页</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>启动本地服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>上传部署</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h1 id="GitHub配置"><a href="#GitHub配置" class="headerlink" title="GitHub配置"></a>GitHub配置</h1><h2 id="申请账号"><a href="#申请账号" class="headerlink" title="申请账号"></a>申请账号</h2><p>略</p><h2 id="新建Repository"><a href="#新建Repository" class="headerlink" title="新建Repository"></a>新建Repository</h2><p>这里只有一个地方需要说明，就是Repository name。</p><p>填写格式为：username.github.io</p><p>比如我的账号是weileiming，那么我的主页地址就是weileiming.github.io</p><p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdhnxm4h4bj30n40h00uo.jpg" alt="222"></p><p>我这因为已经建过了所以报了这个错，没有新建过的话再点Create repository就可以建立了</p><p>还不懂的可以看看<a href="https://help.github.com/articles/user-organization-and-project-pages/" target="_blank" rel="noopener">官方文档</a></p><h2 id="Hexo关联Repository"><a href="#Hexo关联Repository" class="headerlink" title="Hexo关联Repository"></a>Hexo关联Repository</h2><p>在_config.yml中将新建的仓库添加上</p><p><img src="https://ww2.sinaimg.cn/large/006tNc79ly1fdhpymx9gcj30ei02taa6.jpg" alt="222"></p><h2 id="Github-Pages个人主页绑定个人域名"><a href="#Github-Pages个人主页绑定个人域名" class="headerlink" title="Github Pages个人主页绑定个人域名"></a>Github Pages个人主页绑定个人域名</h2><p>如果有个人域名的话，可以绑定自己的个人域名。<a href="https://help.github.com/articles/quick-start-setting-up-a-custom-domain/" target="_blank" rel="noopener">官方文档</a></p><p>如何申请个人域名百度去吧。</p><p>先把IP地址ping出来</p><p><img src="http://ww3.sinaimg.cn/large/006tKfTcly1fem91j1nokj30cb02nwf1.jpg" alt="ping"></p><p>之后添加解析</p><p><img src="http://ww2.sinaimg.cn/large/006tKfTcly1fem93jgmnzj30n3021mx6.jpg" alt="解析"></p><p>去刚刚建立的仓库里面点击Create new file</p><p>文件名填写CNAME，内容填写个人域名，如willwei.me，commit上去就可以用个人域名访问了</p><p>当然如果是拿来用hexo做博客的话这样CNAME是会被干掉的，所以这样搞不行，我将CNAME放在了这里</p><p><img src="https://ww4.sinaimg.cn/large/006tNc79ly1fdgliu4jy8j30b1047wen.jpg" alt="333"></p><p>然后在用hexo一起部署上去</p><h1 id="Hexo的一些主题"><a href="#Hexo的一些主题" class="headerlink" title="Hexo的一些主题"></a>Hexo的一些主题</h1><p>以下是我个人喜欢的一些主题，集成步骤都比较简单</p><p><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a></p><p><a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">hexo-theme-yilia</a></p><p>我使用的是yilia主题，修改配置的话，主题的配置文件是themes/yilia下<strong>_config.yml</strong></p><h2 id="一些技巧-yilia为例"><a href="#一些技巧-yilia为例" class="headerlink" title="一些技巧(yilia为例)"></a>一些技巧(yilia为例)</h2><p>在文章中加<code>&lt;!--more--&gt;</code>可以使这之后的内容隐藏</p><p>如果要修改截断文字，可以在<code>themes/yilia/_config.yml</code>中配置</p><p><img src="http://ww1.sinaimg.cn/large/006tKfTcly1fem952769nj305400vmx2.jpg" alt="截断文字"></p><h1 id="更多配置"><a href="#更多配置" class="headerlink" title="更多配置"></a>更多配置</h1><h2 id="RSS订阅及SEO"><a href="#RSS订阅及SEO" class="headerlink" title="RSS订阅及SEO"></a>RSS订阅及SEO</h2><p>在博客根目录下安装<code>hexo-generator-feed</code>、<code>hexo-generator-baidu-sitemap</code>、<code>hexo-generator-sitemap</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br><span class="line">$ npm install hexo-generator-baidu-sitemap --save</span><br><span class="line">$ npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>在博客根目录下的<code>_config.yml</code>中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sitemap:</span><br><span class="line">    path: sitemap.xml</span><br><span class="line">    </span><br><span class="line">baidusitemap:</span><br><span class="line">    path: baidusitemap.xml</span><br><span class="line"></span><br><span class="line">feed:</span><br><span class="line">    type: atom</span><br><span class="line">    path: atom.xml</span><br><span class="line">    limit: 100</span><br></pre></td></tr></table></figure><h2 id="Hexo升级"><a href="#Hexo升级" class="headerlink" title="Hexo升级"></a>Hexo升级</h2><p>在博客根目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm upgrade hexo</span><br></pre></td></tr></table></figure><h2 id="yilia升级"><a href="#yilia升级" class="headerlink" title="yilia升级"></a>yilia升级</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd themes/yilia</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="http://www.jianshu.com/p/5e9bd5e39ae6" target="_blank" rel="noopener">最简便的方法搭建Hexo-Github博客-基于Next主题</a><br><a href="https://yq.aliyun.com/articles/8607" target="_blank" rel="noopener">Hexo折腾记——基本配置篇</a><br><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="noopener">如何搭建一个独立博客——简明Github Pages与Hexo教程</a><br><a href="http://baixin.io/2015/08/HEXO%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">HEXO搭建个人博客</a><br><a href="http://www.jianshu.com/p/f389ad8c49bd" target="_blank" rel="noopener">GithubPages+Hexo博客主题Yilia</a><br><a href="http://wp.huangshiyang.com/hexo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" target="_blank" rel="noopener">Hexo常见问题解决方案</a><br><a href="http://www.jianshu.com/p/86557c34b671" target="_blank" rel="noopener">Hexo Seo优化让你的博客在google搜索排名第一</a><br><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">Next官方文档</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结下自己用&lt;a href=&quot;https://github.com/hexojs/hexo&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;搭建博客的过程。整个博客是挂在GitHub Pages上的，域名是自己买的，搭建时Hexo是3.2.2版本，因为自己用的Mac电脑，所以此篇适用于苹果电脑。废话不多说，正式开始吧。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/WeiLeiming/weileiming.github.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WeiLeiming/weileiming.github.io&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="奇淫巧技" scheme="http://willwei.me/categories/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
    
      <category term="奇淫巧技" scheme="http://willwei.me/tags/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
      <category term="Hexo" scheme="http://willwei.me/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Unity导出Xcode工程集成进另一个原生Xcode工程,错误及解决方法记录</title>
    <link href="http://willwei.me/2017/03/02/Unity%E5%AF%BC%E5%87%BAXcode%E5%B7%A5%E7%A8%8B%E9%9B%86%E6%88%90%E8%BF%9B%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%8E%9F%E7%94%9FXcode%E5%B7%A5%E7%A8%8B,%E9%94%99%E8%AF%AF%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E8%AE%B0%E5%BD%95/"/>
    <id>http://willwei.me/2017/03/02/Unity导出Xcode工程集成进另一个原生Xcode工程,错误及解决方法记录/</id>
    <published>2017-03-02T11:23:02.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>最后更新时间：2018.4.18</p><p>最近在研究Unity导出的Xcode工程如何集成在现有工程中。现将过程中遇见的问题整理如下。</p><a id="more"></a><h1 id="Unity导出Xcode工程编译错误"><a href="#Unity导出Xcode工程编译错误" class="headerlink" title="Unity导出Xcode工程编译错误"></a>Unity导出Xcode工程编译错误</h1><ol><li><p>MapFileParser.sh: Permission denied</p><p><img src="https://ww3.sinaimg.cn/large/006tNc79ly1fd8c4lh1l8j30mv01dt96.jpg" alt="ADB6928C-7EF7-4469-8CEC-856B504A63B3"></p><p>打开终端，进入<code>MapFileParser.sh</code>所在目录，执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod 777 MapFileParser.sh</span><br></pre></td></tr></table></figure></li><li><p>推送警告</p><p><img src="http://ww4.sinaimg.cn/large/006tKfTcly1ff1c19i81gj30n2014t93.jpg" alt="E432AF53-86D7-44A7-9649-F262E3EBC351"></p><p>解决方法Capablilties-&gt;Background Modes-&gt;Remote notifications</p><p><img src="http://ww4.sinaimg.cn/large/006tKfTcly1ff1bzgczroj30o40afta7.jpg" alt="75BDC5C5-7DC9-4CB4-A55C-1959E7198C10"></p></li></ol><h1 id="Unity导出Xcode工程集成进原生Xcode工程"><a href="#Unity导出Xcode工程集成进原生Xcode工程" class="headerlink" title="Unity导出Xcode工程集成进原生Xcode工程"></a>Unity导出Xcode工程集成进原生Xcode工程</h1><h2 id="集成步骤"><a href="#集成步骤" class="headerlink" title="集成步骤"></a>集成步骤</h2><h3 id="Unity导出Xcode工程"><a href="#Unity导出Xcode工程" class="headerlink" title="Unity导出Xcode工程"></a>Unity导出Xcode工程</h3><p>在iOS的<strong>Player Setting</strong>中进行设置</p><ul><li><p>Resolution and Presentation</p><p>根据项目需要设定，需要注意的是Orientation方向必须是原生工程Orientation方向的子集</p></li><li><p>Other Settings</p><ul><li>消掉Auto Graphics API，Graphics APIs列表中只留OpenGLES2</li><li>Scripting Backend选择IL2CPP</li><li>Bundle Identifier、Target Device、Target minimum iOS Version根据原生工程设置</li></ul></li></ul><p>这是我导出来的工程目录，设备只选择了iPhone</p><p><img src="https://ww4.sinaimg.cn/large/006tNc79ly1fdgmwn9tqhj305c06ljrq.jpg" alt="111"></p><h3 id="集成工程"><a href="#集成工程" class="headerlink" title="集成工程"></a>集成工程</h3><blockquote><p><strong>注意：</strong>Build Setting和Build Phases中的设置均是根据Unity_Xcode中设置得到的，集成的时候对照两个工程的设置集成，这里只是一个例子</p></blockquote><ul><li>我在原生工程目录下新建了一个Unity文件夹来放置从Unity_Xcode工程中拷贝过来需要使用的文件</li></ul><p><img src="https://ww2.sinaimg.cn/large/006tNc79ly1fdgmyx5urlj30gu06pjs1.jpg" alt="222"></p><ul><li><p>将文件添加进工程目录</p><p>将Classes、Libraries、MapFileParser.sh添加进工程目录</p></li></ul><p><img src="https://ww2.sinaimg.cn/large/006tNc79ly1fdgogg7fsij30l80cw752.jpg" alt="333"></p><p>​    将Data添加进工程目录</p><p><img src="https://ww4.sinaimg.cn/large/006tNc79ly1fdgoft719rj30l80cwaau.jpg" alt="444"></p><p>​    注意这两种不同的添加形式</p><ul><li><p>添加framework</p><p>根据自己导出的Unity_Xcode工程添加</p></li></ul><p><img src="https://ww3.sinaimg.cn/large/006tNc79ly1fdgoxk1oncj30nj0daabs.jpg" alt="555"></p><ul><li><p>Build Settings</p><p>设置Header Search Paths</p></li></ul><p><img src="https://ww3.sinaimg.cn/large/006tNc79ly1fdgp5v2yb8j30jj0660th.jpg" alt="111"></p><p>​    设置Library Search Paths</p><p><img src="https://ww1.sinaimg.cn/large/006tNc79ly1fdgphvrzdij30jj067mxq.jpg" alt="444"></p><p>​    设置Other Linker Flags</p><p>​    这里顺序保持一致</p><p><img src="https://ww3.sinaimg.cn/large/006tNc79ly1fdgplwi962j30j30670t2.jpg" alt="333"></p><p>​    设置Other C Flags &amp; Other C++ Flags</p><p><img src="https://ww4.sinaimg.cn/large/006tNc79ly1fdgpqzi4a9j30jj067dg5.jpg" alt="222"></p><p>​    设置C Language Dialect，在 <code>2017.3.1f1</code> 测试不更改，使用 <code>GNU99</code> 依然可用</p><p><img src="https://ww4.sinaimg.cn/large/006tNc79ly1fdgpsr63j4j30eq00ldfq.jpg" alt="222"></p><p>​    设置C++ Language Dialect，，在 <code>2017.3.1f1</code> 测试不更改，使用 <code>GNU++11</code> 依然可用</p><p><img src="https://ww4.sinaimg.cn/large/006tNc79ly1fdgptuhwqkj30e700ngli.jpg" alt="222"></p><p>​    设置C++ Standard Library</p><p><img src="https://ww1.sinaimg.cn/large/006tNc79ly1fdgpuvg8h4j30j000pmx5.jpg" alt="222"></p><p>​    设置Enable Bitcode</p><p><img src="https://ww4.sinaimg.cn/large/006tNc79ly1fdgpvqt66yj30c200m0sl.jpg" alt="222"></p><p>​    Add User-Defined Setting</p><p><img src="https://ww4.sinaimg.cn/large/006tNc79ly1fdgpypkbzrj30fy01vglq.jpg" alt="222"></p><p>​    添加GCC_THUMB_SUPPORT</p><p>​    添加GCC_USE_INDIRECT_FUNCTION_CALLS</p><p>​    添加UNITY_RUNTIME_VERSION。此项根据Unity导出的版本填写。</p><p>​    添加UNITY_SCRIPTING_BACKEND</p><p><img src="https://ww3.sinaimg.cn/large/006tNc79ly1fdgq23tobej30fs03m74n.jpg" alt="222"></p><ul><li><p>Build Phases</p><p>添加Run Script</p></li></ul><p><img src="https://ww2.sinaimg.cn/large/006tNc79ly1fdgq4o44sjj30mg05k0ta.jpg" alt="222"></p><p>​    添加”$PROJECT_DIR/iOS_Unity_Test01/Unity/MapFileParser.sh”</p><p><img src="https://ww4.sinaimg.cn/large/006tNc79ly1fdgq7dgx89j30st098js0.jpg" alt="222"></p><ul><li>新建PCH文件，命名为PrefixHeader。将Classes中的Prefix.pch文件的内容全部拷贝到Supporting Files中的PrefixHeader.pch中，并删除Classes中的Prefix.pch文件引用</li><li>将Classes/main.mm全部内容复制到main.m并把扩展名改为.mm，然后删除Classes/main.mm文件引用，注意红色框圈住的修改细节</li></ul><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fqhsdvxv35j31040kmtcr.jpg" alt="image-20180419110553779"></p><ul><li><p>修改UnityAppController.h</p><blockquote><p><strong>注意</strong>：我当前用的 <code>2017.3.1f1</code> 版本这里已经不需要更改了，可忽略</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;AppDelegate.h&quot;</span><br><span class="line">inline UnityAppController*GetAppController()</span><br><span class="line">&#123;</span><br><span class="line">    return (UnityAppController *)[[UIApplication sharedApplication] valueForKeyPath:@&quot;delegate.unityController&quot;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改AppDelegate.h</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;UIKit/UIKit.h&gt;</span><br><span class="line">#import &quot;UnityAppController.h&quot;</span><br><span class="line"></span><br><span class="line">@interface AppDelegate : UIResponder &lt;UIApplicationDelegate&gt;</span><br><span class="line"></span><br><span class="line">@property (strong, nonatomic) UIWindow *window;</span><br><span class="line">@property (strong, nonatomic) UIWindow *unityWindow;</span><br><span class="line"></span><br><span class="line">- (void)showUnityWindow;</span><br><span class="line">- (void)hideUnityWindow;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><ul><li>修改AppDelegate.m</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">@implementation AppDelegate</span><br><span class="line"></span><br><span class="line">- (UIWindow *)unityWindow &#123;</span><br><span class="line">    return UnityGetMainWindow();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)showUnityWindow &#123;</span><br><span class="line">    [self.unityWindow makeKeyAndVisible];</span><br><span class="line">  UnityPause(false);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)hideUnityWindow &#123;</span><br><span class="line">  UnityPause(true);</span><br><span class="line">    [self.window makeKeyAndVisible];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions &#123;</span><br><span class="line">    // Override point for customization after application launch.</span><br><span class="line">    </span><br><span class="line">    _UnityAppController = [[UnityAppController alloc] init];</span><br><span class="line">    [_UnityAppController application:application didFinishLaunchingWithOptions:launchOptions];</span><br><span class="line">    </span><br><span class="line">    self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];</span><br><span class="line">    TestViewController *vc = [[TestViewController alloc] init];</span><br><span class="line">    self.window.rootViewController = vc;</span><br><span class="line">    [self.window makeKeyAndVisible];</span><br><span class="line">    </span><br><span class="line">    return YES;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (void)applicationWillResignActive:(UIApplication *)application &#123;</span><br><span class="line">    // Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state.</span><br><span class="line">    // Use this method to pause ongoing tasks, disable timers, and invalidate graphics rendering callbacks. Games should use this method to pause the game.</span><br><span class="line">    [_UnityAppController applicationWillResignActive:application];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (void)applicationDidEnterBackground:(UIApplication *)application &#123;</span><br><span class="line">    // Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later.</span><br><span class="line">    // If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.</span><br><span class="line">    [_UnityAppController applicationDidEnterBackground:application];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (void)applicationWillEnterForeground:(UIApplication *)application &#123;</span><br><span class="line">    // Called as part of the transition from the background to the active state; here you can undo many of the changes made on entering the background.</span><br><span class="line">    [_UnityAppController applicationWillEnterForeground:application];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (void)applicationDidBecomeActive:(UIApplication *)application &#123;</span><br><span class="line">    // Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.</span><br><span class="line">    [_UnityAppController applicationDidBecomeActive:application];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (void)applicationWillTerminate:(UIApplication *)application &#123;</span><br><span class="line">    // Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.</span><br><span class="line">    [_UnityAppController applicationWillTerminate:application];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><h2 id="集成过程中遇见的一些问题"><a href="#集成过程中遇见的一些问题" class="headerlink" title="集成过程中遇见的一些问题"></a>集成过程中遇见的一些问题</h2><ol><li><p>编译完成出现许多<code>Code will never be executed</code>的警告⚠️</p><p><img src="https://ww2.sinaimg.cn/large/006tNc79ly1fdd7hrn1pjj304x010mx1.jpg" alt="111"></p><p>解决方法：在<code>Build Settings</code>中将<code>Unreachable Code</code>设置为<strong>No</strong>可以消除警告</p><p><img src="https://ww3.sinaimg.cn/large/006tNbRwly1fdd7jiejdqj30c700n3yd.jpg" alt="222"></p></li><li><p>编译出现<code>Expected unqualified-id</code>错误</p><p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fgcn2dowhnj30700j241h.jpg" alt="9D5AA7E6-1800-4904-9E7A-E268547875CB"></p><p>解决方法：在PrefixHeader.pch文件中，将自己的头文件全部放入<code>#ifdef __OBJC__</code>中，如下：</p><p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fgcn0lhrdtj3086060wf1.jpg" alt="177BB71A-B8E2-4DC9-B155-2EADFF2C9E2D"></p></li><li><p>编译出现 <code>Control reaches end of non-void function</code> 错误</p><p>解决方法：在 <code>Build Settings</code> 中将 <code>Mismatched Return Type</code> 设置为 <strong>Yes</strong> 可以消除</p></li></ol><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://docs.unity3d.com/Manual/class-PlayerSettingsiOS.html" target="_blank" rel="noopener">iOS Player Settings</a></p><p><a href="http://www.jianshu.com/p/49fffc543140" target="_blank" rel="noopener">Unity3D工程并入iOS工程总结</a></p><p><a href="http://www.jianshu.com/p/f98bcfe09dc7" target="_blank" rel="noopener">unity3D与iOS原生工程项目合并以及合并过程中的问题</a></p><p><a href="http://blog.csdn.net/dylan_lwb_/article/details/51452470" target="_blank" rel="noopener">iOS - 将Unity导出的Xcode工程导入到另一个Xcode项目, 及常见报错的解决方法</a></p><p><a href="http://www.jianshu.com/p/487015f3bb13" target="_blank" rel="noopener">将U3d工程嵌入iOS工程中</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最后更新时间：2018.4.18&lt;/p&gt;
&lt;p&gt;最近在研究Unity导出的Xcode工程如何集成在现有工程中。现将过程中遇见的问题整理如下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS" scheme="http://willwei.me/tags/iOS/"/>
    
      <category term="Unity" scheme="http://willwei.me/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>对未来职业方向的一些想法</title>
    <link href="http://willwei.me/2017/03/01/%E5%AF%B9%E6%9C%AA%E6%9D%A5%E8%81%8C%E4%B8%9A%E6%96%B9%E5%90%91%E7%9A%84%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95/"/>
    <id>http://willwei.me/2017/03/01/对未来职业方向的一些想法/</id>
    <published>2017-03-01T09:49:46.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>进入2017年，互联网资本寒冬依然在持续，随着现在公司的业务调整，重心放在行业应用，自己公司的产品放缓，运营部已快解散，对未来的方向产生了一些迷茫。</p><ul><li>继续深挖iOS</li><li>结合现有公司资源做一部分Unity工作</li><li>兼职一部分后台工作</li></ul><a id="more"></a><h2 id="继续深挖iOS"><a href="#继续深挖iOS" class="headerlink" title="继续深挖iOS"></a>继续深挖iOS</h2><p>此方向在现有公司已不适合发展。</p><ol><li>公司是做PC端VR应用的，移动端开发不是重点。</li><li>公司缺乏技术沉淀</li><li>没有iOS开发的高级人员</li><li>业务已转型，运营部解散，后台已走</li></ol><p>选择此方向面临的第一个问题便是找下家，寻找主做移动端技术的公司。不过由于现在不想离开这家公司，待考虑。</p><p><a href="https://www.zhihu.com/question/39597307" target="_blank" rel="noopener">iOS高级工程师进阶</a></p><h2 id="结合现有公司资源做一部分Unity工作"><a href="#结合现有公司资源做一部分Unity工作" class="headerlink" title="结合现有公司资源做一部分Unity工作"></a>结合现有公司资源做一部分Unity工作</h2><p>公司毕竟是做VR/AR的，在图形图像方面还是有一定的积累，也会做一些培训工作，并且这个方向也是我比较喜欢的，<a href="https://onevcat.com/" target="_blank" rel="noopener">OneV’s Den</a>也是iOS/Unity开发者，是我一直想学习的。最近看了一点Unity的学习资料，整体来说Unity还是比较轻松的，比UE简单很多。iOS/Unity并重的话，或许来个手游开发？</p><h2 id="兼职一部分后台工作"><a href="#兼职一部分后台工作" class="headerlink" title="兼职一部分后台工作"></a>兼职一部分后台工作</h2><p>现在公司APP开发放缓，后台也走人了，还不招人，想要继续搞下去，必须得有人兼职一部分后台的工作，考虑到以后回成都发展，想要好找工作的话还是JAVA合适点，或许可以看看。</p><h2 id="附上一张知乎-张宇上看到的iOS技能树"><a href="#附上一张知乎-张宇上看到的iOS技能树" class="headerlink" title="附上一张知乎@张宇上看到的iOS技能树"></a>附上一张知乎@<a href="https://www.zhihu.com/people/ygsay.com" target="_blank" rel="noopener">张宇</a>上看到的iOS技能树</h2><p><img src="https://ww3.sinaimg.cn/large/006tNc79ly1fd751ueum5j31js2cqnec.jpg" alt="iOS技能树"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;进入2017年，互联网资本寒冬依然在持续，随着现在公司的业务调整，重心放在行业应用，自己公司的产品放缓，运营部已快解散，对未来的方向产生了一些迷茫。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;继续深挖iOS&lt;/li&gt;
&lt;li&gt;结合现有公司资源做一部分Unity工作&lt;/li&gt;
&lt;li&gt;兼职一部分后台工作&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://willwei.me/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://willwei.me/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Mac系统隐藏文件的设置</title>
    <link href="http://willwei.me/2017/02/24/Mac%E7%B3%BB%E7%BB%9F%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6%E7%9A%84%E8%AE%BE%E7%BD%AE/"/>
    <id>http://willwei.me/2017/02/24/Mac系统隐藏文件的设置/</id>
    <published>2017-02-24T10:28:50.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>显示Mac隐藏文件的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ defaults write com.apple.finder AppleShowAllFiles YES</span><br></pre></td></tr></table></figure><p>隐藏Mac隐藏文件的命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ defaults write com.apple.finder AppleShowAllFiles NO</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;显示Mac隐藏文件的命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;
      
    
    </summary>
    
      <category term="奇淫巧技" scheme="http://willwei.me/categories/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
    
      <category term="奇淫巧技" scheme="http://willwei.me/tags/%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
      <category term="Mac" scheme="http://willwei.me/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发常用宏整理</title>
    <link href="http://willwei.me/2017/02/20/iOS%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%AE%8F%E6%95%B4%E7%90%86/"/>
    <id>http://willwei.me/2017/02/20/iOS开发常用宏整理/</id>
    <published>2017-02-20T10:01:26.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>最后更新时间：2018-02-25 10:36:00</p><p>使用宏不仅方便，而且可以提高开发效率。整理了一下在自己项目中常用的宏。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">// 一些缩写</span><br><span class="line">#define kApplication            [UIApplication sharedApplication]</span><br><span class="line">#define kKeyWindow              [UIApplication sharedApplication].keyWindow</span><br><span class="line">#define kAppDelegate            [UIApplication sharedApplication].delegate</span><br><span class="line">#define kUserDefaults           [NSUserDefaults standardUserDefaults]</span><br><span class="line">#define kNotificationCenter     [NSNotificationCenter defaultCenter]</span><br><span class="line">#define kDevice                 [UIDevice currentDevice]</span><br><span class="line"></span><br><span class="line">// 获取屏幕宽度与高度</span><br><span class="line">#define SCREEN_WIDTH            [UIScreen mainScreen].bounds.size.width</span><br><span class="line">#define SCREEN_HEIGHT           [UIScreen mainScreen].bounds.size.height</span><br><span class="line">#define SCREEN_SIZE             [UIScreen mainScreen].bounds.size</span><br><span class="line">#define SCREEN_MAX_LENGTH       MAX(SCREEN_WIDTH, SCREEN_HEIGHT)</span><br><span class="line">#define SCREEN_MIN_LENGTH       MIN(SCREEN_WIDTH, SCREEN_HEIGHT)</span><br><span class="line">#define SCREEN_SCALE_PORTRAIT   SCREEN_WIDTH / 375.0</span><br><span class="line">#define SCREEN_SCALE_LANDSCAPE  SCREEN_HEIGHT / 375.0</span><br><span class="line"></span><br><span class="line">// 字符串是否为空</span><br><span class="line">#define kStringIsEmpty(str)     (str == nil || [str isKindOfClass:[NSNull class]] || str.length == 0)</span><br><span class="line">// 数组是否为空</span><br><span class="line">#define kArrayIsEmpty(array)    (array == nil || [array isKindOfClass:[NSNull class]] || array.count == 0)</span><br><span class="line">// 字典是否为空</span><br><span class="line">#define kDictIsEmpty(dict)      (dict == nil || [dict isKindOfClass:[NSNull class]] || dict.allKeys.count == 0)</span><br><span class="line">// 是否是空对象</span><br><span class="line">#define kObjectIsEmpty(_object) (_object == nil || [_object isKindOfClass:[NSNull class]] || ([_object respondsToSelector:@selector(length)] &amp;&amp; [(NSData *)_object length] == 0) || ([_object respondsToSelector:@selector(count)] &amp;&amp; [(NSArray *)_object count] == 0))</span><br><span class="line">// 判断是否为iPhone</span><br><span class="line">#define IS_IPHONE               ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)</span><br><span class="line">// 判断是否为iPad</span><br><span class="line">#define IS_IPAD                 ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad)</span><br><span class="line">// 判断型号尺寸.5为4寸机型，6为4.7寸机型，6P为5.5寸机型</span><br><span class="line">#define IS_IPHONE_4_OR_LESS     (IS_IPHONE &amp;&amp; SCREEN_MAX_LENGTH &lt; 568.f)</span><br><span class="line">#define IS_IPHONE_5             (IS_IPHONE &amp;&amp; SCREEN_MAX_LENGTH == 568.f)</span><br><span class="line">#define IS_IPHONE_6             (IS_IPHONE &amp;&amp; SCREEN_MAX_LENGTH == 667.f)</span><br><span class="line">#define IS_IPHONE_6P            (IS_IPHONE &amp;&amp; SCREEN_MAX_LENGTH == 736.f)</span><br><span class="line"></span><br><span class="line">// APP名称</span><br><span class="line">#define kAppName                [[NSBundle mainBundle] infoDictionary] objectForKey:@&quot;CFBundleDisplayName&quot;]</span><br><span class="line">// APP版本号</span><br><span class="line">#define kAppVersion             [[NSBundle mainBundle] infoDictionary] objectForKey:@&quot;CFBundleShortVersionString&quot;]</span><br><span class="line">// APP build号</span><br><span class="line">#define kAppbuild               [[NSBundle mainBundle] infoDictionary] objectForKey:@&quot;CFBundleVersion&quot;]</span><br><span class="line">// 系统版本号</span><br><span class="line">#define kSystemVersion          [[UIDevice currentDevice] systemVersion]</span><br><span class="line">// 获取当前语言</span><br><span class="line">#define kCurrentLanguage        [[NSLocale preferredLanguages] objectAtIndex:0]</span><br><span class="line">// 获取沙盒Documents路径</span><br><span class="line">#define kDocumentsPath          [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) firstObject]</span><br><span class="line">// 获取沙盒temp路径</span><br><span class="line">#define kTempPath               NSTemporaryDirectory()</span><br><span class="line">// 获取沙盒Cache路径</span><br><span class="line">#define kCachePath              [NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) firstObject]</span><br><span class="line"></span><br><span class="line">// 颜色</span><br><span class="line">#define kRGBColor(r, g, b)      [UIColor colorWithRed:(r) / 255.f green:(g) / 255.f blue:(b) / 255.f alpha:1.f]</span><br><span class="line">#define kRGBAColor(r, g, b, a)  [UIColor colorWithRed:(r) / 255.f green:(r) / 255.f blue:(r) / 255.f alpha:a]</span><br><span class="line">#define kRandomColor            kRGBColor(arc4random_uniform(256), arc4random_uniform(256), arc4random_uniform(256))</span><br><span class="line">#define kColorWithHex(rgbValue) [UIColor colorWithRed:((float)((rgbValue &amp; 0xFF0000) &gt;&gt; 16)) / 255.f green:((float)((rgbValue &amp; 0xFF00) &gt;&gt; 8)) / 255.f blue:((float)(rgbValue &amp; 0xFF)) / 255.f alpha:1.f]</span><br><span class="line"></span><br><span class="line">// 弱引用/强引用.在Code Snippet中添加@kWeakObj(&lt;#obj#&gt;)和@kStrongObj(&lt;#obj#&gt;);</span><br><span class="line">#define kWeakObj(obj)           autoreleasepool&#123;&#125; __weak __typeof(obj) weak##obj = obj;</span><br><span class="line">#define kStrongObj(obj)         autoreleasepool&#123;&#125; __strong __typeof(obj) obj = weak##obj;</span><br><span class="line"></span><br><span class="line">// 由角度转换弧度</span><br><span class="line">#define kDegreesToRadian(x)     (M_PI * x / 180.f)</span><br><span class="line">// 由弧度转换角度</span><br><span class="line">#define kRadianToDegrees(x)     (x * 180.f) / (M_PI)</span><br><span class="line"></span><br><span class="line">// 获取一段时间间隔</span><br><span class="line">#define kStartTime              CFAbsoluteTime start = CFAbsoluteTimeGetCurrent();</span><br><span class="line">#define kEndTime                NSLog(@&quot;Time: %f&quot;, CFAbsoluteTimeGetCurrent() - start)</span><br><span class="line"></span><br><span class="line">// 开发的时候打印，但是发布的时候不打印的NSLog</span><br><span class="line">#ifdef DEBUG</span><br><span class="line">    #define NSLog(...)          NSLog(@&quot;%s [Line %d]\n%@&quot;, __func__, __LINE__, [NSString stringWithFormat:__VA_ARGS__])</span><br><span class="line">//    #define DLog(fmt, ...)      NSLog((@&quot;%s [Line %d]\n&quot; fmt), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__);</span><br><span class="line">#else</span><br><span class="line">    #define NSLog(...)</span><br><span class="line">//    #define DLog(...)</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">// 判断是真机还是模拟器</span><br><span class="line">#if TARGET_OS_IPHONE</span><br><span class="line">// 真机</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">#if TARGET_IPHONE_SIMULATOR</span><br><span class="line">// 模拟器</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最后更新时间：2018-02-25 10:36:00&lt;/p&gt;
&lt;p&gt;使用宏不仅方便，而且可以提高开发效率。整理了一下在自己项目中常用的宏。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://willwei.me/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://willwei.me/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>CocoaPods使用备忘录</title>
    <link href="http://willwei.me/2017/02/17/CocoaPods%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>http://willwei.me/2017/02/17/CocoaPods使用备忘录/</id>
    <published>2017-02-17T10:07:32.000Z</published>
    <updated>2019-02-16T13:13:58.967Z</updated>
    
    <content type="html"><![CDATA[<ol><li>CocoaPods 安装</li></ol><p>如果网络已经翻墙，在终端中运行如下命令直接安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gem install cocoapods</span><br></pre></td></tr></table></figure><a id="more"></a><p>如果没翻墙，可以通过国内 Ruby China 或淘宝的 RubyGems 镜像进行安装。<br>在终端依次运行以下命令：<br>移除ruby的原生镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem sources --remove https://rubygems.org/</span><br></pre></td></tr></table></figure><p>用淘宝的镜像代替（淘宝的<a href="https://ruby.taobao.org/" target="_blank" rel="noopener">镜像源</a>停止更新了，请使用<strong>Ruby China</strong>的<a href="https://gems.ruby-china.org/" target="_blank" rel="noopener">镜像</a>)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem sources -a https://ruby.taobao.org/</span><br></pre></td></tr></table></figure><p>用Ruby China的镜像代替<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem sources --add https://gems.ruby-china.org/</span><br></pre></td></tr></table></figure></p><p>查看是否设置成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gem sources -l</span><br><span class="line"></span><br><span class="line">如果输出结果是如下这样，那说明这一步就成功了。</span><br><span class="line">*** CURRENT SOURCES ***</span><br><span class="line"></span><br><span class="line">https://gems.ruby-china.org/</span><br></pre></td></tr></table></figure></p><p>安装Cocoapods<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gem install cocoapods</span><br></pre></td></tr></table></figure></p><ol><li>其他一些命令<br>查询Cocoapods是否支持某个类库<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod search 类库名</span><br></pre></td></tr></table></figure></li></ol><p>这个命令搜索的是本机上的最新版本，并没有联网查询。如果运行以上命令，没有搜到或者搜不到最新版本，可以运行以下命令，更新一下本地的 CocoaPods 源列表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod repo update</span><br></pre></td></tr></table></figure></p><p>打开终端，进入到工程目录，执行以下命令，会自动生成一个 Podfile 文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod init</span><br></pre></td></tr></table></figure></p><p>安装框架<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod install</span><br></pre></td></tr></table></figure></p><p>更新框架<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pod update</span><br><span class="line">或</span><br><span class="line"># 禁止升级 CocoaPods 的 spec 仓库，否则会卡在 Analyzing dependencies，非常慢</span><br><span class="line">pod update --verbose --no-repo-update</span><br></pre></td></tr></table></figure></p><p>如果提示找不到库，则可去掉<code>--no-repo-update</code>。</p><p>在CocoaPods 中，有几种设置类库版本的方法。如：</p><p>>= 1.10.X 会根据本地的 CocoaPods 源列表，导入不低于 1.10.X 版本的类库。</p><p>~&gt; 1.10.X 会根据本地的 CocoaPods 源列表，介于 1.10.X~1.11.0 之前版本的类库。 建议锁定版本，便于团队开发。如，指定 1.10.0 版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod &apos;类库名&apos;, &apos;1.10.0&apos;</span><br></pre></td></tr></table></figure><p>清除 Cocoapods 本地缓存<br>特殊情况下，由于网络或者别的原因，通过 CocoaPods 下载的文件可能会有问题。<br>这时候可以删除 CocoaPods 的缓存(~/Library/Caches/CocoaPods/Pods/Release 目录)，再次导入即可。</p><p>关于 CocoaPods 的更多内容，可以参考 <a href="https://cocoapods.org/" target="_blank" rel="noopener">CocoaPods 文档</a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;CocoaPods 安装&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果网络已经翻墙，在终端中运行如下命令直接安装：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gem install cocoapods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://willwei.me/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://willwei.me/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS自定义视图四个角的圆角</title>
    <link href="http://willwei.me/2017/02/16/iOS%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A7%86%E5%9B%BE%E5%9B%9B%E4%B8%AA%E8%A7%92%E7%9A%84%E5%9C%86%E8%A7%92/"/>
    <id>http://willwei.me/2017/02/16/iOS自定义视图四个角的圆角/</id>
    <published>2017-02-16T16:13:53.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>最近有一个需求：一个视图下面两个角需要圆角，而上面两个角不需要。</p><p>可以使用UIBezierPath和CAShapeLayer结合实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ (UIBezierPath *)bezierPathWithRoundedRect:(CGRect)rect byRoundingCorners:(UIRectCorner)corners cornerRadii:(CGSize)cornerRadii;</span><br></pre></td></tr></table></figure><p>参数corners指定了想要需要成为圆角的角。可选值为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">typedef NS_OPTIONS(NSUInteger, UIRectCorner) &#123;</span><br><span class="line">    UIRectCornerTopLeft     = 1 &lt;&lt; 0,</span><br><span class="line">    UIRectCornerTopRight    = 1 &lt;&lt; 1,</span><br><span class="line">    UIRectCornerBottomLeft  = 1 &lt;&lt; 2,</span><br><span class="line">    UIRectCornerBottomRight = 1 &lt;&lt; 3,</span><br><span class="line">    UIRectCornerAllCorners  = ~0UL</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>使用示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">UIView *view = [[UIView alloc] initWithFrame:CGRectMake(10, 10, 50, 50)];</span><br><span class="line">view.backgroundColor = [UIColor redColor];</span><br><span class="line">[self.view addSubview:view];</span><br><span class="line">    </span><br><span class="line">UIBezierPath *maskPath = [UIBezierPath bezierPathWithRoundedRect:view.bounds byRoundingCorners:UIRectCornerBottomLeft | UIRectCornerBottomRight cornerRadii:CGSizeMake(10, 10)];</span><br><span class="line">CAShapeLayer *maskLayer = [[CAShapeLayer alloc] init];</span><br><span class="line">maskLayer.frame = view.bounds;</span><br><span class="line">maskLayer.path = maskPath.CGPath;</span><br><span class="line">view.layer.mask = maskLayer;</span><br></pre></td></tr></table></figure><p>如果需要将UIView的4个角全部都为圆角，做法相当简单，只需设置其Layer的cornerRadius属性即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近有一个需求：一个视图下面两个角需要圆角，而上面两个角不需要。&lt;/p&gt;
&lt;p&gt;可以使用UIBezierPath和CAShapeLayer结合实现&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ (UIBezierPath *)bezierPathWithRoundedRect:(CGRect)rect byRoundingCorners:(UIRectCorner)corners cornerRadii:(CGSize)cornerRadii;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参数corners指定了想要需要成为圆角的角。可选值为：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;typedef NS_OPTIONS(NSUInteger, UIRectCorner) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIRectCornerTopLeft     = 1 &amp;lt;&amp;lt; 0,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIRectCornerTopRight    = 1 &amp;lt;&amp;lt; 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIRectCornerBottomLeft  = 1 &amp;lt;&amp;lt; 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIRectCornerBottomRight = 1 &amp;lt;&amp;lt; 3,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIRectCornerAllCorners  = ~0UL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://willwei.me/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://willwei.me/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS如何利用runtime向Category添加属性</title>
    <link href="http://willwei.me/2017/02/05/iOS%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8runtime%E5%90%91Category%E6%B7%BB%E5%8A%A0%E5%B1%9E%E6%80%A7/"/>
    <id>http://willwei.me/2017/02/05/iOS如何利用runtime向Category添加属性/</id>
    <published>2017-02-05T14:56:14.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Associated-Objects"><a href="#Associated-Objects" class="headerlink" title="Associated Objects"></a>Associated Objects</h1><ul><li>使用runtime需导入头文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;objc/runtime.h&gt;</span><br></pre></td></tr></table></figure><ul><li>以下方法允许对象在运行时通过键关联任意值</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">objc_getAssociatedObject(id object, const void *key);</span><br><span class="line">objc_setAssociatedObject(id object, const void *key, id value, objc_AssociationPolicy policy);</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Associative-Object-Behaviors"><a href="#Associative-Object-Behaviors" class="headerlink" title="Associative Object Behaviors"></a>Associative Object Behaviors</h2><ul><li>在runtime.h中的定义</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Policies related to associative references.</span><br><span class="line"> * These are options to objc_setAssociatedObject()</span><br><span class="line"> */</span><br><span class="line">typedef OBJC_ENUM(uintptr_t, objc_AssociationPolicy) &#123;</span><br><span class="line">    OBJC_ASSOCIATION_ASSIGN = 0,           /**&lt; Specifies a weak reference to the associated object. */</span><br><span class="line">    OBJC_ASSOCIATION_RETAIN_NONATOMIC = 1, /**&lt; Specifies a strong reference to the associated object. </span><br><span class="line">                                            *   The association is not made atomically. */</span><br><span class="line">    OBJC_ASSOCIATION_COPY_NONATOMIC = 3,   /**&lt; Specifies that the associated object is copied. </span><br><span class="line">                                            *   The association is not made atomically. */</span><br><span class="line">    OBJC_ASSOCIATION_RETAIN = 01401,       /**&lt; Specifies a strong reference to the associated object.</span><br><span class="line">                                            *   The association is made atomically. */</span><br><span class="line">    OBJC_ASSOCIATION_COPY = 01403          /**&lt; Specifies that the associated object is copied.</span><br><span class="line">                                            *   The association is made atomically. */</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>根据枚举类型objc_AssociationPolicy定义的行为，可以将值关联到对象上</li></ul><table><thead><tr><th style="text-align:center">Behavior</th><th style="text-align:center">@property Equivalent</th></tr></thead><tbody><tr><td style="text-align:center">OBJC_ASSOCIATION_ASSIGN</td><td style="text-align:center">@property (assign) 或 @property (unsafe_unretained)</td></tr><tr><td style="text-align:center">OBJC_ASSOCIATION_RETAIN_NONATOMIC</td><td style="text-align:center">@property (nonatomic, strong)</td></tr><tr><td style="text-align:center">OBJC_ASSOCIATION_COPY_NONATOMIC</td><td style="text-align:center">@property (nonatomic, copy)</td></tr><tr><td style="text-align:center">OBJC_ASSOCIATION_RETAIN</td><td style="text-align:center">@property (atomic, strong)</td></tr><tr><td style="text-align:center">OBJC_ASSOCIATION_COPY</td><td style="text-align:center">@property (atomic, copy)</td></tr></tbody></table><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><h3 id="NSObject-AssociatedObject-h"><a href="#NSObject-AssociatedObject-h" class="headerlink" title="NSObject+AssociatedObject.h"></a>NSObject+AssociatedObject.h</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@interface NSObject (AssociatedObject)</span><br><span class="line">@property (nonatomic, strong) id associatedObject;</span><br><span class="line">@end</span><br></pre></td></tr></table></figure><h3 id="NSObject-AssociatedObject-m"><a href="#NSObject-AssociatedObject-m" class="headerlink" title="NSObject+AssociatedObject.m"></a>NSObject+AssociatedObject.m</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@implementation NSObject (AssociatedObject)</span><br><span class="line">@dynamic associatedObject;</span><br><span class="line"></span><br><span class="line">- (void)setAssociatedObject:(id)object &#123;</span><br><span class="line">     objc_setAssociatedObject(self, @selector(associatedObject), object, OBJC_ASSOCIATION_RETAIN_NONATOMIC);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (id)associatedObject &#123;</span><br><span class="line">    return objc_getAssociatedObject(self, @selector(associatedObject));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通常建议键是一个静态字符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">static char kAssociatedObjectKey;</span><br><span class="line">objc_getAssociatedObject(self, &amp;kAssociatedObjectKey);</span><br></pre></td></tr></table></figure><p>当然，存在一个简单得多的解决方案：只需使用selector。</p><p>更详细的参考请访问[<a href="http://nshipster.com/associated-objects/" target="_blank" rel="noopener">Associated Objects</a>]</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Associated-Objects&quot;&gt;&lt;a href=&quot;#Associated-Objects&quot; class=&quot;headerlink&quot; title=&quot;Associated Objects&quot;&gt;&lt;/a&gt;Associated Objects&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;使用runtime需导入头文件&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#import &amp;lt;objc/runtime.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;以下方法允许对象在运行时通过键关联任意值&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;objc_getAssociatedObject(id object, const void *key);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc_setAssociatedObject(id object, const void *key, id value, objc_AssociationPolicy policy);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://willwei.me/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://willwei.me/tags/iOS/"/>
    
      <category term="runtime" scheme="http://willwei.me/tags/runtime/"/>
    
      <category term="Category" scheme="http://willwei.me/tags/Category/"/>
    
  </entry>
  
  <entry>
    <title>写在2017开端</title>
    <link href="http://willwei.me/2017/02/04/%E5%86%99%E5%9C%A82017%E5%BC%80%E7%AB%AF/"/>
    <id>http://willwei.me/2017/02/04/写在2017开端/</id>
    <published>2017-02-04T09:59:05.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2016"><a href="#2016" class="headerlink" title="2016"></a>2016</h2><p>过去的2016，是自己的本命年，也是自己毕业后在深圳度过的第一个完整年份。这一年，算是自己的一个转折之年，没有了初入社会的忐忑，在深圳安定了下来，学到了许许多多的东西，也结交了很多好朋友。</p><p>这一年收获无疑是巨大的，对后续人生影响是不可估量的，感谢2016。</p><h2 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h2><p>2017年，是安心学习沉淀自己技术的一年，牢记。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;2016&quot;&gt;&lt;a href=&quot;#2016&quot; class=&quot;headerlink&quot; title=&quot;2016&quot;&gt;&lt;/a&gt;2016&lt;/h2&gt;&lt;p&gt;过去的2016，是自己的本命年，也是自己毕业后在深圳度过的第一个完整年份。这一年，算是自己的一个转折之年，没有了初入社会的忐
      
    
    </summary>
    
      <category term="随笔" scheme="http://willwei.me/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://willwei.me/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>我的第一个博客发文</title>
    <link href="http://willwei.me/2017/01/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E5%8F%91%E6%96%87/"/>
    <id>http://willwei.me/2017/01/22/我的第一个博客发文/</id>
    <published>2017-01-22T15:59:51.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>为了更好的明天</p></blockquote><p>第一个博客采用了<a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">hexo</a>，主题用的是<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">yilia</a>，在此感谢为此做出贡献的大神。</p><p>2016年就想搭建自己的博客来总结自己的得失，一直拖到现在才搭建好。刚入社会的坎坷已经过去，陆陆续续学到了很多东西，是时候记录总结了。以后会陆陆续续开始写博客啦，还可以锻炼下自己渣到吐的文字表达能力，加油~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;为了更好的明天&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第一个博客采用了&lt;a href=&quot;https://github.com/hexojs/hexo&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo&lt;/a&gt;，主题用的是&lt;
      
    
    </summary>
    
      <category term="随笔" scheme="http://willwei.me/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://willwei.me/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://willwei.me/2016/12/01/hello-world/"/>
    <id>http://willwei.me/2016/12/01/hello-world/</id>
    <published>2016-12-01T00:00:00.000Z</published>
    <updated>2019-02-16T13:13:58.971Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://willwei.me/tags/Hexo/"/>
    
  </entry>
  
</feed>
